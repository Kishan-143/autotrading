{"version":3,"sources":["routes/SymbolPrice.js","routes/OrderPlace.js","routes/AddSymbol.js","routes/RemoveSymbol.js","routes/OrderPlaceSymbol.js","routes/Watchlist.js","routes/OrderModify.js","routes/PendingModify.js","routes/OrderBook.js","routes/PermanentSymbols.js","routes/UserDashboard.js","routes/UserLogin.js","routes/Temp.js","routes/SetFunds.js","routes/SetUser.js","routes/AdminDashboard.js","routes/AdminLogin.js","App.js","index.js"],"names":["React","Component","OrderPlace","props","handleCloseDialog","setState","prevState","open","handleOpenDialog","handleSelectMarket","e","market","target","value","fetch","method","headers","body","JSON","stringify","then","res","json","symbols","catch","err","error","msg","handleChangeSymbol","state","selectedSymbol","handleChangeSide","a","side","targetPerc","targetPrice","symbolPrice","stoplossPerc","stoplossPrice","calculateMargin","handleChangeproductType","productType","handleChangeorderType","orderType","handleChangeOrderprice","handleChangelimitPrice","limitPrice","orderprice","handleqty","qty","handleChangeistarget","isTarget","handleChangeisstoploss","isstoploss","handleChangetargetPrice","handleChangestoplossPrice","handleSubmit","username","cookie","load","hashval","alert","parseInt","toLowerCase","margin","s","fund","userFunds","levrage","isSubmit","changePrice","symbol","price","buyHandle","buycolor","sellcolor","sellHandle","intraHandle","intracolor","cnccolor","cncHandle","tagetPerc","loggedIn","rememberMe","code","classes","this","Button","color","onClick","Dialog","disableBackdropClick","disableEscapeKeyDown","orderplace","onClose","DialogTitle","id","Toolbar","className","title","TextField","size","default","variant","label","DialogContent","dialogPaper","Grid","container","spacing","item","xs","justify","InputLabel","Select","select","labelId","onChange","MenuItem","map","button","RadioGroup","FormControlLabel","control","Radio","placeholder","disabled","type","textfield2","defaultValue","InputProps","startAdornment","InputAdornment","position","width","Typography","DialogActions","withStyles","theme","root","display","justifyContent","flexWrap","height","textfeild","dialogtitle","fontSize","align","header","fontWeight","fontStyle","flexGrow","sell","withTheme","data2","require","get_all_symbol_list","data1","sort","AddSymbol","from","types","handleSelectType","getSymbolsall","watchlist","indexOf","addWatchlist","searchValue","handleChangeMarket","filterPosts","handleSearch","posts","query","x","filter","post","includes","toUpperCase","results","open1","fullWidth","name","ONMOUSEOVER","NativeSelect","user","option","hight","list","RemoveSymbol","handleRemoveSymbol","OrderPlaceSymbol","calculateAlreadyBuySellQty","buyQty","sellQty","i","activeOrders","length","getSymbolDetails","closeBuy","closeSell","setValue","colorSide","calculateCom","calculateLtype","colorOrder","handlelotqty","lotqty","symbolDetails","lotsize","calculateTargetPerc","handleChangetargetPerc","calculateStoplossPerc","perc","qty1","alreadyQty","Ltype","com","parseFloat","Math","max","property","document","getElementById","style","backgroundColor","colorProduct","getFunds","changeFund","passOrder","data","markets","m","orderplacesymbol","textfield3","floor","F","textfield4","buyButton","sellButton","intraButton","cncButton","prevOrder","Watchlist1","y","res3","prices2","prices","addSymbols","tick","setBuySell","isBuy","isSell","handleBuy","handleSell","componentDidUpdate","isAdd","interval","setInterval","TableContainer","component","Paper","Table","TableBody","TableRow","TableCell","userFund","indication","ltp","remove","background","fontsize","toolbar","padding","maxHeight","OrderModify","order","orderid","changeOrder","stoploss","PendingModify","closeOrder","status","product","ordermodify","ordeprice","ordeType","COM","passActiveOrders","OrderBook","s1","push","res2","pendingOrders","handleChangeActiveButton","activecolor","pendingcolor","completecolor","cancelcolor","handleChangeCompleteButton","handleChangePendingButton","handleChangeCancelButton","handleCancel","cancelOrders","handleExitAll","profit","handleExit","completeOrders","calculateProfit","myfunc","b","handlePendingModify","pendingModify","symbolOrders","setActiveOrders","completeorders","TableHead","entrytime","entryprice","exittime","exitprice","activeorders","color1","color2","pendingorders","ordertime","cancelorders","orderbook","PermanentSymbols","paper","elevation","subtitle","prev_close","PF","wpaper","subsubtitle","UserDashboard","checkLogin","marketStatus","handleLogout","removeSymbol","removeSymbols","funds","clearInterval","Link","href","AppBar","Watchlist","UserLogin","handleChangeUsername","handleChangePassword","handleRemember","checked","password","save","path","maxAge","val","textfield","Checkbox","for","field","to","link","UserSignup","handleChangeName","handleChangeCPassword","handleChangeSecretCode","cpassword","secretcode","SetFunds","handleChangeFunds","userfunds","email","key","handleSelectUsers","users","setfunds","LINTRAEQ","LCNCEQ","LINTRAFUTBUY","LINTRAFUTSELL","LCNCFUTBUY","LINTRAOPBUY","LINTRAOPSELL","LCNCOPBUY","COMEQ","COMFUT","COMOP","AdminDashboard","handleAdduser","adduserclick","handleSendClick","errors","handleClickOpen","handleChangeEmail","handleDeleteUser","p","Update_symbols","handleStart","NSE","MCX","handleStop","handleCloseMarket","adduser","u","AdminLogin","hashpassword","Container","App","ReactDOM","render","StrictMode"],"mappings":"0SAI0BA,IAAMC,U,oIC2E1BC,E,kDACF,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoERC,kBAAoB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,cAAe,SAzEP,EA6EnBC,iBAAmB,WACf,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,cAAe,SAjFP,EAqFnBE,mBAAqB,SAACC,GAElB,EAAKL,SAAS,CAACM,OAAOD,EAAEE,OAAOC,QAC/BC,MAAM,mBAAoB,CACtBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,KAAST,EAAEE,OAAOC,MAClB,KAAS,SAGhBO,OACAA,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKhB,SAAS,CAACkB,QAAQF,EAAG,QAE7BG,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UAtGZ,EAyGnBC,mBAAqB,SAAClB,GAClBI,MAAM,sBAAuB,CACzBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,QAAY,CAAC,EAAKU,MAAMC,gBACxB,OAAU,EAAKD,MAAMlB,WAG5BS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,OAELG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,SAG7Bb,MAAM,kBAAmB,CACrBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,OAAWT,EAAEE,OAAOC,MACpB,OAAU,EAAKgB,MAAMlB,WAG5BS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,OAELG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,SAE7B,EAAKtB,SAAS,CAACyB,eAAepB,EAAEE,OAAOC,SAvIxB,EAyInBkB,iBAzImB,uCAyIA,WAAOrB,GAAP,SAAAsB,EAAA,6DACf,EAAK3B,SAAS,CAAC4B,KAAKvB,IACd,OAAHA,GACC,EAAKL,SAAS,CAAC6B,YAAa,EAAKL,MAAMM,YAAY,EAAKN,MAAMO,aAAa,EAAKP,MAAMO,YAAa,MAEjG,QAAH1B,GACC,EAAKL,SAAS,CAAC6B,aAAc,EAAKL,MAAMM,YAAY,EAAKN,MAAMO,aAAa,EAAKP,MAAMO,YAAa,MAElG,QAAH1B,GACC,EAAKL,SAAS,CAACgC,cAAe,EAAKR,MAAMS,cAAc,EAAKT,MAAMO,aAAa,EAAKP,MAAMO,YAAa,MAErG,OAAH1B,GACC,EAAKL,SAAS,CAACgC,eAAgB,EAAKR,MAAMS,cAAc,EAAKT,MAAMO,aAAa,EAAKP,MAAMO,YAAa,MAZ7F,SAcT,EAAKG,kBAdI,2CAzIA,wDAyJnBC,wBAzJmB,uCAyJO,WAAO9B,GAAP,SAAAsB,EAAA,6DACtB,EAAK3B,SAAS,CAACoC,YAAY/B,IADL,SAEhB,EAAK6B,kBAFW,2CAzJP,wDA6JnBG,sBA7JmB,uCA6JK,WAAOhC,GAAP,SAAAsB,EAAA,6DACpB,EAAK3B,SAAS,CAACsC,UAAUjC,EAAEE,OAAOC,QADd,SAEd,EAAK+B,yBAFS,2CA7JL,wDAiKnBC,uBAjKmB,uCAiKM,WAAOnC,GAAP,SAAAsB,EAAA,6DACrB,EAAK3B,SAAS,CAACyC,WAAWpC,EAAEE,OAAOC,QADd,SAEf,EAAK+B,yBAFU,2CAjKN,wDAqKnBA,uBArKmB,sBAqKM,sBAAAZ,EAAA,4DACI,UAAtB,EAAKH,MAAMc,UACV,EAAKtC,SAAS,CAAC0C,WAAW,EAAKlB,MAAMO,cAErC,EAAK/B,SAAS,CAAC0C,WAAW,EAAKlB,MAAMiB,aAJpB,SAMf,EAAKP,kBANU,2CArKN,EA6KnBS,UA7KmB,uCA6KP,WAAOtC,GAAP,SAAAsB,EAAA,6DACR,EAAK3B,SAAS,CAAC4C,IAAIvC,EAAEE,OAAOC,QADpB,SAEF,EAAK0B,kBAFH,2CA7KO,wDAkLnBW,qBAAuB,SAACxC,GACI,GAArB,EAAKmB,MAAMsB,UACV,EAAK9C,SAAS,CAAC8C,UAAS,IACJ,GAArB,EAAKtB,MAAMsB,UACV,EAAK9C,SAAS,CAAC8C,UAAS,KAtLb,EAwLnBC,uBAAyB,SAAC1C,GACI,GAAvB,EAAKmB,MAAMwB,YACV,EAAKhD,SAAS,CAACgD,YAAW,IACJ,GAAvB,EAAKxB,MAAMwB,YACV,EAAKhD,SAAS,CAACgD,YAAW,KA5Lf,EA8LnBC,wBAA0B,SAAC5C,GACH,OAAjB,EAAKmB,MAAMI,OACV,EAAK5B,SAAS,CAAC8B,YAAYzB,EAAEE,OAAOC,QACpC,EAAKR,SAAS,CAAC6B,YAAaxB,EAAEE,OAAOC,MAAM,EAAKgB,MAAMO,aAAa,EAAKP,MAAMO,YAAa,OAE3E,QAAjB,EAAKP,MAAMI,OACV,EAAK5B,SAAS,CAAC8B,YAAYzB,EAAEE,OAAOC,QACpC,EAAKR,SAAS,CAAC6B,aAAcxB,EAAEE,OAAOC,MAAM,EAAKgB,MAAMO,aAAa,EAAKP,MAAMO,YAAa,QArMjF,EAwMnBmB,0BAA4B,SAAC7C,GACL,OAAjB,EAAKmB,MAAMI,OACV,EAAK5B,SAAS,CAACiC,cAAc5B,EAAEE,OAAOC,QACtC,EAAKR,SAAS,CAACgC,eAAgB3B,EAAEE,OAAOC,MAAM,EAAKgB,MAAMO,aAAa,EAAKP,MAAMO,YAAa,OAE9E,QAAjB,EAAKP,MAAMI,OACV,EAAK5B,SAAS,CAACiC,cAAc5B,EAAEE,OAAOC,QACtC,EAAKR,SAAS,CAACgC,cAAe3B,EAAEE,OAAOC,MAAM,EAAKgB,MAAMO,aAAa,EAAKP,MAAMO,YAAa,QA/MlF,EAkNnBoB,aAAe,SAAC9C,GACZ,IAAI+C,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZC,MAAM,0BACN/C,MAAM,mBAAoB,CACtBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAWsC,EACX,QAAUG,EACV,KAAO,CACH,UAAY,EAAK/B,MAAMc,UACvB,IAAM,EAAKd,MAAMoB,IACjB,OAAS,EAAKpB,MAAMC,eACpB,WAAa,EAAKD,MAAMY,YACxB,MAAQqB,SAAS,EAAKjC,MAAMiB,YAC5B,SAAWgB,SAAS,EAAKjC,MAAMS,eAC/B,OAASwB,SAAS,EAAKjC,MAAMM,aAC7B,KAAO,EAAKN,MAAMI,KAAK8B,cACvB,OAAS,EAAKlC,MAAMlB,OACpB,MAAQmD,SAAS,EAAKjC,MAAMkB,YAC5B,OAASe,SAAS,EAAKjC,MAAMmC,QAC7B,MAAQ,aAInB5C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,OAELG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UAzPd,EA6PnBY,gBA7PmB,sBA6PD,kCAAAP,EAAA,6DACViC,EAAI,IAAO,EAAKpC,MAAMlB,OACtBuD,EAAO,EAAKrC,MAAMsC,UAAUF,GAChCA,EAAI,IAAM,EAAKpC,MAAMY,YAAc,EAAKZ,MAAMlB,OAC1CyD,EAAU,EAAKvC,MAAMsC,UAAUF,IAC/BD,EAAU,EAAKnC,MAAMkB,WAAW,EAAKlB,MAAMoB,IAAKmB,IACzCF,EACP,EAAK7D,SAAS,CAACgE,UAAS,IAExB,EAAKhE,SAAS,CAACgE,UAAS,IATd,SAWR,EAAKhE,SAAS,CAAC2D,OAAOA,EAAOE,KAAKA,IAX1B,2CA7PC,EA2QnBI,YA3QmB,uCA2QL,WAAOC,EAAOC,GAAd,SAAAxC,EAAA,6DACV,EAAK3B,SAAS,CAAC+B,YAAYoC,IADjB,SAEJ,EAAK5B,yBAFD,2CA3QK,0DA+QnB6B,UAAY,WACR,EAAKpE,SAAS,CAACqE,SAAS,YACxB,EAAKrE,SAAS,CAACsE,UAAU,YACzB,EAAK5C,iBAAiB,QAlRP,EAqRnB6C,WAAa,WACT,EAAKvE,SAAS,CAACqE,SAAS,YACxB,EAAKrE,SAAS,CAACsE,UAAU,cACzB,EAAK5C,iBAAiB,SAxRP,EA0RnB8C,YAAc,WACV,EAAKxE,SAAS,CAACyE,WAAW,YAC1B,EAAKzE,SAAS,CAAC0E,SAAS,aACxB,EAAKvC,wBAAwB,UA7Rd,EA+RnBwC,UAAY,WACR,EAAK3E,SAAS,CAACyE,WAAW,YAC1B,EAAKzE,SAAS,CAAC0E,SAAS,YACxB,EAAKvC,wBAAwB,QAhS/B,EAAKX,MAAQ,CACT4B,SAAW,GACXlD,KAAO,CACH,YAAe,GAEnBwC,WAAa,EACbpC,OAAS,IACTY,QAAU,GACVO,eAAiB,IACjBM,YAAY,EACZH,KAAK,GACLQ,YAAY,GACZE,UAAU,GACVG,WAAW,IACXX,YAAY,IACZ8C,UAAU,IACV3C,cAAc,IACdD,aAAa,IACbc,UAAS,EACTE,YAAW,EACXJ,IAAI,EACJkB,UAAY,GACZH,OAAQ,EACRE,KAAO,EACPgB,UAAW,EACXC,YAAa,EACbzD,MAAQ,GACRgD,SAAW,UACXC,UAAY,UACZG,WAAa,UACbC,SAAW,UACXV,UAAW,GAjCE,E,qDAqCnB,WAAqB,IAAD,OACZZ,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,sBAAuB,CACzBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAWsC,MAGlBrC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACW,KAAVA,EAAI+D,MACH,EAAK/E,SAAS,CAAC8D,UAAU9C,EAAG,UAGnCG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,W,kCAIjC,c,oBAiOA,WACI,IAAQ0D,EAAYC,KAAKnF,MAAjBkF,QACR,OACI,gCACI,cAACE,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASH,KAAK9E,iBAAtC,wBACA,eAACkF,EAAA,EAAD,CAAQC,sBAAoB,EAACC,sBAAoB,EACjDrF,KAAM+E,KAAKzD,MAAMtB,KAAKsF,WACtBC,QAASR,KAAKlF,kBACd,kBAAgB,IAHhB,UAIA,cAAC2F,EAAA,EAAD,CAAaC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,qBAAKC,UAAWb,EAAQc,MAAxB,2BAGA,cAACC,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,eAAe3F,MAAOyE,KAAKzD,MAAMO,mBAGlG,cAACqE,EAAA,EAAD,UACI,qBAAKP,UAAWb,EAAQqB,YAAxB,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,eAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACA,cAACE,EAAA,EAAD,CAAYjB,GAAG,eAAf,oBACA,eAACkB,EAAA,EAAD,CAAQhB,UAAWb,EAAQ8B,OAC3BC,QAAQ,eACRpB,GAAG,eACHQ,MAAM,SACNa,SAAU/B,KAAK7E,mBAJf,UAMA,cAAC6G,EAAA,EAAD,CAAUzG,MAAM,KAAhB,oBACA,cAACyG,EAAA,EAAD,CAAUzG,MAAM,KAAhB,8BACA,cAACyG,EAAA,EAAD,CAAUzG,MAAM,KAAhB,kCAMZ,cAAC8F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACwB,KAAnB1B,KAAKzD,MAAMlB,OAAa,wBACzB,8BACI,eAACgG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACA,cAACE,EAAA,EAAD,CAAYjB,GAAG,eAAf,oBACA,cAACkB,EAAA,EAAD,CAAQhB,UAAWb,EAAQ8B,OAC3BC,QAAQ,eACRpB,GAAG,eACHQ,MAAM,SACNa,SAAU/B,KAAK1D,mBAJf,SAMC0D,KAAKzD,MAAMN,QAAQgG,KAAI,SAAAhD,GAAM,OAC1B,cAAC+C,EAAA,EAAD,CAAUzG,MAAO0D,EAAjB,SAA0BA,kBAQ1C,cAACoC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SAEI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,gCACI,cAACzB,EAAA,EAAD,CAAQW,UAAWb,EAAQmC,OAAQxB,GAAG,MAAMO,QAAQ,YAAYf,MAAOF,KAAKzD,MAAM6C,SAAUe,QAASH,KAAKb,UAA1G,iBACA,cAACc,EAAA,EAAD,CAAQW,UAAWb,EAAQmC,OAAQxB,GAAG,OAAOO,QAAQ,YAAYf,MAAOF,KAAKzD,MAAM8C,UAAWc,QAASH,KAAKV,WAA5G,yBAIZ,cAAC+B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,gCACI,cAACzB,EAAA,EAAD,CAAQW,UAAWb,EAAQmC,OAAQxB,GAAG,QAAQO,QAAQ,YAAYf,MAAOF,KAAKzD,MAAMiD,WAAYW,QAASH,KAAKT,YAA9G,sBACA,cAACU,EAAA,EAAD,CAAQW,UAAWb,EAAQmC,OAAQxB,GAAG,MAAMO,QAAQ,YAAYf,MAAOF,KAAKzD,MAAMkD,SAAUU,QAASH,KAAKN,UAA1G,wBAIZ,cAAC2B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,eAACS,EAAA,EAAD,CAAYJ,SAAU/B,KAAK5C,sBAA3B,UACA,cAACgF,EAAA,EAAD,CAAkB7G,MAAM,SAAS8G,QAAS,cAACC,EAAA,EAAD,IAAWpB,MAAM,WAC3D,cAACkB,EAAA,EAAD,CAAkB7G,MAAM,QAAQ8G,QAAS,cAACC,EAAA,EAAD,IAAWpB,MAAM,mBAKtE,cAACG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UAC2B,SAAtB1B,KAAKzD,MAAMc,UACR,8BACA,cAACyD,EAAA,EAAD,CAAWG,QAAQ,WAAWF,KAAK,QAAQwB,YAAY,cAAcrB,MAAM,QAAQ3F,MAAOyE,KAAKzD,MAAMiB,WAAYuE,SAAU/B,KAAKzC,2BAGhI,8BACA,cAACuD,EAAA,EAAD,CAAWC,KAAK,QAAQyB,UAAQ,EAACxB,SAAO,EAACC,QAAQ,WAAWC,MAAM,eAAc3F,MAAOyE,KAAKzD,MAAMO,gBAGtG,cAACgE,EAAA,EAAD,CAAW2B,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,MAAM3F,MAAOyE,KAAKzD,MAAMoB,IAAKoE,SAAU/B,KAAKtC,YAEnH,6BAIR,cAAC2D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACzB,EAAA,EAAD,CAAQ1E,MAAM,SAAS4E,QAASH,KAAKpC,qBAAsBqD,QAAQ,YAAYf,MAAM,UAArF,0BAIZ,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACC1B,KAAKzD,MAAMsB,SACV,gCACA,cAACiD,EAAA,EAAD,CAAWF,UAAWb,EAAQ2C,WAAYH,YAAY,eAAerB,MAAM,eAAe3F,MAAOyE,KAAKzD,MAAMM,YAAakF,SAAU/B,KAAKhC,0BACxI,cAAC8C,EAAA,EAAD,CACMF,UAAWb,EAAQ2C,WACrBhC,GAAG,oBACHQ,MAAM,QACNyB,aAAa,GACb1B,QAAQ,WACR1F,MAAOyE,KAAKzD,MAAMK,WAClBgG,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAIvB,4BAGX,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACQ,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACzB,EAAA,EAAD,CAAQ+C,MAAM,QAAQzH,MAAM,WAAW4E,QAASH,KAAKlC,uBAAwBmD,QAAQ,YAAYf,MAAM,UAAvG,4BAIZ,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACC1B,KAAKzD,MAAMwB,WACV,gCACA,cAAC+C,EAAA,EAAD,CAAWF,UAAWb,EAAQ2C,WAAYH,YAAY,iBAAiBrB,MAAM,kBAAkB3F,MAAOyE,KAAKzD,MAAMS,cAAe+E,SAAU/B,KAAK/B,4BAC/I,cAAC6C,EAAA,EAAD,CACMF,UAAWb,EAAQ2C,WACrBhC,GAAG,oBACHQ,MAAM,QACNyB,aAAa,GACb1B,QAAQ,WACR1F,MAAOyE,KAAKzD,MAAMQ,aAClB6F,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAIvB,4BAGP,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,gCACI,eAACuB,EAAA,EAAD,WAAajD,KAAKzD,MAAMI,KAAxB,QAAmCqD,KAAKzD,MAAMkB,cAC9C,eAACwF,EAAA,EAAD,4BAA2BjD,KAAKzD,MAAMmC,iBAKlD,cAAC2C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SAC0B,GAArB1B,KAAKzD,MAAMwC,SACZ,8BACI,cAACkB,EAAA,EAAD,CAAQwC,KAAK,SAAStC,QAASH,KAAK9B,aAAc+C,QAAQ,YAAYf,MAAM,UAA5E,2BAGA,2DAC6BF,KAAKzD,MAAMqC,mBAQhE,cAACsE,EAAA,EAAD,UACI,cAACjD,EAAA,EAAD,CAAQE,QAASH,KAAKlF,kBAAmBoF,MAAM,UAA/C,gC,GA7dKvF,aAseRwI,eAxhBJ,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BH,YAAc,CACZkC,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBmC,UAAY,CACVhF,OAAS,MACTsE,MAAO,QAETN,WAAa,CACTM,MAAQ,SAEZd,OAAS,CACPc,MAAO,QAETW,YAAc,CACVC,SAAW,MACXC,MAAQ,UAEZC,OAAS,CACPpF,OAAS,MACTkF,SAAW,OACXG,WAAa,OACbC,UAAY,UAEdnD,MAAQ,CACNoD,SAAW,KAEbpC,OAAS,CACPZ,QAAU,WACV+B,MAAQ,SAEVkB,KAAO,CACHhE,MAAQ,cA2esB,CAAEiE,WAAW,GAAhChB,CAAwCvI,G,+DC/hBrDwJ,EAAQC,EAAQ,IAEpB,SAASC,IACP,IACIC,EAAQF,EAAQ,IAQpB,MAPI,sBAAOE,EAAK,IAAZ,YAAsBA,EAAK,QAA3B,YAAyCA,EAAK,UAA9C,YAA8DA,EAAK,UAAnE,YAAmFA,EAAK,SAAxF,YAAuGA,EAAK,WAA5G,YAA6HA,EAAK,YAC1HC,OAUd,IAuDMC,E,kDACF,WAAY5J,GAAQ,IAAD,8BACjB,cAAMA,IAkBRM,mBAAqB,SAACC,GACpB,EAAKL,SAAS,CAAC2J,KAAKtJ,EAAEE,OAAOC,QAAO,WACZ,OAAnB,EAAKgB,MAAMmI,MACZ,EAAK3J,SAAS,CAAC4J,MAAM,CAAC,MAAM,QAER,MAAnB,EAAKpI,MAAMmI,MACZ,EAAK3J,SAAS,CAAC4J,MAAM,CAAC,MAAM,KAAK,YAzBpB,EA6BnBC,iBAAmB,SAACxJ,GAClB,EAAKL,SAAS,CAAC0H,KAAKrH,EAAEE,OAAOC,QAAO,gBA9BnB,EAkCnBsJ,cAAgB,WACd,EAAK9J,SAAS,CACZkB,QAAQqI,OApCO,EAuCnBpG,aAAe,SAAC9C,GACd,IAAgE,GAA5D,EAAKP,MAAMiK,UAAUC,QAAQ,EAAKxI,MAAMC,iBAAyB,EAAKD,MAAMN,QAAQ8I,QAAQ,EAAKxI,MAAMC,iBAAiB,EAAE,CAC5H,IAAI2B,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAEZ9C,MAAM,0BAA2B,CAC/BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,OAAU,EAAKU,MAAMC,eACrB,SAAW2B,EACX,QAAUG,MAGfxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,KACL,EAAKjF,MAAMmK,aAAa,EAAKzI,MAAMC,gBAEnC,EAAKzB,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,WArEZ,EAyEnBC,mBAAqB,SAAClB,GAClB,EAAKL,SAAS,CAACyB,eAAepB,EAAEE,OAAOC,QACvC,EAAKR,SAAS,CAACkK,YAAY7J,EAAEE,OAAOC,SA3ErB,EA6EnB2J,mBAAqB,SAAC9J,GACpB,EAAKL,SAAS,CAACkB,QAAQmI,EAAMhJ,EAAEE,OAAOC,SAAQ,WAC5C,EAAK4J,YAAY,EAAK5I,MAAMN,QAAQ,EAAKM,MAAM0I,iBA/EhC,EAkFnBG,aAAe,SAAChK,GACd,EAAKL,SAAS,CAACkK,YAAY7J,EAAEE,OAAOC,QAAO,WACzC,EAAK4J,YAAY,EAAK5I,MAAMN,QAAQ,EAAKM,MAAM0I,iBApFhC,EAuFnBE,YAAc,SAACE,EAAOC,GACpB,IAAKA,GAAgB,IAAPA,EACV,OAAOD,EAEX,IAAIE,EAAKF,EAAMG,QAAO,SAACC,GACrB,QAAGA,EAAKC,SAASJ,EAAMK,kBAMzB,EAAK5K,SAAS,CAAC6K,QAAQL,IAAG,WACxB,EAAKxK,SAAS,CAAC8K,OAAM,QAjGvB,EAAKtJ,MAAQ,CACTN,QAAU,GACVO,eAAiB,IACjBuC,UAAW,EACXkG,YAAc,GACdW,QAAU,GACVjB,MAAQ,GACRD,KAAO,GACPjC,KAAO,GACPoD,OAAQ,GAXK,E,qDAcnB,WACE7F,KAAK6E,kB,kCAEP,c,oBAqFA,WACI,IAAQ9E,EAAYC,KAAKnF,MAAjBkF,QACR,OACQ,8BACE,eAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,8BACE,cAACX,EAAA,EAAD,CACEG,QAAQ,WACRvC,OAAO,SACPoH,WAAS,EACTpF,GAAG,SACHQ,MAAM,gBACN6E,KAAK,SACLhE,SAAY/B,KAAKoF,aACjBY,YAAehG,KAAK6E,oBAI1B,cAACxD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,8BACE,eAACwE,EAAA,EAAD,CAAcrF,UAAWb,EAAQ8B,OAC/BC,QAAQ,UACRpB,GAAG,UACHoF,WAAS,EACT/D,SAAU/B,KAAKkF,mBACfvC,aAAe,OALjB,UAOA,wBAAQpH,MAAM,KAAd,wBACA,wBAAQA,MAAM,SAAd,wBACA,wBAAQA,MAAM,WAAd,6BACA,wBAAQA,MAAM,WAAd,6BACA,wBAAQA,MAAM,UAAd,wBACA,wBAAQA,MAAM,YAAd,6BACA,wBAAQA,MAAM,YAAd,oCAKJ,cAAC8F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACqB,GAApBzB,KAAKzD,MAAMsJ,MACR,8BACE,eAACI,EAAA,EAAD,CAAcrF,UAAWb,EAAQ8B,OACjCC,QAAQ,UACRpB,GAAG,UACHoF,WAAS,EACT/D,SAAU/B,KAAK1D,mBACfqG,aAAe,OALf,UAOA,wBAAQpH,MAAM,OAAd,kBACCyE,KAAKzD,MAAMqJ,QAAQ3D,KAAI,SAAAiE,GAAI,OACxB,wBAAQ3K,MAAO2K,EAAMtF,UAAWb,EAAQoG,OAAxC,SACGD,YAKR,0BAEL,cAAC7E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,cAACzB,EAAA,EAAD,CAAQwC,KAAK,SAAStC,QAASH,KAAK9B,aAAc+C,QAAQ,YAAYf,MAAM,UAA5E,qC,GApKNvF,aA6KPwI,eApOJ,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BH,YAAc,CACZkC,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBmC,UAAY,CACVhF,OAAS,MACTsE,MAAO,QAETN,WAAa,CACTM,MAAQ,SAEZd,OAAS,CACPc,MAAO,QAETW,YAAc,CACVC,SAAW,MACXC,MAAQ,UAEZC,OAAS,CACPpF,OAAS,MACTkF,SAAW,OACXG,WAAa,OACbC,UAAY,UAEdnD,MAAQ,CACNoD,SAAW,KAEbpC,OAAS,CACPZ,QAAU,YAEZiD,KAAO,CACHhE,MAAQ,WAEZiG,OAAS,CACPnD,MAAM,QACNoD,MAAM,SACNC,KAAK,CACLrD,MAAM,YAkL0B,CAAEmB,WAAW,GAAhChB,CAAwCsB,GClMnD6B,G,kDACF,WAAYzL,GAAQ,IAAD,8BACjB,cAAMA,IAcRC,kBAAoB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,aAAc,SAnBN,EAuBnBC,iBAAmB,WACf,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,aAAc,SA3BN,EA+BnBE,mBAAqB,SAACC,GAClB,EAAKL,SAAS,CAACM,OAAOD,EAAEE,OAAOC,QAC/BC,MAAM,mBAAoB,CACtBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,KAAST,EAAEE,OAAOC,MAClB,KAAS,SAGhBO,OACAA,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKhB,SAAS,CAACkB,QAAQF,EAAG,QAE7BG,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA/CZ,EAkDnBkK,mBAAqB,SAACnL,GAClB,IAAI+C,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,6BAA8B,CAChCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,OAAU,EAAKhB,MAAMoE,OACrB,SAAWd,EACX,QAAUG,MAGfxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,MAEL,EAAK/E,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,SAG3Bb,MAAM,sBAAuB,CAC3BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,QAAW,CAAC,EAAKU,MAAMC,oBAG5BV,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,MAEL,EAAK/E,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA/F/B,EAAKE,MAAQ,CACTtB,KAAO,CACH,WAAc,GAElBgB,QAAU,GACVO,eAAiB,IACjBuC,UAAW,GARE,E,qDAWnB,c,kCAEA,c,oBAuFA,WACwBiB,KAAKnF,MAAjBkF,QACR,OACI,8BACI,cAACE,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASH,KAAKuG,mBAAtC,qB,GAzGW5L,aCoCrB6L,ID0ESrD,aAhKF,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BH,YAAc,CACZkC,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBmC,UAAY,CACVhF,OAAS,MACTsE,MAAO,QAETN,WAAa,CACTM,MAAQ,SAEZd,OAAS,CACPc,MAAO,QAETW,YAAc,CACVC,SAAW,MACXC,MAAQ,UAEZC,OAAS,CACPpF,OAAS,MACTkF,SAAW,OACXG,WAAa,OACbC,UAAY,UAEdnD,MAAQ,CACNoD,SAAW,KAEbpC,OAAS,CACPZ,QAAU,WACV+B,MAAQ,SAEVkB,KAAO,CACHhE,MAAQ,cAmHoB,CAAEiE,WAAW,GAAhChB,CAAwCmD,I,kDCzEnD,WAAYzL,GAAQ,IAAD,8BACjB,cAAMA,IAqCR4L,2BAA6B,WAGzB,IAFA,IAAIC,EAAS,EACTC,EAAU,EACNC,EAAE,EAAGA,EAAE,EAAK/L,MAAMgM,aAAaC,OAAQF,IACS,OAAjD,EAAK/L,MAAMgM,aAAaD,GAAGjK,KAAK8B,gBAC/BiI,GAAU,EAAK7L,MAAMgM,aAAaD,GAAGjJ,KAEW,QAAjD,EAAK9C,MAAMgM,aAAaD,GAAGjK,KAAK8B,gBAC/BkI,GAAW,EAAK9L,MAAMgM,aAAaD,GAAGjJ,KAG9C,EAAK5C,SAAS,CACV2L,OAAOA,EACPC,QAAQA,KAnDG,EAsDnBI,iBAAmB,SAACpI,GAEhB,OADY0F,EAAQ,IACP1F,IAxDE,EAyEnB7D,kBAAoB,WAChB,EAAKC,SAAS,CACVE,KAAK,2BACE,EAAKsB,MAAMtB,MADd,kBAEC,oBAAoB,MAE3B,WACyB,OAAnB,EAAKJ,MAAM8B,MACX,EAAK9B,MAAMmM,SAAS,EAAKzK,MAAMC,gBAEZ,QAAnB,EAAK3B,MAAM8B,MACX,EAAK9B,MAAMoM,UAAU,EAAK1K,MAAMC,oBApFzB,EAyFnBtB,iBAAmB,WACf,EAAKH,SAAS,CACVE,KAAK,2BACE,EAAKsB,MAAMtB,MADd,kBAEC,oBAAoB,OA7Fd,EAkGnBiM,SAAW,WACP,EAAKnM,SAAS,CACVyB,eAAiB,EAAK3B,MAAMoE,OAC5BtC,KAAO,EAAK9B,MAAM8B,KAClBtB,OAAS,EAAKR,MAAMQ,SACtB,WACE,EAAK8L,UAAU,EAAKtM,MAAM8B,MAC1B,EAAKyK,mBAzGM,EA6GnB3K,iBAAmB,SAACrB,GAChB,EAAKL,SAAS,CAAC4B,KAAKvB,EAAEE,OAAOC,QAAO,WAChC,EAAK8L,iBACL,EAAKpK,sBAhHM,EAoHnBC,wBAA2B,SAAC9B,GACxB,EAAKL,SAAS,CAACoC,YAAY/B,EAAEE,OAAOC,SArHrB,EAwHnB6B,sBAAwB,SAAChC,GACrB,EAAKL,SAAS,CAACsC,UAAUjC,EAAEE,OAAOC,QAAO,WACrC,EAAK+L,iBA1HM,EA8HnB/J,uBAAyB,SAACnC,GACtB,EAAKL,SAAS,CAACyC,WAAWpC,EAAEE,OAAOC,SA/HpB,EAkInBmC,UAAY,SAACtC,GACT,EAAKL,SAAS,CAAC4C,IAAIvC,EAAEE,OAAOC,SAnIb,EAsInBgM,aAAe,SAACnM,GACZ,EAAKL,SAAS,CAACyM,OAAOpM,EAAEE,OAAOC,QAAO,WAClC,EAAKR,SAAS,CAAC4C,IAAI,EAAKpB,MAAMkL,cAAcC,QAAQ,EAAKnL,MAAMiL,aAxIpD,EA4InB5J,qBAAuB,SAACxC,GACG,GAAvB,EAAKmB,MAAMsB,SAAmB,EAAK9C,SAAS,CAAC8C,UAAS,IAAU,EAAK9C,SAAS,CAAC8C,UAAS,KA7IzE,EAgJnBC,uBAAyB,SAAC1C,GACG,GAAzB,EAAKmB,MAAMwB,WAAqB,EAAKhD,SAAS,CAACgD,YAAW,IAAU,EAAKhD,SAAS,CAACgD,YAAW,KAjJ/E,EAoJnBC,wBAA0B,SAAC5C,GACvB,EAAKL,SAAS,CAAC8B,YAAYzB,EAAEE,OAAOC,QAAO,WACvC,EAAKoM,0BAtJM,EA0JnBC,uBAAyB,SAACxM,GACtB,EAAKL,SAAS,CAAC6B,WAAWxB,EAAEE,OAAOC,QAAO,gBA3J3B,EAgKnB0C,0BAA4B,SAAC7C,GACzB,EAAKL,SAAS,CAACiC,cAAc5B,EAAEE,OAAOC,QAAO,WACzC,EAAKsM,4BAlKM,EAsKnBA,sBAAwB,WACpB,IAAIC,GAAS,EAAKvL,MAAMS,cAAc,EAAKnC,MAAMqE,OAAO,EAAKrE,MAAMqE,MAAO,IAC1E,EAAKnE,SAAS,CAACgC,aAAgC,OAAnB,EAAKR,MAAMI,MAAkB,EAAEmL,EAAOA,KAxKnD,EA2KnBH,oBAAsB,WAClB,IAAIG,GAAS,EAAKvL,MAAMM,YAAY,EAAKhC,MAAMqE,OAAO,EAAKrE,MAAMqE,MAAO,IACxE,EAAKnE,SAAS,CAAC6B,WAA8B,QAAnB,EAAKL,MAAMI,MAAmB,EAAEmL,EAAOA,KA7KlD,EAgLnB7K,gBAAkB,WACd,GAAoC,MAAjC,EAAKV,MAAMkL,cAAchF,KAAa,CACrC,IACIsF,GADAC,EAAiC,OAAnB,EAAKzL,MAAMI,KAAiB,EAAKJ,MAAMoK,QAAU,EAAKpK,MAAMmK,QACvD,EAAKnK,MAAMoB,IAAO,EAAI,EAAKpB,MAAMoB,IAAIqK,EACjC,SAAxB,EAAKzL,MAAMc,WACV,EAAKtC,SAAS,CAAC2D,OAAS,EAAKnC,MAAMiB,WAAWuK,EAAM,EAAKlN,MAAMgE,UAAU,IAAI,EAAKtC,MAAMY,YAAY,EAAKZ,MAAMlB,UAExF,UAAxB,EAAKkB,MAAMc,WACV,EAAKtC,SAAS,CAAC2D,OAAS,EAAK7D,MAAMqE,MAAM6I,EAAM,EAAKlN,MAAMgE,UAAU,IAAI,EAAKtC,MAAMY,YAAY,EAAKZ,MAAMlB,cAIlH,CACI,IAAI2M,GACAD,GADAC,EAAiC,OAAnB,EAAKzL,MAAMI,KAAiB,EAAKJ,MAAMoK,QAAU,EAAKpK,MAAMmK,QACvD,EAAKnK,MAAMoB,IAAO,EAAI,EAAKpB,MAAMoB,IAAIqK,GACpD,EAEgC,OAAjC,EAAKzL,MAAMI,KAAKgJ,gBACY,SAAxB,EAAKpJ,MAAMc,WACV,EAAKtC,SAAS,CAAC2D,OAAS,EAAKnC,MAAMiB,WAAWuK,EAAM,EAAKlN,MAAMgE,UAAU,IAAI,EAAKtC,MAAMY,YAAY,KAAK,EAAKZ,MAAMI,KAAKgJ,iBAElG,UAAxB,EAAKpJ,MAAMc,WACV,EAAKtC,SAAS,CAAC2D,OAAS,EAAK7D,MAAMqE,MAAM6I,EAAM,EAAKlN,MAAMgE,UAAU,IAAI,EAAKtC,MAAMY,YAAY,KAAM,EAAKZ,MAAMI,KAAKgJ,kBAK7H,EAAK5K,SAAS,CAAC2D,OAAO,MA3Mf,EA+MnB2I,eAAiB,WACb,IAAI1I,EAAI,IAAM,EAAKpC,MAAMY,YACzBwB,GAAQ,EAAKpC,MAAMkL,cAAchF,KAEG,WAAjC,EAAKlG,MAAMkL,cAAchF,MAAsD,UAAjC,EAAKlG,MAAMkL,cAAchF,OACtE9D,GAAQ,EAAKpC,MAAMI,KAAKgJ,eAEQ,MAAjC,EAAKpJ,MAAMkL,cAAchF,MAAiD,MAAjC,EAAKlG,MAAMkL,cAAchF,MAAiD,OAAjC,EAAKlG,MAAMkL,cAAchF,OAC1G9D,GAAQ,EAAKpC,MAAMI,KAAKgJ,eAE5B,EAAK5K,SAAS,CAACkN,MAAMtJ,KAzNN,EA2NnByI,aAAe,WACyB,MAAjC,EAAK7K,MAAMkL,cAAchF,KACG,UAAxB,EAAKlG,MAAMc,UACV,EAAKtC,SAAS,CAACmN,IAAMC,WAAWC,KAAKC,IAAI,GAAG,EAAKxN,MAAMgE,UAAX,MAA8B,EAAKhE,MAAMqE,MAAM,EAAK3C,MAAMoB,IAAI,QAE1G,EAAK5C,SAAS,CAACmN,IAAMC,WAAWC,KAAKC,IAAI,GAAG,EAAKxN,MAAMgE,UAAX,MAA8B,EAAKtC,MAAMiB,WAAW,EAAKjB,MAAMoB,IAAI,QAE7E,MAAjC,EAAKpB,MAAMkL,cAAchF,MAAiD,MAAjC,EAAKlG,MAAMkL,cAAchF,KACvE,EAAK1H,SAAS,CAACmN,IAAMC,WAAWC,KAAKC,IAAI,GAAG,EAAKxN,MAAMgE,UAAX,MAA8B,EAAKtC,MAAMiL,WAEhD,OAAjC,EAAKjL,MAAMkL,cAAchF,MAC7B,EAAK1H,SAAS,CAACmN,IAAMC,WAAWC,KAAKC,IAAI,GAAG,EAAKxN,MAAMgE,UAAX,OAA+B,EAAKtC,MAAMiL,YAtO3E,EAyOnBL,UAAY,SAAC5B,GAEL,IAaI+C,EAdA,OAAL/C,IAGgB,OAFX+C,EAAWC,SAASC,eAAe,eAEJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,QACjCJ,EAASG,MAAMvI,MAAQ,SAGZ,OADfoI,EAAWC,SAASC,eAAe,gBACA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,QAGvB,QAALqF,IAEgB,OADX+C,EAAWC,SAASC,eAAe,gBACJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,MACjCJ,EAASG,MAAMvI,MAAQ,SAIZ,OAFfoI,EAAWC,SAASC,eAAe,eAEA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,WAjQhB,EAuQnBoH,WAAa,aAvQM,EA0QnBqB,aAAe,WAEP,IAYIL,EAbqB,SAA1B,EAAK/L,MAAMY,cAEK,OADXmL,EAAWC,SAASC,eAAe,iBACJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,QACjCJ,EAASG,MAAMvI,MAAQ,SAGZ,OADfoI,EAAWC,SAASC,eAAe,eACA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,QAGF,OAA1B,EAAK3D,MAAMY,cAEK,OADXmL,EAAWC,SAASC,eAAe,eACJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,MACjCJ,EAASG,MAAMvI,MAAQ,SAIZ,OAFfoI,EAAWC,SAASC,eAAe,iBAEA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,WAjShB,EAqSnB0I,SAAW,WACP,IAAIzK,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,sBAAuB,CACzBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAWsC,EACX,QAAUG,MAGjBxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACW,KAAVA,EAAI+D,MACH,EAAK/E,SAAS,CAAC8D,UAAU9C,EAAG,UAGnCG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UAhUd,EA+WnB6B,aAAe,SAAC9C,GACZ,IAAI+C,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAEZC,MAAM,yBACN/C,MAAM,mBAAoB,CACtBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAWsC,EACX,QAAUG,EACV,KAAO,CACH,UAAY,EAAK/B,MAAMc,UAAUoB,cACjC,IAAqC,MAA/B,EAAKlC,MAAMkL,cAAchF,KAAWjE,SAAS,EAAKjC,MAAMoB,KAAKa,SAAS,EAAKjC,MAAMkL,cAAcC,QAAQ,EAAKnL,MAAMiL,QACxH,OAAS,EAAKjL,MAAMC,eAAemJ,cACnC,YAAc,EAAKpJ,MAAMY,YAAYwI,cACrC,MAA+B,KAAvB,EAAKpJ,MAAMiB,WAAiB,IAAM2K,WAAW,EAAK5L,MAAMiB,YAChE,SAAqC,KAA1B,EAAKjB,MAAMS,cAAoB,IAAMmL,WAAW,EAAK5L,MAAMS,eACtE,OAAiC,KAAxB,EAAKT,MAAMM,YAAkB,IAAMsL,WAAW,EAAK5L,MAAMM,aAClE,KAAO,EAAKN,MAAMI,KAAK8B,cACvB,OAAS,EAAKlC,MAAMlB,OAAOsK,cAC3B,MAAQwC,WAAW,EAAKtN,MAAMqE,OAC9B,OAAwC,MAA/B,EAAK3C,MAAMkL,cAAchF,KAAY0F,WAAa,EAAK5L,MAAMmC,OAAO,EAAKnC,MAAMoB,IAAK,IAAK,KAAOwK,WAAa,EAAK5L,MAAMmC,QAAQ,EAAKnC,MAAMkL,cAAcC,QAAQ,EAAKnL,MAAMiL,QAAS,IAAK,KACnM,MAAQ,EAAKjL,MAAMiB,WAAW,EAAK3C,MAAMqE,MAAQ,OAAO,QACxD,IAAQiJ,WAA2B,IAAf,EAAK5L,MAAM2L,IAAS,UAInDpM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACW,KAAVA,EAAI+D,OACH,EAAKjF,MAAMgO,YAAa,EAAKtM,MAAMmC,OAAS,EAAKnC,MAAM2L,KACvD,EAAKrN,MAAMiO,UAAU/M,EAAIgN,UAGhC7M,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA1Zd,EA6ZnB8C,UAAY,WACR,EAAKpE,SAAS,CAACqE,SAAS,YACxB,EAAKrE,SAAS,CAACsE,UAAU,YACzB,EAAK5C,iBAAiB,OACtB,IAAI6L,EAAWC,SAASC,eAAe,aACvCF,EAASG,MAAMC,gBAAkB,QACjCJ,EAASG,MAAMvI,MAAQ,SAEvBoI,EAAWC,SAASC,eAAe,eAC1BC,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,OAvaR,EA0anBZ,WAAa,WACT,EAAKvE,SAAS,CAACqE,SAAS,YACxB,EAAKrE,SAAS,CAACsE,UAAU,cACzB,EAAK5C,iBAAiB,QACtB,IAAI6L,EAAWC,SAASC,eAAe,cACvCF,EAASG,MAAMC,gBAAkB,MACjCJ,EAASG,MAAMvI,MAAQ,SAEvBoI,EAAWC,SAASC,eAAe,cAC1BC,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,SApbR,EAubnBX,YAAc,WACV,EAAKxE,SAAS,CAACyE,WAAW,YAC1B,EAAKzE,SAAS,CAAC0E,SAAS,aACxB,EAAKvC,wBAAwB,UA1bd,EA4bnBwC,UAAY,WACR,EAAK3E,SAAS,CAACyE,WAAW,YAC1B,EAAKzE,SAAS,CAAC0E,SAAS,YACxB,EAAKvC,wBAAwB,QA7b/B,EAAKX,MAAQ,CACP4B,SAAW,EAAKtD,MAAMsD,SACtBlD,KAAO,CACH,kBAAqB,GAEzBuB,eAAiB,GACjBG,KAAO,GACPQ,YAAc,GACdE,UAAY,SACZG,WAAW,IACXX,YAAY,IACZD,WAAW,IACXI,cAAc,IACdD,aAAa,IACbc,UAAS,EACTE,YAAW,EACXJ,IAAI,EACJe,OAAQ,EACRE,KAAO,EACPgB,UAAW,EACXC,YAAa,EACbzD,MAAQ,GACRgD,SAAW,UACXC,UAAY,UACZG,WAAa,UACbC,SAAW,UACXV,UAAW,EACX2H,OAAS,EACTC,QAAU,EACVtL,OAAS,KACToM,cAAgB,GAChBQ,MAAQ,GACRT,OAAS,GAlCE,E,qDA0DnB,WAAqB,IAAD,OAChBxH,KAAKjF,SAAS,CAAC0M,cAAczH,KAAK+G,iBAAiB/G,KAAKnF,MAAMoE,UAAS,WACd,OAAlD,EAAKpE,MAAMmO,QAAQ,EAAKzM,MAAMkL,cAAcwB,IAC3C,EAAK/N,mBACL,EAAKuL,6BACL,EAAKmC,WACL,EAAK1B,YAIL3I,MAAM,EAAKhC,MAAMkL,cAAcwB,EAAI,sB,gCA+P/C,SAAmBpO,EAAM0B,GAClByD,KAAKzD,MAAMI,MAAQJ,EAAMI,OACxBqD,KAAK6H,wBACL7H,KAAK2H,sBACL3H,KAAKmH,UAAUnH,KAAKzD,MAAMI,MAC1BqD,KAAKqH,iBACLrH,KAAK/C,mBAEN+C,KAAKzD,MAAMY,aAAeZ,EAAMY,cAC/B6C,KAAK2I,eACL3I,KAAKqH,kBAENrH,KAAKzD,MAAMM,aAAeN,EAAMM,aAC/BmD,KAAK2H,sBAEN3H,KAAKzD,MAAMS,eAAiBT,EAAMS,eACjCgD,KAAK6H,wBAEN7H,KAAKzD,MAAMc,WAAad,EAAMc,YAC7B2C,KAAKsH,aACLtH,KAAK/C,kBACL+C,KAAKoH,eACLpH,KAAKqH,kBAENrH,KAAKzD,MAAMY,aAAeZ,EAAMY,aAAe6C,KAAKzD,MAAMc,WAAad,EAAMc,WAAa2C,KAAKzD,MAAMoB,KAAOpB,EAAMoB,KACjHqC,KAAK/C,kBAIN+C,KAAKnF,MAAMqE,OAASrE,EAAMqE,OAASc,KAAKzD,MAAMiB,YAAcjB,EAAMiB,aACjEwC,KAAK/C,kBACL+C,KAAK6H,wBACL7H,KAAK2H,sBACL3H,KAAKoH,gBAENpH,KAAKzD,MAAMoB,KAAOpB,EAAMoB,MACvBqC,KAAK/C,kBACL+C,KAAKoH,gBAENpH,KAAKzD,MAAMiL,QAAUjL,EAAMiL,SAC1BxH,KAAK/C,kBACL+C,KAAKoH,kB,oBAqFb,WACI,IAAQrH,EAAYC,KAAKnF,MAAjBkF,QACR,OACI,8BACI,eAACK,EAAA,EAAD,CAAQC,sBAAoB,EAACC,sBAAoB,EACjDrF,KAAM+E,KAAKzD,MAAMtB,KAAKiO,iBACtB1I,QAASR,KAAKlF,kBACd,kBAAgB,IAHhB,UAIA,cAAC2F,EAAA,EAAD,CAAaC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,qBAAKC,UAAWb,EAAQc,MAAxB,2BAGkB,OAAjBb,KAAKzD,MAAMI,KACR,cAACmE,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,sBAAsB3F,MAAOyE,KAAKzD,MAAMoK,QAAS/F,UAAWb,EAAQoJ,aAE7H,cAACrI,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,qBAAqB3F,MAAOyE,KAAKzD,MAAMmK,OAAQ9F,UAAWb,EAAQoJ,aAE/H,cAACrI,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,iBAAiB3F,MAAO6M,KAAKgB,MAA6B,IAAvBpJ,KAAKnF,MAAMgE,UAAUwK,GAAO,IAAKzI,UAAWb,EAAQuJ,kBAGxJ,cAACnI,EAAA,EAAD,UACI,qBAAKP,UAAWb,EAAQqB,YAAxB,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACZ,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,SAAS3F,MAAOyE,KAAKzD,MAAMC,uBAIhG,cAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACZ,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,eAAe3F,MAAOyE,KAAKnF,MAAMqE,cAItG,cAACmC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,gCACI,wBAAQnG,MAAM,MAAMmF,GAAG,YAAYE,UAAWb,EAAQwJ,UAAYpJ,QAASH,KAAKvD,iBAAhF,iBACA,wBAAQlB,MAAM,OAAOmF,GAAG,aAAaE,UAAWb,EAAQyJ,WAAarJ,QAASH,KAAKvD,iBAAnF,yBAIZ,cAAC4E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,gCACI,wBAAQhB,GAAG,cAAcnF,MAAM,QAAQ0F,QAAQ,YAAYL,UAAWb,EAAQ0J,YAActJ,QAASH,KAAK9C,wBAA1G,sBACA,wBAAQwD,GAAG,YAAYnF,MAAM,MAAM0F,QAAQ,YAAYL,UAAWb,EAAQ2J,UAAWvJ,QAASH,KAAK9C,wBAAnG,wBAIZ,cAACmE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,eAACS,EAAA,EAAD,CAAYJ,SAAU/B,KAAK5C,sBAAuBuF,aAAc3C,KAAKzD,MAAMc,UAA3E,UACI,cAAC+E,EAAA,EAAD,CAAkB7G,MAAM,SAAS8G,QAAS,cAACC,EAAA,EAAD,IAAWpB,MAAM,WAC3D,cAACkB,EAAA,EAAD,CAAkB7G,MAAM,QAAQ8G,QAAS,cAACC,EAAA,EAAD,IAAWpB,MAAM,mBAK1E,cAACG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UAC2B,SAAtB1B,KAAKzD,MAAMc,UACR,8BACA,cAACyD,EAAA,EAAD,CAAWG,QAAQ,WAAWF,KAAK,QAAQwB,YAAY,cAAcrB,MAAM,QAAQ3F,MAAOyE,KAAKzD,MAAMiB,WAAYuE,SAAU/B,KAAKzC,2BAGhI,8BACA,cAACuD,EAAA,EAAD,CAAWC,KAAK,QAAQyB,UAAQ,EAACxB,SAAO,EAACC,QAAQ,WAAWC,MAAM,eAAc3F,MAAOyE,KAAKnF,MAAMqE,UAGpE,MAAjCc,KAAKzD,MAAMkL,cAAchF,KACtB,cAAC3B,EAAA,EAAD,CAAW2B,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,MAAM3F,MAAOyE,KAAKzD,MAAMoB,IAAKoE,SAAU/B,KAAKtC,YAEnH,gCACI,cAACoD,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,WAAW3F,MAAOyE,KAAKzD,MAAMkL,cAAcC,UACpG,cAAC5G,EAAA,EAAD,CAAW2B,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,UAAU3F,MAAOyE,KAAKzD,MAAMiL,OAAQzF,SAAU/B,KAAKuH,kBAGlI,6BAIR,cAAClG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACzB,EAAA,EAAD,CAAQ1E,MAAM,SAAS4E,QAASH,KAAKpC,qBAAsBqD,QAAQ,YAAYf,MAAM,UAArF,0BAIZ,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACC1B,KAAKzD,MAAMsB,SACV,gCACA,cAACiD,EAAA,EAAD,CAAWF,UAAWb,EAAQ2C,WAAYH,YAAY,eAAerB,MAAM,eAAe3F,MAAOyE,KAAKzD,MAAMM,YAAakF,SAAU/B,KAAKhC,0BACxI,cAAC8C,EAAA,EAAD,CACMF,UAAWb,EAAQ2C,WACrBhC,GAAG,oBACHQ,MAAM,QACND,QAAQ,WACRc,SAAU/B,KAAK4H,uBACfrM,MAAO6M,KAAKgB,MAA4B,IAAtBpJ,KAAKzD,MAAMK,YAAgB,IAC7CgG,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAIvB,4BAGX,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACQ,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACzB,EAAA,EAAD,CAAQ+C,MAAM,QAAQzH,MAAM,WAAW4E,QAASH,KAAKlC,uBAAwBmD,QAAQ,YAAYf,MAAM,UAAvG,4BAIZ,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACC1B,KAAKzD,MAAMwB,WACV,gCACA,cAAC+C,EAAA,EAAD,CAAWF,UAAWb,EAAQ2C,WAAYH,YAAY,iBAAiBrB,MAAM,kBAAkB3F,MAAOyE,KAAKzD,MAAMS,cAAe+E,SAAU/B,KAAK/B,4BAC/I,cAAC6C,EAAA,EAAD,CACMF,UAAWb,EAAQ2C,WACrBhC,GAAG,oBACHQ,MAAM,QACNyB,aAAa,GACb1B,QAAQ,WACR1F,MAAO6M,KAAKgB,MAA8B,IAAxBpJ,KAAKzD,MAAMQ,cAAkB,IAC/C6F,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAIvB,4BAGP,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BAC2B,SAAtB1B,KAAKzD,MAAMc,UACR,gCACI,eAAC4F,EAAA,EAAD,WAAajD,KAAKzD,MAAMI,KAAxB,QAAmCqD,KAAKzD,MAAMiB,cAC9C,eAACyF,EAAA,EAAD,uCAAsCmF,KAAKgB,MAAwB,IAAlBpJ,KAAKzD,MAAMmC,QAAY,OACxE,eAACuE,EAAA,EAAD,0CAAyCmF,KAAKgB,MAAqB,IAAfpJ,KAAKzD,MAAM2L,KAAS,UAG5E,gCACI,eAACjF,EAAA,EAAD,WAAajD,KAAKzD,MAAMI,KAAxB,QAAmCqD,KAAKnF,MAAMqE,SAC9C,eAAC+D,EAAA,EAAD,uCAAsCmF,KAAKgB,MAAwB,IAAlBpJ,KAAKzD,MAAMmC,QAAY,OACxE,eAACuE,EAAA,EAAD,0CAAyCmF,KAAKgB,MAAqB,IAAfpJ,KAAKzD,MAAM2L,KAAS,gBAM5F,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACK1B,KAAKnF,MAAMgE,UAAUwK,GAAGrJ,KAAKzD,MAAMmC,OAChC,8BACI,cAACuB,EAAA,EAAD,CAAQwC,KAAK,SAAStC,QAASH,KAAK9B,aAAc+C,QAAQ,YAAYf,MAAM,UAA5E,2BAGJ,mCAQxB,cAACgD,EAAA,EAAD,UACI,cAACjD,EAAA,EAAD,CAAQE,QAASH,KAAKlF,kBAAmBoF,MAAM,UAA/C,+B,GAlnBWvF,cA2nBdwI,gBA1sBJ,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BH,YAAc,CACZkC,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBmC,UAAY,CACVhF,OAAS,MACTsE,MAAO,QAETN,WAAa,CACTM,MAAQ,SAEZmG,WAAa,CACXnG,MAAQ,SAEVsG,WAAa,CACXtG,MAAQ,SAEVuG,UAAY,CACVrJ,MAAQ,QACRwI,gBAAkB,YAClB1F,MAAO,OACPY,SAAW,QAEb4F,WAAa,CACXtJ,MAAQ,MACRwI,gBAAkB,YAClB1F,MAAO,OACPY,SAAW,QAEb6F,YAAc,CACZvJ,MAAQ,QACRwI,gBAAkB,YAClB1F,MAAO,QACPY,SAAW,QAEb8F,UAAY,CACVxJ,MAAQ,MACRwI,gBAAkB,YAClB1F,MAAO,QACPY,SAAW,QAEbD,YAAc,CACVC,SAAW,MACXC,MAAQ,UAEZC,OAAS,CACPpF,OAAS,MACTkF,SAAW,OACXG,WAAa,OACbC,UAAY,UAEdnD,MAAQ,CACNoD,SAAW,KAEbpC,OAAS,CACPZ,QAAU,WACV+B,MAAQ,SAEVkB,KAAO,CACHhE,MAAQ,WAEZyJ,UAAY,CACRzJ,MAAQ,UA+nBsB,CAAEiE,WAAW,GAAhChB,CAAwCqD,ICxrBnDoD,G,kDACF,WAAY/O,GAAQ,IAAD,8BACf,cAAMA,IAUVgP,EAAI,SAAC9N,GACDP,MAAM,8BAA+B,CACjCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,QAAYE,EAAIE,YAGvBH,MAAK,SAAAgO,GAAI,OAAIA,EAAK9N,UAClBF,MAAK,SAAAgO,GAEF,IADA,IAAIC,EAAU,GACNnD,EAAI,EAAGA,EAAI7K,EAAIE,QAAQ6K,OAAOF,IAEpCmD,EAAQhO,EAAIE,QAAQ2K,IAAM,CACxB,IAAM,EACN,WAAa,KAGjB,EAAK7L,SAAS,CACZiP,OAAM,2BAAO,EAAKzN,MAAMyN,QAAUD,KAClC,WACA,EAAKlP,MAAMoP,WAAWlO,EAAIE,SAC1B,EAAKlB,SAAS,CAAC+J,UAAU,GAAD,mBAAK,EAAKvI,MAAMuI,WAAhB,YAA8B/I,EAAIE,kBAG/DC,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UArCd,EA2EnB6N,KAAO,WACH1O,MAAM,8BAA+B,CACjCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,QAAY,EAAKU,MAAMuI,cAG9BhJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKhB,SAAS,CAACiP,OAAM,eAAO,EAAKzN,MAAMyN,aAE1C9N,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UAxFd,EAgGnB8N,WAAa,SAACxL,GACZ,IAAI,IAAIiI,EAAE,EAAEA,EAAEjI,EAAEmI,OAAOF,IACrB,EAAK7L,UAAS,SAAAC,GAAS,MAAK,CAC1BoP,MAAM,2BACDpP,EAAUoP,OADV,kBAEFzL,EAAEiI,IAAK,QAGZ,EAAK7L,UAAS,SAAAC,GAAS,MAAK,CAC1BqP,OAAO,2BACFrP,EAAUqP,QADT,kBAEH1L,EAAEiI,IAAK,SA3GG,EAgHnB0D,UAAY,SAAClP,GACX,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BoP,MAAM,2BACDpP,EAAUoP,OADV,kBAEFhP,EAAEE,OAAOC,OAAQ,SApHL,EAwHnBgP,WAAa,SAACnP,GACZ,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BqP,OAAO,2BACFrP,EAAUqP,QADT,kBAEHjP,EAAEE,OAAOC,OAAQ,SA5HL,EAgInByL,SAAW,SAAC/H,GACR,EAAKlE,UAAS,SAAAC,GAAS,MAAK,CACxBoP,MAAM,2BACDpP,EAAUoP,OADV,kBAEFnL,GAAS,SApID,EAwInBgI,UAAY,SAAChI,GACX,EAAKlE,UAAS,SAAAC,GAAS,MAAK,CACxBqP,OAAO,2BACFrP,EAAUqP,QADT,kBAEHpL,GAAS,SA5IC,EAgJnBsH,mBAAqB,SAACnL,GAClB,IAAI+C,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,6BAA8B,CAClCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,OAAUT,EAAEE,OAAOC,MACnB,SAAW4C,EACX,QAAUG,MAGfxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,KACL,EAAK/E,SAAS,CAAC+J,UAAU,EAAKvI,MAAMuI,UAAUU,QAAO,SAAAhE,GAAI,OAAEA,GAAOpG,EAAEE,OAAOC,WAE3E,EAAKR,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA9KZ,EAkLnB2I,aAAe,SAAC/F,GACd,IAA0C,GAAvC,EAAK1C,MAAMuI,UAAUC,QAAQ9F,GAAY,CAC1C,IAAIlD,EAAM,GACVA,EAAG,QAAc,CAACkD,GAClB,EAAK4K,EAAE9N,GACP,EAAKlB,MAAMoP,WAAW,CAAChL,MAvLR,EA2LnBuL,mBAAqB,SAAC3P,EAAM0B,GACvB1B,EAAMmP,QAAU,EAAKnP,MAAMmP,QAC5B,EAAKjP,SAAS,CAACiP,OAAO,2BAAI,EAAKzN,MAAMyN,QAAU,EAAKnP,MAAMmP,WA3L1D,EAAKzN,MAAQ,CACXuI,UAAY,GACZkF,OAAS,GACTS,OAAQ,EACRL,MAAQ,GACRC,OAAS,GACTxD,aAAe,EAAKhM,MAAMgM,cARb,E,qDAwCnB,WAAqB,IAAD,OACZ1I,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,0BAA2B,CAC/BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,MAGjBxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,MACL,EAAK+J,EAAE9N,GACP,EAAKoO,WAAWpO,EAAIE,UAEpB,EAAKlB,SAAS,CAACqB,MAAML,EAAIM,SAG9BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,SAE3B2D,KAAK0K,SAAWC,aAAY,kBAAM,EAAKT,SAAQ,O,kCAoBjD,c,oBAoGA,WAAS,IAAD,OACInK,EAAYC,KAAKnF,MAAjBkF,QACN,OACA,gCACE,cAAC,EAAD,CAAW+E,UAAW9E,KAAKzD,MAAMuI,UAAWE,aAAchF,KAAKgF,eAC/D,cAAC4F,EAAA,EAAD,CAAgBC,UAAWC,IAAOlK,UAAWb,EAAQuB,UAArD,SACE,cAACyJ,EAAA,EAAD,CAAO,aAAW,eAAlB,SACI,cAACC,EAAA,EAAD,UAEEhL,KAAKzD,MAAMuI,UAAU7C,KAAI,SAAAhD,GAAM,OAC7B,cAAC,WAAD,UACE,eAACgM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACjI,EAAA,EAAD,UAAahE,MAEb,eAACiM,EAAA,EAAD,WACE,wBAAQ3P,MAAO0D,EAAQ2B,UAAWb,EAAQwJ,UAAWpJ,QAAS,EAAKmK,UAAnE,iBACA,wBAAQ/O,MAAO0D,EAAQ2B,UAAWb,EAAQyJ,WAAarJ,QAAS,EAAKoK,WAArE,qBACyB,GAA1B,EAAKhO,MAAM6N,MAAMnL,GAAe,cAAC,GAAD,CAAkBJ,UAAW,EAAKhE,MAAMsQ,SAAUnC,QAAS,EAAKnO,MAAMmO,QAASnC,aAAc,EAAKhM,MAAMgM,aAAarB,QAAO,SAAAhE,GAAI,OAAEA,EAAKvC,QAAQA,KAAS5D,OAAO,KAAK4D,OAAQA,EAAQmM,WAAY,EAAK7O,MAAM6N,MAAMnL,GAASC,MAAO,EAAK3C,MAAMyN,OAAO/K,GAAQoM,IAAK1O,KAAK,MAAMqK,SAAU,EAAKA,SAAU8B,UAAW,EAAKjO,MAAMiO,UAAWD,WAAY,EAAKhO,MAAMgO,aAAkC,wBACnY,GAA3B,EAAKtM,MAAM8N,OAAOpL,GAAe,cAAC,GAAD,CAAkBJ,UAAW,EAAKhE,MAAMsQ,SAAUnC,QAAS,EAAKnO,MAAMmO,QAASnC,aAAc,EAAKhM,MAAMgM,aAAarB,QAAO,SAAAhE,GAAI,OAAEA,EAAKvC,QAAQA,KAAU5D,OAAO,KAAK4D,OAAQA,EAAQmM,WAAY,EAAK7O,MAAM8N,OAAOpL,GAASC,MAAO,EAAK3C,MAAMyN,OAAO/K,GAAQoM,IAAK1O,KAAK,OAAOsK,UAAW,EAAKA,UAAW6B,UAAW,EAAKjO,MAAMiO,UAAWD,WAAY,EAAKhO,MAAMgO,aAAkC,wBACva,cAACqC,EAAA,EAAD,IAEA,cAACA,EAAA,EAAD,CAAWtK,UAAWb,EAAQuL,OAA9B,SACE,cAACrI,EAAA,EAAD,UAAa,EAAK1G,MAAMyN,OAAO/K,GAAQoM,QAEzC,cAACH,EAAA,EAAD,CAAWtK,UAAWb,EAAQuL,OAA9B,SACE,wBAAQpL,MAAM,UAAU3E,MAAO0D,EAAQkB,QAAS,EAAKoG,mBAArD,wC,GA3NH5L,aAwOVwI,gBAvQF,SAAAC,GAAK,MAAK,CACnBlB,OAAQ,CACJc,MAAO,SAEXuG,UAAY,CACVrJ,MAAQ,QACR,UAAW,CACTqL,WAAY,QACZrL,MAAQ,SAEVa,KAAO,SAETyI,WAAa,CACXtJ,MAAQ,MACR,UAAW,CACTqL,WAAY,MACZrL,MAAQ,SAEVsL,SAAS,OACTzK,KAAO,SAET0K,QAAU,CACRxH,SAAU,KAEZqH,OAAS,CACPI,QAAS,mBACTpK,UAAU,CACVqK,UAAY,YA4OgB,CAAExH,WAAW,GAAhChB,CAAwCyG,I,UCzLjDgC,G,kDACF,WAAY/Q,GAAQ,IAAD,8BACjB,cAAMA,IA2CRC,kBAAoB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,cAAe,SAhDP,EAoDnBC,iBAAmB,WACf,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,cAAe,SAxDP,EA4DnB2C,qBAAuB,SAACxC,GACI,GAArB,EAAKmB,MAAMsB,UACV,EAAK9C,SAAS,CAAC8C,UAAS,IACJ,GAArB,EAAKtB,MAAMsB,UACV,EAAK9C,SAAS,CAAC8C,UAAS,KAhEb,EAkEnBC,uBAAyB,SAAC1C,GACI,GAAvB,EAAKmB,MAAMwB,YACV,EAAKhD,SAAS,CAACgD,YAAW,IACJ,GAAvB,EAAKxB,MAAMwB,YACV,EAAKhD,SAAS,CAACgD,YAAW,KAtEf,EAwEnBC,wBAA0B,SAAC5C,GACG,OAAvB,EAAKP,MAAMgR,MAAMlP,OAChB,EAAK5B,SAAS,CAAC8B,YAAYzB,EAAEE,OAAOC,QACpC,EAAKR,SAAS,CAAC6B,YAAaxB,EAAEE,OAAOC,MAAM,EAAKV,MAAMqE,OAAO,EAAKrE,MAAMqE,MAAO,OAEzD,QAAvB,EAAKrE,MAAMgR,MAAMlP,OAChB,EAAK5B,SAAS,CAAC8B,YAAYzB,EAAEE,OAAOC,QACpC,EAAKR,SAAS,CAAC6B,aAAcxB,EAAEE,OAAOC,MAAM,EAAKV,MAAMqE,OAAO,EAAKrE,MAAMqE,MAAO,QA/ErE,EAkFnBjB,0BAA4B,SAAC7C,GACC,OAAvB,EAAKP,MAAMgR,MAAMlP,OAChB,EAAK5B,SAAS,CAACiC,cAAc5B,EAAEE,OAAOC,QACtC,EAAKR,SAAS,CAACgC,eAAgB3B,EAAEE,OAAOC,MAAM,EAAKV,MAAMqE,OAAO,EAAKrE,MAAMqE,MAAO,OAE5D,QAAvB,EAAKrE,MAAMgR,MAAMlP,OAChB,EAAK5B,SAAS,CAACiC,cAAc5B,EAAEE,OAAOC,QACtC,EAAKR,SAAS,CAACgC,cAAe3B,EAAEE,OAAOC,MAAM,EAAKV,MAAMqE,OAAO,EAAKrE,MAAMqE,MAAO,QAzFtE,EA4FnBhB,aAAe,SAAC9C,GACZ,IAAI+C,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZC,MAAM,yBACN/C,MAAM,oBAAqB,CACvBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAWsC,EACX,QAAUG,EACV,KAAO,CACH,SAAqC,KAA1B,EAAK/B,MAAMS,cAAoB,IAAMmL,WAAW,EAAK5L,MAAMS,eACtE,OAAiC,KAAxB,EAAKT,MAAMM,YAAkB,IAAMsL,WAAW,EAAK5L,MAAMM,cAEtE,GAAK,EAAKhC,MAAMgR,MAAMC,YAG7BhQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACW,KAAVA,EAAI+D,MACH,EAAKjF,MAAMkR,YAAY,EAAKlR,MAAMgR,MAAMC,QAAQ,EAAKvP,MAAMS,cAAc,EAAKT,MAAMM,gBAG3FX,OAAM,SAAAC,GACHoC,MAAMpC,EAAIE,KACV,EAAKtB,SAAS,CAACqB,MAAMD,EAAIE,UA5H/B,EAAKE,MAAQ,CACT4B,SAAW,EAAKtD,MAAMgR,MAAM1N,SAC5BlD,KAAO,CACH,YAAe,GAEnB4B,YAAY,IACZ8C,UAAU,IACV3C,cAAc,IACdD,aAAa,IACbc,UAAS,EACTE,YAAW,EACX6B,UAAW,EACXC,YAAa,EACbzD,MAAQ,IAfK,E,qDAkBnB,WACkC,KAA3B4D,KAAKnF,MAAMgR,MAAMvQ,QAChB0E,KAAKjF,SAAS,CAAC8B,YAAYmD,KAAKnF,MAAMgR,MAAMvQ,SAC5C0E,KAAKjF,SAAS,CAAC8C,UAAS,IACE,OAAvBmC,KAAKnF,MAAMgR,MAAMlP,MAChBqD,KAAKjF,SAAS,CAAC6B,YAAaoD,KAAKnF,MAAMgR,MAAMvQ,OAAO0E,KAAKnF,MAAMqE,OAAOc,KAAKnF,MAAMqE,MAAO,MAElE,QAAvBc,KAAKnF,MAAMgR,MAAMlP,MAChBqD,KAAKjF,SAAS,CAAC6B,aAAcoD,KAAKnF,MAAMgR,MAAMvQ,OAAO0E,KAAKnF,MAAMqE,OAAOc,KAAKnF,MAAMqE,MAAO,OAG7Fc,KAAKjF,SAAS,CAAC8C,UAAS,IAEI,KAA7BmC,KAAKnF,MAAMgR,MAAMG,UAChBhM,KAAKjF,SAAS,CAACiC,cAAcgD,KAAKnF,MAAMgR,MAAMG,WACpB,OAAvBhM,KAAKnF,MAAMgR,MAAMlP,MAChBqD,KAAKjF,SAAS,CAACgC,eAAgBiD,KAAKnF,MAAMgR,MAAMG,SAAShM,KAAKnF,MAAMqE,OAAOc,KAAKnF,MAAMqE,MAAO,MAEvE,QAAvBc,KAAKnF,MAAMgR,MAAMlP,MAChBqD,KAAKjF,SAAS,CAACgC,cAAeiD,KAAKnF,MAAMgR,MAAMG,SAAShM,KAAKnF,MAAMqE,OAAOc,KAAKnF,MAAMqE,MAAO,MAEhGc,KAAKjF,SAAS,CAACgD,YAAW,KAE1BiC,KAAKjF,SAAS,CAACgD,YAAW,M,oBAyFlC,WACI,IAAQgC,EAAYC,KAAKnF,MAAjBkF,QACR,OACI,gCACI,wBAAQI,QAASH,KAAK9E,iBAAtB,qBACA,eAACkF,EAAA,EAAD,CAAQC,sBAAoB,EAACC,sBAAoB,EACjDrF,KAAM+E,KAAKzD,MAAMtB,KAAKsF,WACtBC,QAASR,KAAKlF,kBACd,kBAAgB,IAHhB,UAIA,cAAC2F,EAAA,EAAD,CAAaC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,qBAAKC,UAAWb,EAAQc,MAAxB,0BAGA,cAACC,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,eAAe3F,MAAOyE,KAAKnF,MAAMqE,aAGlG,cAACiC,EAAA,EAAD,UACI,qBAAKP,UAAWb,EAAQqB,YAAxB,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACzB,EAAA,EAAD,CAAQ1E,MAAM,SAAS4E,QAASH,KAAKpC,qBAAsBqD,QAAQ,YAAYf,MAAM,UAArF,0BAIZ,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACC1B,KAAKzD,MAAMsB,SACV,gCACA,cAACiD,EAAA,EAAD,CAAWF,UAAWb,EAAQ2C,WAAYH,YAAY,eAAerB,MAAM,eAAe3F,MAAOyE,KAAKzD,MAAMM,YAAakF,SAAU/B,KAAKhC,0BACxI,cAAC8C,EAAA,EAAD,CACMF,UAAWb,EAAQ2C,WACrBhC,GAAG,oBACHQ,MAAM,QACNyB,aAAa,GACb1B,QAAQ,WACR1F,MAAO6M,KAAKgB,MAA4B,IAAtBpJ,KAAKzD,MAAMK,YAAgB,IAC7CgG,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAIvB,4BAGP,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACzB,EAAA,EAAD,CAAQ+C,MAAM,QAAQzH,MAAM,WAAW4E,QAASH,KAAKlC,uBAAwBmD,QAAQ,YAAYf,MAAM,UAAvG,4BAIZ,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACC1B,KAAKzD,MAAMwB,WACV,gCACA,cAAC+C,EAAA,EAAD,CAAWF,UAAWb,EAAQ2C,WAAYH,YAAY,iBAAiBrB,MAAM,kBAAkB3F,MAAOyE,KAAKzD,MAAMS,cAAe+E,SAAU/B,KAAK/B,4BAC/I,cAAC6C,EAAA,EAAD,CACMF,UAAWb,EAAQ2C,WACrBhC,GAAG,oBACHQ,MAAM,QACNyB,aAAa,GACb1B,QAAQ,WACR1F,MAAO6M,KAAKgB,MAA8B,IAAxBpJ,KAAKzD,MAAMQ,cAAkB,IAC/C6F,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAIvB,4BAGP,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,cAACzB,EAAA,EAAD,CAAQwC,KAAK,SAAStC,QAASH,KAAK9B,aAAc+C,QAAQ,YAAYf,MAAM,UAA5E,qCAMpB,cAACgD,EAAA,EAAD,UACI,cAACjD,EAAA,EAAD,CAAQE,QAASH,KAAKlF,kBAAmBoF,MAAM,UAA/C,gC,GAtNMvF,aA+NTwI,gBAhSJ,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BH,YAAc,CACZkC,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBmC,UAAY,CACVhF,OAAS,MACTsE,MAAO,QAETN,WAAa,CACTM,MAAQ,SAEZmG,WAAa,CACXnG,MAAQ,SAEVsG,WAAa,CACXtG,MAAQ,SAEVuG,UAAY,CACVrJ,MAAQ,QACRwI,gBAAkB,YAClB1F,MAAO,QAETwG,WAAa,CACXtJ,MAAQ,MACRwI,gBAAkB,YAClB1F,MAAO,QAETW,YAAc,CACVC,SAAW,MACXC,MAAQ,UAEZC,OAAS,CACPpF,OAAS,MACTkF,SAAW,OACXG,WAAa,OACbC,UAAY,UAEdnD,MAAQ,CACNoD,SAAW,KAEbpC,OAAS,CACPZ,QAAU,WACV+B,MAAQ,SAEVkB,KAAO,CACHhE,MAAQ,WAEZyJ,UAAY,CACRzJ,MAAQ,UAmOsB,CAAEiE,WAAW,GAAhChB,CAAwCyI,IChNnDK,G,kDACF,WAAYpR,GAAQ,IAAD,8BACjB,cAAMA,IAqCRC,kBAAoB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,eAAgB,QAGvB,EAAKJ,MAAMqR,cA7CI,EA+CnBtD,SAAW,WACP,IAAIzK,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,sBAAuB,CACzBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAWsC,EACX,QAAUG,MAGjBxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACW,KAAVA,EAAI+D,MACH,EAAK/E,SAAS,CAAC8D,UAAU9C,EAAG,UAGnCG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA1Ed,EA8EnBnB,iBAAmB,WACf,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,eAAgB,QAGvB,EAAK2N,WACL,EAAK1B,YAtFU,EAyFnBA,SAAW,WAC8B,KAAlC,EAAKrM,MAAMgR,MAAM7O,eAChB,EAAKjC,SAAS,CAACgD,YAAW,IAEK,KAAhC,EAAKlD,MAAMgR,MAAMhP,aAChB,EAAK9B,SAAS,CAAC8C,UAAS,IAEE,WAA3B,EAAKhD,MAAMgR,MAAMM,QAChB,EAAKpR,SAAS,CAACsC,UAAU,UAE7B,EAAKtC,SAAS,CAACyB,eAAe,EAAK3B,MAAMgR,MAAM5M,SAC/C,EAAKlE,SAAS,CAAC4B,KAAK,EAAK9B,MAAMgR,MAAMlP,OACrC,EAAK5B,SAAS,CAACoD,SAAS,EAAKtD,MAAMgR,MAAM1N,WACzC,EAAKpD,SAAS,CAACyC,WAAW,EAAK3C,MAAMgR,MAAM3M,QAC3C,EAAKnE,SAAS,CAACiC,cAAc,EAAKnC,MAAMgR,MAAMG,WAC9C,EAAKjR,SAAS,CAAC8B,YAAY,EAAKhC,MAAMgR,MAAMvQ,SAC5C,EAAKP,SAAS,CAAC4C,IAAI,EAAK9C,MAAMgR,MAAMlO,MACpC,EAAK5C,SAAS,CAACoC,YAAY,EAAKtC,MAAMgR,MAAMO,UAC5C,EAAKjF,UAAU,EAAKtM,MAAMgR,MAAMlP,MAChC,EAAKgM,eACL,EAAKrB,cA7GU,EAgHnB7K,iBAAmB,SAACrB,GAChB,EAAKL,SAAS,CAAC4B,KAAKvB,EAAEE,OAAOC,SAjHd,EAoHnB2B,wBAA2B,SAAC9B,GACxB,EAAKL,SAAS,CAACoC,YAAY/B,EAAEE,OAAOC,SArHrB,EAwHnB6B,sBAAwB,SAAChC,GACrB,EAAKL,SAAS,CAACsC,UAAUjC,EAAEE,OAAOC,SAzHnB,EA4HnBgC,uBAAyB,SAACnC,GACtB,EAAKL,SAAS,CAACyC,WAAWpC,EAAEE,OAAOC,SA7HpB,EAgInBmC,UAAY,SAACtC,GACT,EAAKL,SAAS,CAAC4C,IAAIvC,EAAEE,OAAOC,SAjIb,EAoInBqC,qBAAuB,SAACxC,GACG,GAAvB,EAAKmB,MAAMsB,SAAmB,EAAK9C,SAAS,CAAC8C,UAAS,IAAU,EAAK9C,SAAS,CAAC8C,UAAS,KArIzE,EAwInBC,uBAAyB,SAAC1C,GACG,GAAzB,EAAKmB,MAAMwB,WAAqB,EAAKhD,SAAS,CAACgD,YAAW,IAAU,EAAKhD,SAAS,CAACgD,YAAW,KAzI/E,EA4InBC,wBAA0B,SAAC5C,GACvB,EAAKL,SAAS,CAAC8B,YAAYzB,EAAEE,OAAOC,SA7IrB,EAgJnB0C,0BAA4B,SAAC7C,GACzB,EAAKL,SAAS,CAACiC,cAAc5B,EAAEE,OAAOC,SAjJvB,EAoJnBsM,sBAAwB,WACpB,IAAIC,GAAS,EAAKvL,MAAMyP,SAAS,EAAKnR,MAAMqE,OAAO,EAAKrE,MAAMqE,MAAO,IACrE,EAAKnE,SAAS,CAACgC,aAAgC,OAAnB,EAAKR,MAAMI,MAAkB,EAAEmL,EAAOA,KAtJnD,EAyJnBH,oBAAsB,SAACvM,GACnB,IAAI0M,GAAS,EAAKvL,MAAMjB,OAAO,EAAKT,MAAMqE,OAAO,EAAKrE,MAAMqE,MAAO,IACnE,EAAKnE,SAAS,CAAC6B,WAA8B,QAAnB,EAAKL,MAAMI,MAAmB,EAAEmL,EAAOA,KA3JlD,EA8JnBX,UAAY,SAAC5B,GAEL,IAaI+C,EAdA,OAAL/C,IAGgB,OAFX+C,EAAWC,SAASC,eAAe,eAEJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,QACjCJ,EAASG,MAAMvI,MAAQ,SAGZ,OADfoI,EAAWC,SAASC,eAAe,gBACA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,QAGvB,QAALqF,IAEgB,OADX+C,EAAWC,SAASC,eAAe,gBACJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,MACjCJ,EAASG,MAAMvI,MAAQ,SAIZ,OAFfoI,EAAWC,SAASC,eAAe,eAEA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,WAtLhB,EA4LnBoH,WAAa,WAEL,IAYIgB,EAbqB,SAA1B,EAAK/L,MAAMY,aAA0D,GAA/B,EAAKZ,MAAMtB,KAAKoR,cAEtC,OADX/D,EAAWC,SAASC,eAAe,iBACJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,QACjCJ,EAASG,MAAMvI,MAAQ,SAGZ,OADfoI,EAAWC,SAASC,eAAe,eACA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,QAGF,OAA1B,EAAK3D,MAAMY,aAAuD,GAA/B,EAAKZ,MAAMtB,KAAKoR,cAEnC,OADX/D,EAAWC,SAASC,eAAe,eACJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,MACjCJ,EAASG,MAAMvI,MAAQ,SAIZ,OAFfoI,EAAWC,SAASC,eAAe,iBAEA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,WAnNhB,EAwNnByI,aAAe,WAEP,IAYIL,EAbqB,SAA1B,EAAK/L,MAAMY,aAA0D,GAA/B,EAAKZ,MAAMtB,KAAKoR,cAEtC,OADX/D,EAAWC,SAASC,eAAe,iBACJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,QACjCJ,EAASG,MAAMvI,MAAQ,SAGZ,OADfoI,EAAWC,SAASC,eAAe,eACA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,QAGF,OAA1B,EAAK3D,MAAMY,aAAuD,GAA/B,EAAKZ,MAAMtB,KAAKoR,cAEnC,OADX/D,EAAWC,SAASC,eAAe,eACJ,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,MACjCJ,EAASG,MAAMvI,MAAQ,SAIZ,OAFfoI,EAAWC,SAASC,eAAe,iBAEA,aAAZF,IACnBA,EAASG,MAAMC,gBAAkB,YACjCJ,EAASG,MAAMvI,MAAQ,WA/OhB,EA8QnBhC,aAAe,SAAC9C,GACZ,IAAI+C,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ,IAAIyK,EAAO,CACP,UAAY,EAAKlO,MAAMwC,UAAUoB,cACjC,IAAMD,SAAS,EAAKjC,MAAMoB,KAC1B,OAAS,OAAS,EAAKpB,MAAMC,eAAemJ,cAC5C,WAAa,EAAKpJ,MAAMY,YAAYwI,cACpC,MAA+B,KAAvB,EAAKpJ,MAAMiB,WAAiB,IAAM2K,WAAW,EAAK5L,MAAMiB,YAChE,SAAqC,KAA1B,EAAKjB,MAAMS,cAAoB,IAAMmL,WAAW,EAAK5L,MAAMS,eACtE,OAA4B,KAAnB,EAAKT,MAAMjB,OAAa,IAAM6M,WAAW,EAAK5L,MAAMjB,QAC7D,KAAO,EAAKiB,MAAMI,KAAK8B,cACvB,OAAS,EAAKlC,MAAMlB,OAAOsK,cAC3B,MAAQnH,SAAS,EAAK3D,MAAMyR,WAC5B,OAAgC,UAAvB,EAAKzR,MAAM0R,SAAuBpE,WAAY,EAAKtN,MAAMqE,MAAO,EAAK3C,MAAMsC,UAAU,IAAI,EAAKtC,MAAMY,YAAY,EAAKZ,MAAMlB,SAAS8M,WAAY,EAAKtN,MAAM2C,WAAY,EAAKjB,MAAMsC,UAAU,IAAI,EAAKtC,MAAMY,YAAY,EAAKZ,MAAMlB,SAC3O,MAAQ,EAAKkB,MAAMiB,WAAW,EAAK3C,MAAMqE,MAAQ,OAAO,SAE5DX,MAAM,0BACN/C,MAAM,mBAAoB,CACtBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAWsC,EACX,QAAUG,EACV,KAAO,CACH,UAAY,EAAKzD,MAAM0R,SAAS9N,cAChC,IAAMD,SAAS,EAAKjC,MAAMoB,KAC1B,OAAS,OAAS,EAAKpB,MAAMC,eAAemJ,cAC5C,WAAa,EAAKpJ,MAAMY,YAAYwI,cACpC,MAA+B,KAAvB,EAAKpJ,MAAMiB,WAAiB,IAAM2K,WAAW,EAAK5L,MAAMiB,YAChE,SAAqC,KAA1B,EAAKjB,MAAMS,cAAoB,IAAMmL,WAAW,EAAK5L,MAAMS,eACtE,OAAiC,KAAxB,EAAKT,MAAMM,YAAkB,IAAMsL,WAAW,EAAK5L,MAAMM,aAClE,KAAO,EAAKN,MAAMI,KAAK8B,cACvB,OAAS,EAAKlC,MAAMlB,OAAOsK,cAC3B,MAAQwC,WAAW,EAAKtN,MAAMqE,OAC9B,OAAgC,UAAvB,EAAKrE,MAAM0R,SAAuBpE,WAAY,EAAKtN,MAAMqE,MAAO,EAAK3C,MAAMsC,UAAU,IAAI,EAAKtC,MAAMY,YAAY,EAAKZ,MAAMlB,SAAS8M,WAAY,EAAKtN,MAAM2C,WAAY,EAAKjB,MAAMsC,UAAU,IAAI,EAAKtC,MAAMY,YAAY,EAAKZ,MAAMlB,SAC3O,MAAQ,EAAKkB,MAAMiB,WAAW,EAAK3C,MAAMqE,MAAQ,OAAO,QACxD,IAAQiJ,WAAWC,KAAKC,IAA6B,IAAzB,EAAK9L,MAAMsC,UAAU2N,IAAS,EAAK3R,MAAMqE,MAAM,EAAK3C,MAAMoB,IAAI,UAIrG7B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACW,KAAVA,EAAI+D,MACH,EAAKjF,MAAM4R,iBAAiB1D,MAGnC7M,OAAM,SAAAC,GACHoC,MAAMpC,EAAIE,KACV,EAAKtB,SAAS,CAACqB,MAAMD,EAAIE,UAtU/B,EAAKE,MAAQ,CACT4B,SAAW,EAAKtD,MAAMsD,SACtBlD,KAAO,CACH,YAAgB,EAAKJ,MAAMuQ,YAE/BvM,UAAY,GACZrC,eAAiB,GACjBG,KAAO,GACPQ,YAAc,GACdE,UAAY,SACZG,WAAW,IACXX,YAAY,IACZ8C,UAAU,IACV3C,cAAc,IACdD,aAAa,IACbc,UAAS,EACTE,YAAW,EACXJ,IAAI,EACJe,OAAQ,EACRE,KAAO,EACPgB,UAAW,EACXC,YAAa,EACbzD,MAAQ,GACRgD,SAAW,UACXC,UAAY,UACZG,WAAa,UACbC,SAAW,UACXV,UAAW,EACX2H,OAAS,EACTC,QAAU,GA/BG,E,qDAkCnB,c,kCAEA,c,gCAgNA,SAAmB9L,EAAM0B,GAClByD,KAAKzD,MAAMI,MAAQJ,EAAMI,OACxBqD,KAAK6H,wBACL7H,KAAK2H,sBACL3H,KAAKmH,UAAUnH,KAAKzD,MAAMI,OAE3BqD,KAAKzD,MAAMY,aAAeZ,EAAMY,aAC/B6C,KAAK2I,eAEN3I,KAAKzD,MAAMM,aAAeN,EAAMM,aAC/BmD,KAAK2H,sBAEN3H,KAAKzD,MAAMS,eAAiBT,EAAMS,eACjCgD,KAAK6H,wBAEN7H,KAAKzD,MAAMc,WAAad,EAAMc,WAC7B2C,KAAKsH,aAENtH,KAAKnF,MAAMuQ,YAAcvQ,EAAMuQ,aACF,GAAzBpL,KAAKnF,MAAMuQ,WACVpL,KAAK9E,mBAEL8E,KAAKlF,uB,oBAmEjB,WACI,IAAQiF,EAAYC,KAAKnF,MAAjBkF,QACR,OACI,8BACI,eAACK,EAAA,EAAD,CAAQC,sBAAoB,EAACC,sBAAoB,EACjDrF,KAAM+E,KAAKzD,MAAMtB,KAAKoR,YACtB7L,QAASR,KAAKlF,kBACd,kBAAgB,IAHhB,UAIA,cAAC2F,EAAA,EAAD,CAAaC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,qBAAKC,UAAWb,EAAQc,MAAxB,2BAGkB,OAAjBb,KAAKzD,MAAMI,KACR,cAACmE,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,sBAAsB3F,MAAOyE,KAAKzD,MAAMoK,QAAS/F,UAAWb,EAAQoJ,aAE7H,cAACrI,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,qBAAqB3F,MAAOyE,KAAKzD,MAAMmK,OAAQ9F,UAAWb,EAAQoJ,aAE/H,cAACrI,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,iBAAiB3F,MAAO6M,KAAKgB,MAAoD,IAA9CpJ,KAAKzD,MAAMsC,UAAU,IAAMmB,KAAKzD,MAAMlB,SAAa,IAAKuF,UAAWb,EAAQuJ,kBAG/K,cAACnI,EAAA,EAAD,UACI,qBAAKP,UAAWb,EAAQqB,YAAxB,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACZ,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,SAAS3F,MAAOyE,KAAKzD,MAAMC,uBAIhG,cAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAM,EAAjB,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACZ,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,eAAe3F,MAAOyE,KAAKnF,MAAMqE,cAItG,cAACmC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,gCACI,wBAAQnG,MAAM,MAAMmF,GAAG,YAAYE,UAAWb,EAAQwJ,UAAWpJ,QAASH,KAAKvD,iBAA/E,iBACA,wBAAQlB,MAAM,OAAOmF,GAAG,aAAaE,UAAWb,EAAQyJ,WAAYrJ,QAASH,KAAKvD,iBAAlF,yBAIZ,cAAC4E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,gCACI,wBAAQhB,GAAG,cAAcnF,MAAM,QAAQ0F,QAAQ,YAAYL,UAAWb,EAAQ0J,YAActJ,QAASH,KAAK9C,wBAA1G,sBACA,wBAAQwD,GAAG,YAAYnF,MAAM,MAAM0F,QAAQ,YAAYL,UAAWb,EAAQ2J,UAAWvJ,QAASH,KAAK9C,wBAAnG,wBAIZ,cAACmE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,eAACS,EAAA,EAAD,CAAYJ,SAAU/B,KAAK5C,sBAAuBuF,aAAc3C,KAAKzD,MAAMc,UAA3E,UACA,cAAC+E,EAAA,EAAD,CAAkB7G,MAAM,SAAS8G,QAAS,cAACC,EAAA,EAAD,IAAWpB,MAAM,WAC3D,cAACkB,EAAA,EAAD,CAAkB7G,MAAM,QAAQ8G,QAAS,cAACC,EAAA,EAAD,IAAWpB,MAAM,mBAKtE,cAACG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UAC2B,SAAtB1B,KAAKzD,MAAMc,UACR,8BACI,cAACyD,EAAA,EAAD,CAAWG,QAAQ,WAAWF,KAAK,QAAQwB,YAAY,cAAcrB,MAAM,QAAQ3F,MAAOyE,KAAKzD,MAAMiB,WAAYuE,SAAU/B,KAAKzC,2BAGpI,8BACI,cAACuD,EAAA,EAAD,CAAWC,KAAK,QAAQyB,UAAQ,EAACxB,SAAO,EAACC,QAAQ,WAAWC,MAAM,eAAc3F,MAAOyE,KAAKnF,MAAMqE,UAG1G,cAAC4B,EAAA,EAAD,CAAW2B,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,MAAM3F,MAAOyE,KAAKzD,MAAMoB,IAAKoE,SAAU/B,KAAKtC,iBAG3H,cAAC2D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACzB,EAAA,EAAD,CAAQE,QAASH,KAAKpC,qBAAsBqD,QAAQ,YAAYf,MAAM,UAAtE,0BAIZ,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACC1B,KAAKzD,MAAMsB,SACV,gCACA,cAACiD,EAAA,EAAD,CAAWF,UAAWb,EAAQ2C,WAAYH,YAAY,eAAerB,MAAM,eAAe3F,MAAOyE,KAAKzD,MAAMM,YAAakF,SAAU/B,KAAKhC,0BACxI,cAAC8C,EAAA,EAAD,CACMF,UAAWb,EAAQ2C,WACrBhC,GAAG,oBACHQ,MAAM,QACNyB,aAAa,GACb1B,QAAQ,WACR1F,MAAO6M,KAAKgB,MAA4B,IAAtBpJ,KAAKzD,MAAMK,YAAgB,IAC7CgG,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAIvB,4BAGX,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACQ,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACzB,EAAA,EAAD,CAAQE,QAASH,KAAKlC,uBAAwBmD,QAAQ,YAAYf,MAAM,UAAxE,4BAIZ,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACC1B,KAAKzD,MAAMwB,WACV,gCACA,cAAC+C,EAAA,EAAD,CAAWF,UAAWb,EAAQ2C,WAAYH,YAAY,iBAAiBrB,MAAM,kBAAkB3F,MAAOyE,KAAKzD,MAAMS,cAAe+E,SAAU/B,KAAK/B,4BAC/I,cAAC6C,EAAA,EAAD,CACMF,UAAWb,EAAQ2C,WACrBhC,GAAG,oBACHQ,MAAM,QACNyB,aAAa,GACb1B,QAAQ,WACR1F,MAAO6M,KAAKgB,MAA8B,IAAxBpJ,KAAKzD,MAAMQ,cAAkB,IAC/C6F,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAIvB,4BAGP,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BAC2B,SAAtB1B,KAAKzD,MAAMc,UACR,gCACI,eAAC4F,EAAA,EAAD,WAAajD,KAAKzD,MAAMI,KAAxB,QAAmCqD,KAAKzD,MAAMiB,cAC9C,eAACyF,EAAA,EAAD,uCAAsCmF,KAAKgB,MAAQpJ,KAAKzD,MAAMiB,WAAWwC,KAAKzD,MAAMoB,IAAKqC,KAAKzD,MAAMsC,UAAU,IAAImB,KAAKzD,MAAMY,YAAY6C,KAAKzD,MAAMlB,QAAS,KAAK,UAGtK,gCACI,eAAC4H,EAAA,EAAD,WAAajD,KAAKzD,MAAMI,KAAxB,QAAmCqD,KAAKnF,MAAMqE,SAC9C,eAAC+D,EAAA,EAAD,uCAAsCmF,KAAKgB,MAAQpJ,KAAKnF,MAAMqE,MAAMc,KAAKzD,MAAMoB,IAAKqC,KAAKzD,MAAMsC,UAAU,IAAImB,KAAKzD,MAAMY,YAAY6C,KAAKzD,MAAMlB,QAAS,KAAK,gBAMjL,cAACgG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACK1B,KAAKzD,MAAMsC,UAAU,IAAMmB,KAAKzD,MAAMlB,SAAU2E,KAAKnF,MAAMqE,MAAMc,KAAKzD,MAAMoB,IAAKqC,KAAKzD,MAAMsC,UAAU,IAAImB,KAAKzD,MAAMY,YAAY6C,KAAKzD,MAAMlB,QACzI,8BACI,cAAC4E,EAAA,EAAD,CAAQwC,KAAK,SAAStC,QAASH,KAAK9B,aAAc+C,QAAQ,YAAYf,MAAM,UAA5E,2BAGJ,mCAQxB,cAACgD,EAAA,EAAD,UACI,cAACjD,EAAA,EAAD,CAAQE,QAASH,KAAKlF,kBAAmBoF,MAAM,UAA/C,+B,GAnfQvF,aA4fXwI,gBA3kBJ,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BH,YAAc,CACZkC,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBmC,UAAY,CACVhF,OAAS,MACTsE,MAAO,QAETN,WAAa,CACTM,MAAQ,SAEZmG,WAAa,CACXnG,MAAQ,SAEVsG,WAAa,CACXtG,MAAQ,SAEVuG,UAAY,CACVrJ,MAAQ,QACRwI,gBAAkB,YAClB1F,MAAO,OACPY,SAAW,QAEb4F,WAAa,CACXtJ,MAAQ,MACRwI,gBAAkB,YAClB1F,MAAO,OACPY,SAAW,QAEb6F,YAAc,CACZvJ,MAAQ,QACRwI,gBAAkB,YAClB1F,MAAO,QACPY,SAAW,QAEb8F,UAAY,CACVxJ,MAAQ,MACRwI,gBAAkB,YAClB1F,MAAO,QACPY,SAAW,QAEbD,YAAc,CACVC,SAAW,MACXC,MAAQ,UAEZC,OAAS,CACPpF,OAAS,MACTkF,SAAW,OACXG,WAAa,OACbC,UAAY,UAEdnD,MAAQ,CACNoD,SAAW,KAEbpC,OAAS,CACPZ,QAAU,WACV+B,MAAQ,SAEVkB,KAAO,CACHhE,MAAQ,WAEZyJ,UAAY,CACRzJ,MAAQ,UAggBsB,CAAEiE,WAAW,GAAhChB,CAAwC8I,IC1kBnDS,G,kDACF,WAAY7R,GAAQ,IAAD,8BACf,cAAMA,IAiBVgP,EAAI,SAAC9N,GAGD,IAFA,IAAIoQ,EAAS,SACTQ,EAAK,GACD/F,EAAI,EAAGA,EAAG7K,EAAIgN,KAAKjC,OAAOF,IACL,WAAtB7K,EAAIgN,KAAKnC,GAAGuF,SACXA,EAAS,WACbQ,EAAGC,KAAK7Q,EAAIgN,KAAKnC,GAAG3H,QAExBzD,MAAM,8BAA+B,CACjCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,QAAY8Q,MAGnB7Q,MAAK,SAAAgO,GAAI,OAAIA,EAAK9N,UAClBF,MAAK,SAAAgO,GACc,KAAbA,EAAKhK,MACJtE,MAAM,8BAA+B,CACjCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,8BAAgB,EAAKU,MAAMN,SAAW0Q,OAG7C7Q,MAAK,SAAA+Q,GAAI,OAAIA,EAAK7Q,UAClBF,MAAK,SAAA+Q,GACF,EAAK9R,SAAS,CACViP,OAAO,2BAAI,EAAKzN,MAAMyN,QAAU6C,EAAK7C,QACrC/N,QAAQ,GAAD,mBAAK,EAAKM,MAAMN,SAAW0Q,KACpC,WACe,WAAVR,EACC,EAAKpR,SAAS,CAAC+R,cAAc,GAAD,mBAAK/Q,EAAIgN,MAAT,YAAiB,EAAKxM,MAAMuQ,kBACzC,UAAVX,GACL,EAAKpR,SAAS,CAAC8L,aAAa,GAAD,mBAAK9K,EAAIgN,MAAT,YAAiB,EAAKxM,MAAMsK,uBAIlE3K,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,YAIpCH,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA9Dd,EAgKnB0Q,yBAA2B,SAAC3R,GACxB,EAAKL,SAAS,CAACiS,YAAY,UAAUC,aAAc,UAAUC,cAAe,UAAUC,YAAY,aAjKnF,EAmKnBC,2BAA6B,SAAChS,GAC1B,EAAKL,SAAS,CAACiS,YAAY,UAAUC,aAAc,UAAUC,cAAe,UAAUC,YAAY,aApKnF,EAsKnBE,0BAA4B,SAACjS,GACzB,EAAKL,SAAS,CAACiS,YAAY,UAAUC,aAAc,UAAUC,cAAe,UAAUC,YAAY,aAvKnF,EAyKnBG,yBAA2B,SAAClS,GACxB,EAAKL,SAAS,CAACiS,YAAY,UAAUC,aAAc,UAAUC,cAAe,UAAUC,YAAY,aA1KnF,EA4KnBI,aAAe,SAACnS,GACZ,IAAI+C,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,oBAAqB,CACvBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,EACZ,GAAKlD,EAAEE,OAAOC,UAGrBO,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACa,KAAZA,EAAI+D,KACH,EAAK/E,UAAS,SAAAC,GAAS,MAAG,CAACwS,aAAa,GAAD,mBAAKxS,EAAUwS,cAAf,CAA6BzR,EAAIgN,WAGxE,EAAKhO,SAAS,CAACqB,MAAML,EAAIM,SAGhCH,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA3Md,EA8MnBoR,cAAgB,WACZ,IAAItP,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,sBAAuB,CACzBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,MAGnBxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACF,GAAe,KAAZA,EAAI+D,KAAY,CAEf,EAAK/E,SAAS,CAAC2S,OADF,SAGb,EAAK3S,SAAS,CAACqB,MAAML,EAAIM,SAGhCH,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA5Od,EAgPnBsR,WAAa,SAACvS,GACV,IAAI+C,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,kBAAmB,CACrBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,EACZ,QAAYlD,EAAEE,OAAOC,UAG5BO,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACa,KAAZA,EAAI+D,MACH,EAAK/E,SAAS,CACV6S,eAAe,GAAD,mBAAK,EAAKrR,MAAMqR,gBAAhB,CAA+B7R,EAAIgN,OACjDlC,aAAY,YAAO,EAAKtK,MAAMsK,aAAarB,QAAO,SAAAhE,GAAI,OAAIA,EAAKsK,SAAW1Q,EAAEE,OAAOC,WACrF,EAAKsS,iBACP,EAAKhT,MAAMgO,WAAW9M,EAAI6C,OAE1B,EAAK7D,SAAS,CAACqB,MAAML,EAAIM,SAGhCH,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UAlRd,EAqRnBwR,gBAAkB,WAEd,IADA,IAAIH,EAAS,EACL9G,EAAE,EAAEA,EAAE,EAAKrK,MAAMsK,aAAaC,OAAOF,IAAI,CAC7C,IAAIiF,EAAQ,EAAKtP,MAAMsK,aAAaD,GACnB,OAAdiF,EAAMlP,KACL+Q,IAAW,EAAKnR,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAEpE+P,KAAY,EAAE,EAAKnR,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAG/E,EAAK5C,SAAS,CAAC2S,OAAOA,KA/RP,EAkSnBxD,KAAO,WACH1O,MAAM,8BAA+B,CACjCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,QAAY,EAAKU,MAAMN,YAG9BH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKhB,SAAS,CAACiP,OAAO,2BAAI,EAAKzN,MAAMyN,QAAUjO,EAAIiO,SAAS,EAAK6D,oBAEpE3R,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA/Sd,EAmTnB6P,WAAa,aAnTM,EAuTnB4B,OAAS,SAACpR,EAAEqR,GACR,OAAOrR,EAAIqR,EAAEpQ,KAxTE,EA2TnBqQ,oBAAsB,WAClB,EAAKjT,SAAS,CAACkT,eAAc,KA5Td,EA+TnBlC,YAAc,aA7TV,EAAKxP,MAAQ,CACTyQ,YAAc,UACdC,aAAe,UACfC,cAAgB,UAChBC,YAAc,UACdtG,aAAe,GACfiG,cAAgB,GAChBc,eAAiB,GACjBJ,aAAe,GACfU,aAAe,GACfjS,QAAU,GACV+N,OAAS,GACTiE,eAAgB,EAChBP,OAAS,GAfE,E,qDAkEnB,WAAqB,IAAD,OACZvP,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAEZ9C,MAAM,yBAA0B,CAC5BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,MAGnBxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACa,KAAZA,EAAI+D,KACH,EAAK+J,EAAE9N,GAEP,EAAKhB,SAAS,CAACqB,MAAML,EAAIM,SAGhCH,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,SAG7Bb,MAAM,wBAAyB,CAC7BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,MAGjBxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,MACL,EAAK+J,EAAE9N,GACP,EAAKlB,MAAMsT,gBAAgBpS,EAAIgN,OAE/B,EAAKhO,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,SAG3Bb,MAAM,0BAA2B,CAC7BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,MAGjBxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,KACL,EAAK/E,SAAS,CAAC6S,eAAe7R,EAAIgN,OAElC,EAAKhO,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,SAG3Bb,MAAM,wBAAyB,CAC7BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,MAGjBxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,KACL,EAAK/E,SAAS,CAACyS,aAAazR,EAAIgN,OAEhC,EAAKhO,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,W,gCAwKjC,SAAmBxB,EAAM0B,GACrB,GAAGyD,KAAKnF,MAAMkO,MAAQlO,EAAMkO,KAAK,CAC7B,IAAIhN,EAAM,GACVA,EAAG,KAAW,CAACiE,KAAKnF,MAAMkO,MAC1B/I,KAAK6J,EAAE9N,M,oBAIf,WAAS,IAAD,OACIgE,EAAYC,KAAKnF,MAAjBkF,QACJqO,EACJ,8BACI,cAACxD,EAAA,EAAD,CAAgBC,UAAWC,IAAOlK,UAAWb,EAAQuB,UAArD,SACI,eAACyJ,EAAA,EAAD,CAAO,aAAW,eAAlB,UACI,cAACsD,GAAA,EAAD,UACI,eAACpD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWnK,KAAK,SAAhB,oBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,kBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,uBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,wBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,sBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,uBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,iBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,wBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,uBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,8BAGR,cAACiK,EAAA,EAAD,UACKhL,KAAKzD,MAAMqR,eAAe3L,KAAI,SAAA4J,GAAK,OAC5B,cAAC,WAAD,UACA,eAACZ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAaW,EAAM5M,SACnB,cAACiM,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMlP,OACjC,cAACuO,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMyC,YACjC,cAACpD,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAM0C,aACjC,cAACrD,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAM2C,WACjC,cAACtD,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAM4C,YACjC,cAACvD,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMlO,MACjC,cAACuN,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BuE,KAAKgB,MAAMyC,EAAMlO,IAAIkO,EAAM0C,WAAW,KAAK,MACtE,cAACrD,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BuE,KAAKgB,MAAgB,IAAVyC,EAAM3D,KAAS,MACrD,cAACgD,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SACmB,OAAdgI,EAAMlP,KACHyL,KAAKgB,OAAOyC,EAAM4C,UAAY5C,EAAM0C,YAAY1C,EAAMlO,IAAI,KAAK,IAE/DyK,KAAKgB,QAAQyC,EAAM4C,UAAY5C,EAAM0C,YAAY1C,EAAMlO,IAAI,KAAK,uBAYhG+Q,EACA,8BACI,cAAC9D,EAAA,EAAD,CAAgBC,UAAWC,IAAOlK,UAAWb,EAAQuB,UAArD,SACI,eAACyJ,EAAA,EAAD,CAAO,aAAW,eAAlB,UACI,cAACsD,GAAA,EAAD,UACI,eAACpD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWnK,KAAK,SAAhB,oBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,kBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,wBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,iBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,sBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,oBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,0BACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,0BACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,iBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,sBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,8BAGR,cAACiK,EAAA,EAAD,UACKhL,KAAKzD,MAAMsK,aAAa5E,KAAI,SAAA4J,GAAK,OAC9B,cAAC,WAAD,UACA,eAACZ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAaW,EAAM5M,SACnB,cAACiM,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMlP,OACjC,cAACuO,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAM3M,QACjC,cAACgM,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMlO,MACjC,cAACuN,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMG,WACjC,cAACd,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMvQ,SACjC,cAAC4P,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAM1O,cACjC,cAAC+N,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2B,EAAKtH,MAAMyN,OAAO6B,EAAM5M,QAAQoM,MAC3D,cAACH,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SACmB,OAAdgI,EAAMlP,KACH,iCACM,EAAKJ,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,KAAK,EACxE,cAACjF,EAAA,EAAD,CAAYrC,UAAWb,EAAQ4O,OAA/B,SAAwCvG,KAAKgB,MAAmF,MAA1E,EAAK7M,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,KAAU,OAErI,cAACjF,EAAA,EAAD,CAAYrC,UAAWb,EAAQ6O,OAA/B,SAAwCxG,KAAKgB,MAAmF,MAA1E,EAAK7M,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,KAAU,QAEvI,EAAK3L,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,KAAK,EACxE,eAACjF,EAAA,EAAD,CAAYrC,UAAWb,EAAQ4O,OAA/B,UAAwCvG,KAAKgB,QAAU,EAAK7M,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,MAAM2D,EAAM3M,MAAM2M,EAAMlO,KAAM,IAAS,KAAnK,OAEA,eAACsF,EAAA,EAAD,CAAYrC,UAAWb,EAAQ6O,OAA/B,UAAwCxG,KAAKgB,QAAU,EAAK7M,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,MAAM2D,EAAM3M,MAAM2M,EAAMlO,KAAM,IAAS,KAAnK,UAIR,iCACE,EAAKpB,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,KAAK,EACxE,cAACjF,EAAA,EAAD,CAAYrC,UAAWb,EAAQ4O,OAA/B,SAAwCvG,KAAKgB,MAAsF,OAA1E,EAAK7M,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,KAAU,OAExI,cAACjF,EAAA,EAAD,CAAYrC,UAAWb,EAAQ6O,OAA/B,SAAwCxG,KAAKgB,MAAsF,OAA1E,EAAK7M,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,KAAU,QAE1I,EAAK3L,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,KAAK,EACxE,eAACjF,EAAA,EAAD,CAAYrC,UAAWb,EAAQ4O,OAA/B,UAAwCvG,KAAKgB,SAAa,EAAK7M,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,MAAM2D,EAAM3M,MAAM2M,EAAMlO,KAAM,IAAS,KAAtK,OAEA,eAACsF,EAAA,EAAD,CAAYrC,UAAWb,EAAQ6O,OAA/B,UAAwCxG,KAAKgB,SAAa,EAAK7M,MAAMyN,OAAO6B,EAAM5M,QAAQoM,IAAMQ,EAAM3M,OAAO2M,EAAMlO,IAAMkO,EAAM3D,MAAM2D,EAAM3M,MAAM2M,EAAMlO,KAAM,IAAS,KAAtK,YAKZ,cAACuN,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BuE,KAAKgB,MAAgB,IAAVyC,EAAM3D,KAAU,MACtD,eAACgD,EAAA,EAAD,WACI,wBAAQ/K,QAAS,EAAKwN,WAAYpS,MAAOsQ,EAAMC,QAAS5L,MAAM,MAA9D,kBACA,cAAC,GAAD,CAAahB,MAAO2M,EAAM3M,MAAO2M,MAAOA,EAAOlP,KAAMkP,EAAMlP,KAAMoP,YAAa,EAAKA,kCAW3G8C,EACA,8BACI,cAACjE,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACI,eAACC,EAAA,EAAD,CAAO,aAAW,eAAlB,UACI,cAACsD,GAAA,EAAD,UACI,eAACpD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWnK,KAAK,SAAhB,oBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,kBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,2BACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,mBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,iBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,sBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,oBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,gCAGR,cAACiK,EAAA,EAAD,UACKhL,KAAKzD,MAAMuQ,cAAc7K,KAAI,SAAA4J,GAAK,OACnC,cAAC,WAAD,UACA,eAACZ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAaW,EAAM5M,SACnB,cAACiM,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMlP,OACjC,cAACuO,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMiD,YACjC,cAAC5D,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAM3M,QACjC,cAACgM,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMlO,MACjC,cAACuN,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMG,WACjC,cAACd,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMvQ,SACjC,eAAC4P,EAAA,EAAD,WACI,wBAAQ/K,QAAS,EAAKwN,WAAYpS,MAAOsQ,EAAMC,QAAS5L,MAAM,MAA9D,kBACA,wBAAQC,QAAS,EAAK6N,oBAAqBzS,MAAOsQ,EAAMC,QAAS5L,MAAM,MAAvE,oBACA,cAAC,GAAD,CAAekL,WAAY,EAAK7O,MAAM0R,cAAe/O,MAAO,GAAI2M,MAAOA,EAAOK,WAAY,EAAKA,iCAWnH6C,EACA,8BACI,cAACnE,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACI,eAACC,EAAA,EAAD,CAAO,aAAW,eAAlB,UACI,cAACsD,GAAA,EAAD,UACI,eAACpD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWnK,KAAK,SAAhB,oBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,kBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,mBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,iBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,sBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,oBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,6BAGR,cAACiK,EAAA,EAAD,UACKhL,KAAKzD,MAAMiR,aAAavL,KAAI,SAAA4J,GAAK,OAClC,cAAC,WAAD,UACA,eAACZ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAaW,EAAM5M,SACnB,cAACiM,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMlP,OACjC,cAACuO,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMiD,YACjC,cAAC5D,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAM3M,QACjC,cAACgM,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMlO,MACjC,cAACuN,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMG,WACjC,cAACd,EAAA,EAAD,CAAWrH,MAAM,SAAjB,SAA2BgI,EAAMvQ,SACjC,eAAC4P,EAAA,EAAD,WACI,wBAAQ/K,QAAS,EAAKoN,aAAchS,MAAOsQ,EAAMC,QAAS5L,MAAM,MAAhE,wBACA,wBAAQA,MAAM,MAAd,wCAYhC,OACA,gCACI,uBACA,cAACD,EAAA,EAAD,CAAQW,UAAWb,EAAQmC,OAAQjB,QAAQ,YAAYf,MAAOF,KAAKzD,MAAMyQ,YAAa7M,QAASH,KAAK+M,yBAApG,2BACA,cAAC9M,EAAA,EAAD,CAAQW,UAAWb,EAAQmC,OAAQjB,QAAQ,YAAYf,MAAOF,KAAKzD,MAAM0Q,aAAc9M,QAASH,KAAKqN,0BAArG,4BACA,cAACpN,EAAA,EAAD,CAAQW,UAAWb,EAAQmC,OAAQjB,QAAQ,YAAYf,MAAOF,KAAKzD,MAAM2Q,cAAe/M,QAASH,KAAKoN,2BAAtG,6BACA,cAACnN,EAAA,EAAD,CAAQW,UAAWb,EAAQmC,OAAQjB,QAAQ,YAAYf,MAAOF,KAAKzD,MAAM4Q,YAAahN,QAASH,KAAKsN,yBAApG,6BACyB,WAAxBtN,KAAKzD,MAAMyQ,YAAuB0B,EAAuC,WAA1B1O,KAAKzD,MAAM2Q,cAAyBkB,EAAwC,WAAzBpO,KAAKzD,MAAM0Q,aAAwB4B,EAAcE,EACnJ/O,KAAKzD,MAAMsK,aAAaC,OAAO,EAC5B,eAAC7D,EAAA,EAAD,wBAAuBmF,KAAKgB,MAAwB,IAAlBpJ,KAAKzD,MAAMmR,QAAa,OAE1D,cAACzK,EAAA,EAAD,yBAEJ,cAAChD,EAAA,EAAD,CAAQE,QAASH,KAAKyN,cAAtB,6B,GAriBQ9S,aA2iBTwI,gBA/jBF,SAAAC,GAAK,MAAK,CACnBlB,OAAQ,CACJc,MAAO,OAEXgM,UAAY,CACRvL,OAAS,SAEbnC,UAAW,CACPqK,UAAW,SAEfgD,OAAS,CACL5K,WAAa,OACb7D,MAAQ,SAEZ0O,OAAS,CACL7K,WAAa,OACb7D,MAAQ,UA+iBkB,CAAEiE,WAAW,GAAhChB,CAAwCuJ,IC5djDzQ,GAAU,CAAC,WAAW,cACtBgT,G,kDACF,WAAYpU,GAAQ,IAAD,8BACjB,cAAMA,IAMRgP,EAAI,SAAC9N,GACHP,MAAM,8BAA+B,CACjCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,QAAYE,EAAIE,YAGvBH,MAAK,SAAAgO,GAAI,OAAIA,EAAK9N,UAClBF,MAAK,SAAAgO,GAEF,IADA,IAAIC,EAAU,GACNnD,EAAI,EAAGA,EAAI7K,EAAIE,QAAQ6K,OAAOF,IACpCmD,EAAQhO,EAAIE,QAAQ2K,IAAM,CACxB,IAAM,EACN,WAAa,GAGjB,EAAK7L,SAAS,CACZiP,OAAM,2BAAO,EAAKzN,MAAMyN,QAAUD,KAClC,WAEA,EAAKhP,SAAS,CAACkB,QAAQ,GAAD,mBAAK,EAAKM,MAAMN,SAAhB,YAA4BF,EAAIE,kBAG3DC,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA9B7B,EAAKE,MAAQ,CACXyN,OAAS,GACT/N,QAAU,IAJK,E,sDAmCnB,SAAmBpB,EAAM0B,GAClByD,KAAKnF,MAAMmP,QAAUnP,EAAMmP,QAC5BhK,KAAKjF,SAAS,CAACiP,OAAO,2BAAIhK,KAAKzD,MAAMyN,QAAUhK,KAAKnF,MAAMmP,Y,+BAGhE,WACE,IAAIjO,EAAM,GACVA,EAAG,QAAcE,GACjB+D,KAAK6J,EAAE9N,GACPiE,KAAKnF,MAAMoP,WAAWhO,M,oBAExB,WAAU,IAAD,OACG8D,EAAYC,KAAKnF,MAAjBkF,QACR,OACI,gCACI,uBACA,uBACA,eAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACWvB,KAAKzD,MAAMN,QAAQgG,KAAI,SAAChD,GAAD,OAC9B,cAACoC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACA,cAACqJ,EAAA,EAAD,CAAOlK,UAAWb,EAAQmP,MAAOC,UAAW,EAA5C,SACI,eAAC9N,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACM,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACwB,EAAA,EAAD,CAAYrC,UAAWb,EAAQc,MAA/B,SAAuC5B,MAE3C,cAACoC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACwB,EAAA,EAAD,CAAYrC,UAAWb,EAAQqP,SAA/B,SAA0C,EAAK7S,MAAMyN,OAAO/K,GAAQoM,QAExE,cAAChK,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACG,EAAKlF,MAAMyN,OAAO/K,GAAQoM,IAAI,EAAK9O,MAAMyN,OAAO/K,GAAQoQ,YAAY,EACnE,cAACpM,EAAA,EAAD,CAAYrC,UAAWb,EAAQ4O,OAA/B,SAAwCvG,KAAKgB,MAA2E,KAApE,EAAK7M,MAAMyN,OAAO/K,GAAQoM,IAAI,EAAK9O,MAAMyN,OAAO/K,GAAQoQ,aAAiB,MAE7H,cAACpM,EAAA,EAAD,CAAYrC,UAAWb,EAAQ6O,OAA/B,SAAwCxG,KAAKgB,MAA2E,KAApE,EAAK7M,MAAMyN,OAAO/K,GAAQoM,IAAI,EAAK9O,MAAMyN,OAAO/K,GAAQoQ,aAAiB,QAGjI,cAAChO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACG,EAAKlF,MAAMyN,OAAO/K,GAAQoM,IAAI,EAAK9O,MAAMyN,OAAO/K,GAAQoQ,YAAY,EACnE,cAACpM,EAAA,EAAD,CAAYrC,UAAWb,EAAQ4O,OAA/B,SAAwCvG,KAAKgB,OAAO,EAAK7M,MAAMyN,OAAO/K,GAAQoM,IAAI,EAAK9O,MAAMyN,OAAO/K,GAAQoQ,YAAY,EAAK9S,MAAMyN,OAAO/K,GAAQoQ,WAAW,KAAO,MAEpK,eAACpM,EAAA,EAAD,CAAYrC,UAAWb,EAAQ6O,OAA/B,UAAwCxG,KAAKgB,OAAQ,EAAK7M,MAAMyN,OAAO/K,GAAQoM,IAAI,EAAK9O,MAAMyN,OAAO/K,GAAQoQ,YAAY,EAAK9S,MAAMyN,OAAO/K,GAAQoQ,WAAY,KAAO,IAAtK,SAGJ,cAAChO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACG,EAAKlF,MAAMyN,OAAO/K,GAAQoM,IAAI,EAAK9O,MAAMyN,OAAO/K,GAAQoQ,YAAY,EACnE,cAACpM,EAAA,EAAD,CAAYrC,UAAWb,EAAQ4O,OAA/B,eAEA,cAAC1L,EAAA,EAAD,CAAYrC,UAAWb,EAAQ6O,OAA/B,gCAWtB,cAACvN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACA,cAACqJ,EAAA,EAAD,CAAOlK,UAAWb,EAAQmP,MAAOC,UAAW,EAA5C,SACQ,eAAC9N,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACwB,EAAA,EAAD,CAAYrC,UAAWb,EAAQc,MAA/B,qBAEJ,cAACQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACwB,EAAA,EAAD,CAAYrC,UAAWb,EAAQqP,SAA/B,SAA0ChH,KAAKgB,MAA4B,IAAtBpJ,KAAKnF,MAAMsQ,SAAS9B,GAAO,QAEpF,cAAChI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACGzB,KAAKnF,MAAMsQ,SAAS9B,EAAErJ,KAAKnF,MAAMsQ,SAASmE,IAAI,EAC7C,cAACrM,EAAA,EAAD,CAAYrC,UAAWb,EAAQ4O,OAA/B,SAAwCvG,KAAKgB,MAAqD,KAA9CpJ,KAAKnF,MAAMsQ,SAAS9B,EAAErJ,KAAKnF,MAAMsQ,SAASmE,KAAS,MAEvG,cAACrM,EAAA,EAAD,CAAYrC,UAAWb,EAAQ6O,OAA/B,SAAwCxG,KAAKgB,MAAqD,KAA9CpJ,KAAKnF,MAAMsQ,SAAS9B,EAAErJ,KAAKnF,MAAMsQ,SAASmE,KAAS,6B,GA/GlH3U,aA4HdwI,gBA3MF,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BH,YAAc,CACZkC,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBgO,OAAS,CACPjM,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAGxBmC,UAAY,CACVhF,OAAS,OACTsE,MAAO,SAETd,OAAS,CACPxD,OAAS,OACTsE,MAAO,SAETW,YAAc,CACVC,SAAW,OACXC,MAAQ,UAEZC,OAAS,CACPpF,OAAS,MACTkF,SAAW,OACXG,WAAa,OACbC,UAAY,UAEdnD,MAAQ,CACJ+C,SAAW,OACXG,WAAa,OACb7D,MAAQ,QAEZkP,SAAW,CACTxL,SAAW,OACXG,WAAa,OACb7D,MAAQ,SAEVsP,YAAc,CACZ5L,SAAW,OACXG,WAAa,QAEflC,OAAS,CACPZ,QAAU,WACV+B,MAAQ,SAEVkM,MAAQ,CACN5L,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBoN,OAAS,CACP/K,SAAW,OACXG,WAAa,OACb7D,MAAQ,SAEV0O,OAAS,CACPhL,SAAW,OACXG,WAAa,OACb7D,MAAQ,UAiIwB,CAAEiE,WAAW,GAAhChB,CAAwC8L,ICvKnDQ,G,kDACF,WAAY5U,GAAQ,IAAD,8BACjB,cAAMA,IAqBR6U,WAAa,WACX,IAAIvR,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,oBAAqB,CACzBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,MAGjBxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,KACL,EAAK/E,SAAS,CACZ6E,UAAS,EACTsG,KAAI,2BACC,EAAK3J,MAAM2J,MADZ,kBAED,WAAc/H,MAEjB,WACA,EAAKyK,cAGP,EAAK7N,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA3DV,EA8DnBuM,SAAW,WACT,IAAIzK,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,sBAAuB,CAC3BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAWsC,EACX,QAAUG,MAGfxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACW,KAAVA,EAAI+D,MACH,EAAK/E,SAAS,CAACoQ,SAASpP,EAAIgN,UAGnC7M,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UAzFZ,EA6FnBsT,aAAe,WACbnU,MAAM,mBAAoB,CACxBC,OAAS,QAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJ,EAAKhB,SAAS,CAACiO,QAAQjN,OAExBG,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UAtGV,EAyGnBuT,aAAe,WACb,IAAIzR,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAGZ9C,MAAM,mBAAoB,CACtBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAWsC,EACX,QAAUG,MAGjBxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACW,KAAVA,EAAI+D,MACH,EAAK/E,SAAS,CAAC6E,UAAS,OAG/B1D,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UApIZ,EA+InB4N,WAAa,SAACtL,GACZnD,MAAM,8BAA+B,CACnCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CACpB,QAAU8C,MAGb7C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAEJ,IADA,IAAIgO,EAAU,GACNnD,EAAE,EAAEA,EAAEjI,EAAEmI,OAAOF,IACrBmD,EAAQpL,EAAEiI,IAAM,CACd,IAAM,IACN,WAAa,GAGjB,EAAK7L,SAAS,CAACiP,OAAO,2BAAID,GAAW,EAAKxN,MAAMyN,UAAS,WACvD,EAAKjP,SAAS,CAACkB,QAAQ,GAAD,mBAAK,EAAKM,MAAMN,SAAhB,YAA2B0C,YAGpDzC,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UArKZ,EAyKnBwT,aAAe,SAAClR,GACd,EAAK5D,SAAS,CAACkB,QAAQ,EAAKM,MAAMN,QAAQuJ,QAAO,SAAAhE,GAAI,OAAEA,GAAM7C,QA1K5C,EA6KnBmR,cAAgB,SAACnR,GACb,IAAI,IAAIiI,EAAE,EAAEA,EAAEjI,EAAEmI,OAAOF,IACnB,EAAK7L,SAAS,CAACkB,QAAQ,EAAKM,MAAMN,QAAQuJ,QAAO,SAAAhE,GAAI,OAAEA,GAAM7C,EAAEiI,SA/KpD,EAmLnB5H,YAAc,SAACgL,GACb,EAAKjP,SAAS,CAACiP,OAAOA,KApLL,EAuLnBlB,UAAY,SAACC,GACX,EAAKhO,SAAS,CAACgO,KAAKA,KAxLH,EA2LnBF,WAAa,SAACjK,GACZ,EAAK7D,SAAS,CACZoQ,SAAS,2BACJ,EAAK5O,MAAM4O,UADR,IAEN9B,EAAE,EAAK9M,MAAM4O,SAAS9B,EAAIzK,OA/Lb,EAoMnBuP,gBAAkB,SAACpF,GACjB,EAAKhO,SAAS,CAAC8L,aAAakC,KArMX,EAwMnBmB,KAAO,WACL1O,MAAM,8BAA+B,CACnCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CACpB,QAAU,EAAKU,MAAMN,YAGxBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAEJ,EAAKhB,SAAS,CAACiP,OAAO,2BAAI,EAAKzN,MAAMyN,QAAUjO,EAAIiO,aAEpD9N,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UApN7B,EAAKE,MAAQ,CACXqD,UAAW,EACXxD,MAAQ,GACR8J,KAAO,CACH/H,SAAW,IAEflC,QAAQ,GACR8T,MAAQ,EACR5E,SAAW,GACXjD,IAAM,EACNrB,aAAa,GACbkC,KAAK,GACLC,QAAU,CACR,GAAK,KACL,GAAK,KACL,IAAM,MAERgB,OAAS,IAnBM,E,qDAyInB,WAAqB,IAAD,OAChBhK,KAAK0P,aACL1P,KAAK2P,eACL3P,KAAK0K,SAAWC,aAAY,kBAAM,EAAKT,SAAQ,O,kCA8EnD,WACE8F,cAAchQ,KAAKkK,Q,oBAGrB,WACI,IAAQnK,EAAYC,KAAKnF,MAAjBkF,QACR,OAA0B,GAAvBC,KAAKzD,MAAMqD,SAEN,8BACI,cAACqQ,EAAA,EAAD,CAAMC,KAAK,cAAX,oCAMJ,gCACI,cAACC,EAAA,EAAD,CAAQpN,SAAS,SAASnC,UAAWb,EAAQ+D,OAA7C,SACI,eAACnD,EAAA,EAAD,WACE,eAACsC,EAAA,EAAD,CAAYrC,UAAWb,EAAQc,MAA/B,sBACcb,KAAKzD,MAAM2J,KAAK/H,YAE9B,cAAC,EAAD,IACA,cAAC8B,EAAA,EAAD,CAAQC,MAAM,UAAU2D,MAAM,QAA9B,0BACA,cAAC5D,EAAA,EAAD,CAAQC,MAAM,UAAU2D,MAAM,QAA9B,qBACA,cAAC5D,EAAA,EAAD,CAAQC,MAAM,UAAU2D,MAAM,QAAQ1D,QAASH,KAAK4P,aAApD,yBAGN,eAACvO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAU,EAA1B,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACI,cAAC6O,GAAD,CACIjF,SAAUnL,KAAKzD,MAAM4O,SACrBnC,QAAShJ,KAAKzD,MAAMyM,QACpBgB,OAAQhK,KAAKzD,MAAMyN,OACnBnD,aAAe7G,KAAKzD,MAAMsK,aAC1BoD,WAAYjK,KAAKiK,WACjBpB,WAAY7I,KAAK6I,WACjBiH,cAAe9P,KAAK8P,cACpBD,aAAc7P,KAAK6P,aACnB/G,UAAW9I,KAAK8I,gBAI5B,cAACzH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,GAAD,CACEwI,WAAYjK,KAAKiK,WACjBD,OAAQhK,KAAKzD,MAAMyN,OACnBmB,SAAUnL,KAAKzD,MAAM4O,SACrB4E,MAAO/P,KAAKzD,MAAMwT,UAExB,cAAC1O,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,GAAD,CAAWsH,KAAM/I,KAAKzD,MAAMwM,KAC1Bb,IAAKlI,KAAKzD,MAAM2L,IAChBW,WAAY7I,KAAK6I,WACjBmB,OAAQhK,KAAKzD,MAAMyN,OACnBmE,gBAAiBnO,KAAKmO,mC,GApRhCxT,aA8RXwI,gBAjVF,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BH,YAAc,CACZkC,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBgO,OAAS,CACPjM,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAGxBmC,UAAY,CACVhF,OAAS,OACTsE,MAAO,SAETd,OAAS,CACPxD,OAAS,OACTsE,MAAO,SAETW,YAAc,CACVC,SAAW,OACXC,MAAQ,UAEZC,OAAS,CACPpF,OAAS,MACTkF,SAAW,OACXG,WAAa,OACbC,UAAY,UAEdnD,MAAQ,CACNoD,SAAW,KAEbpC,OAAS,CACPZ,QAAU,WACV+B,MAAQ,YAkSwB,CAAEmB,WAAW,GAAhChB,CAAwCsM,I,UCzTnDY,G,kDACF,WAAYxV,GAAQ,IAAD,8BACjB,cAAMA,IA2CRyV,qBAAuB,SAAClV,GACpB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,WAAa9K,EAAEE,OAAOC,aAhDd,EAoDnBgV,qBAAuB,SAACnV,GACpB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,WAAa9K,EAAEE,OAAOC,aAxDd,EA4DnBiV,eAAiB,SAACpV,GAChB,EAAKL,SAAS,CAAC8E,WAAWzE,EAAEE,OAAOmV,WA7DlB,EA+DnBvS,aAAe,SAAC9C,GACZI,MAAM,kBAAmB,CACrBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAa,EAAKU,MAAM2J,KAAK/H,SAC7B,SAAa,EAAK5B,MAAM2J,KAAKwK,aAGpC5U,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACa,KAAZA,EAAI+D,MACL,EAAK/E,SAAS,CAAC6E,UAAS,IACxBxB,IAAOuS,KAAK,WAAW5U,EAAIoC,SAAS,CAACyS,KAAM,IAAIC,OAAQ,MACvDzS,IAAOuS,KAAK,UAAU5U,EAAI+U,IAAI,CAACF,KAAM,IAAIC,OAAQ,OAEjD,EAAK9V,SAAS,CAACqB,MAAML,EAAIM,SAG9BH,OAAM,SAAAC,GACLoC,MAAMpC,EAAIE,KACV,EAAKtB,SAAS,CAACqB,MAAMD,EAAIE,UAlF7B,EAAKE,MAAQ,CACX2J,KAAM,CACJ/H,SAAU,GACVuS,SAAS,IAEX9Q,UAAW,EACXC,YAAa,EACbzD,MAAQ,IATO,E,qDAYnB,WAAqB,IAAD,OACd+B,EAAWC,IAAOC,KAAK,YACvBC,EAAUF,IAAOC,KAAK,WACvBF,IAEDA,EAAW,IAEVG,IAEDA,EAAU,IAEZ9C,MAAM,oBAAqB,CACzBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAasC,EACb,QAAYG,MAGjBxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,KACL,EAAK/E,SAAS,CAAC6E,UAAS,IAExB,EAAK7E,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,W,oBA+C7B,WACE,IAAQ0D,EAAYC,KAAKnF,MAAjBkF,QACR,OACE,qBAAKa,UAAWb,EAAQsD,KAAxB,SACE,eAACyH,EAAA,EAAD,CAAOqE,UAAW,EAAGtL,MAAM,SAA3B,UACE,cAACZ,EAAA,EAAD,CAAYrC,UAAWb,EAAQc,MAAOgD,MAAM,SAAS3D,MAAM,UAAUe,QAAQ,KAA7E,sBACA,cAACH,EAAA,EAAD,CAAWF,UAAWb,EAAQgR,UAAW9P,QAAQ,WAAW4C,MAAM,SAAS3D,MAAM,UAAUa,KAAK,SAASxF,MAAOyE,KAAKzD,MAAM2J,KAAK/H,SAAU+C,MAAM,WAAWa,SAAU/B,KAAKsQ,uBAC1K,uBACA,cAACxP,EAAA,EAAD,CAAWF,UAAWb,EAAQgR,UAAW9P,QAAQ,WAAW4C,MAAM,SAAS3D,MAAM,UAAUa,KAAK,SAASxF,MAAOyE,KAAKzD,MAAM2J,KAAKwK,SAAUxP,MAAM,WAAWuB,KAAK,WAAWV,SAAU/B,KAAKuQ,uBAC1L,uBACA,cAACN,EAAA,EAAD,CAAMC,KAAK,eAAX,4BACA,uBACA,cAACD,EAAA,EAAD,CAAMC,KAAK,eAAX,6BACA,uBACA,cAACc,GAAA,EAAD,CAAUtQ,GAAG,IAAIQ,MAAM,cAAcuP,QAASzQ,KAAKH,WAAYkC,SAAU/B,KAAKwQ,eAA9E,2BAEA,cAAC7O,EAAA,EAAD,CAAYsP,IAAI,IAAhB,wBACA,cAAChR,EAAA,EAAD,CAAQW,UAAWb,EAAQmR,MAAOnQ,KAAK,QAAQE,QAAQ,YAAYf,MAAM,UAAUuC,KAAK,SAASvB,MAAM,SAASf,QAASH,KAAK9B,aAA9H,uBACA,uBACC8B,KAAKzD,MAAMqD,SACV,8BACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAU8E,KAAK,cAAcyM,GAAG,wBAGrC,cAAClO,EAAA,EAAD,UAAajD,KAAK5D,iB,GAjHPzB,aAwHPwI,gBAnJF,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BV,MAAQ,CACN6K,QAAU,OACVhN,OAAS,QAEXwS,MAAQ,CACNxS,OAAS,QAEXqS,UAAY,CACVrS,OAAS,OACTsE,MAAO,SAEToO,KAAO,CACLvN,MAAQ,YA4HwB,CAAEM,WAAW,GAAhChB,CAAwCkN,ICxHnDgB,G,kDACJ,WAAYxW,GAAQ,IAAD,8BACjB,cAAMA,IAcRyV,qBAAuB,SAAClV,GACpB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,WAAa9K,EAAEE,OAAOC,aAnBd,EAuBnB+V,iBAAmB,SAAClW,GAClB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,OAAS9K,EAAEE,OAAOC,aA3BR,EA+BnBgV,qBAAuB,SAACnV,GACpB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,WAAa9K,EAAEE,OAAOC,aAnCd,EAuCnBgW,sBAAwB,SAACnW,GACvB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,YAAc9K,EAAEE,OAAOC,aA3Cb,EA+CnBiW,uBAAyB,SAACpW,GACxB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,aAAe9K,EAAEE,OAAOC,aAnDd,EAwDnB2C,aAAe,SAAC9C,GACZI,MAAM,mBAAoB,CACtBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAa,EAAKU,MAAM2J,KAAKwK,SAC7B,SAAa,EAAKnU,MAAM2J,KAAK/H,SAC7B,UAAc,EAAK5B,MAAM2J,KAAKuL,UAC9B,WAAe,EAAKlV,MAAM2J,KAAKwL,WAC/B,KAAS,EAAKnV,MAAM2J,KAAKH,SAGhCjK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACa,KAAZA,EAAI+D,KACL,EAAK/E,SAAS,CAAC6E,UAAS,IAExB,EAAK7E,SAAS,CAACqB,MAAML,EAAIM,SAG9BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA3E7B,EAAKE,MAAQ,CACX2J,KAAM,CACJH,KAAO,GACP5H,SAAU,GACVuS,SAAS,GACTe,UAAU,GACVC,WAAa,IAEf9R,UAAW,EACXC,YAAa,EACbzD,MAAQ,IAZO,E,0CAgFjB,WACE,IAAQ2D,EAAYC,KAAKnF,MAAjBkF,QACR,OACE,qBAAKa,UAAWb,EAAQsD,KAAxB,SACE,eAACyH,EAAA,EAAD,CAAOqE,UAAW,EAAGtL,MAAM,SAA3B,UACE,cAACZ,EAAA,EAAD,CAAYrC,UAAWb,EAAQc,MAAOgD,MAAM,SAAS3D,MAAM,UAAUe,QAAQ,KAA7E,sBACA,cAACH,EAAA,EAAD,CAAWF,UAAWb,EAAQgR,UAAW9P,QAAQ,WAAW4C,MAAM,SAAS3D,MAAM,UAAUa,KAAK,SAASxF,MAAOyE,KAAKzD,MAAM2J,KAAKH,KAAM7E,MAAM,OAAOa,SAAU/B,KAAKsR,mBAClK,cAACxQ,EAAA,EAAD,CAAWF,UAAWb,EAAQgR,UAAW9P,QAAQ,WAAW4C,MAAM,SAAS3D,MAAM,UAAUa,KAAK,SAASxF,MAAOyE,KAAKzD,MAAM2J,KAAK/H,SAAU+C,MAAM,WAAWa,SAAU/B,KAAKsQ,uBAC1K,cAACxP,EAAA,EAAD,CAAWF,UAAWb,EAAQgR,UAAW9P,QAAQ,WAAW4C,MAAM,SAAS3D,MAAM,UAAUa,KAAK,SAASxF,MAAOyE,KAAKzD,MAAM2J,KAAKwL,WAAYxQ,MAAM,aAAaa,SAAU/B,KAAKwR,yBAC9K,cAAC1Q,EAAA,EAAD,CAAWF,UAAWb,EAAQgR,UAAW9P,QAAQ,WAAW4C,MAAM,SAAS3D,MAAM,UAAUa,KAAK,SAASxF,MAAOyE,KAAKzD,MAAM2J,KAAKwK,SAAUxP,MAAM,WAAWuB,KAAK,WAAWV,SAAU/B,KAAKuQ,uBAC1L,cAACzP,EAAA,EAAD,CAAWF,UAAWb,EAAQgR,UAAW9P,QAAQ,WAAW4C,MAAM,SAAS3D,MAAM,UAAUa,KAAK,SAASxF,MAAOyE,KAAKzD,MAAM2J,KAAKuL,UAAWvQ,MAAM,mBAAmBuB,KAAK,WAAWV,SAAU/B,KAAKuR,wBACnM,uBACA,cAACtB,EAAA,EAAD,CAAMC,KAAK,eAAX,6BACA,uBACA,cAACjQ,EAAA,EAAD,CAAQW,UAAWb,EAAQmR,MAAOnQ,KAAK,QAAQE,QAAQ,YAAYf,MAAM,UAAUuC,KAAK,SAASvB,MAAM,SAASf,QAASH,KAAK9B,aAA9H,uBACA,uBACC8B,KAAKzD,MAAMqD,SACV,8BACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAU8E,KAAK,eAAeyM,GAAG,oBAGtC,cAAClO,EAAA,EAAD,UAAajD,KAAK5D,iB,GAvGNzB,aA8GRwI,gBAzIF,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BV,MAAQ,CACN6K,QAAU,OACVhN,OAAS,QAEXwS,MAAQ,CACNxS,OAAS,QAEXqS,UAAY,CACVrS,OAAS,OACTsE,MAAO,SAEToO,KAAO,CACLvN,MAAQ,YAkHwB,CAAEM,WAAW,GAAhChB,CAAwCkO,ICxEnDM,IC1DgBhX,Y,kDD2DlB,WAAYE,GAAQ,IAAD,8BACjB,cAAMA,IAsCRC,kBAAoB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,YAAa,SA3CL,EA+CnBC,iBAAmB,WACf,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBC,KAAK,2BACAD,EAAUC,MADX,kBAED,YAAa,SAnDL,EAwDnB2W,kBAAoB,SAACxW,GACjB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxB6W,UAAU,2BACL7W,EAAU6W,WADN,kBAENzW,EAAEE,OAAOoF,GAAKtF,EAAEE,OAAOC,aA5Df,EAgEnB2C,aAAe,WACX,IAAI4T,EAAQ1T,IAAOC,KAAK,cACpBC,EAAUF,IAAOC,KAAK,gBACvByT,IAECA,EAAQ,IAETxT,IAECA,EAAU,IAGd,IAAIyK,EAAO,EAAKxM,MAAMsV,UACtB,IAAI,IAAIE,KAAOhJ,EACXA,EAAKgJ,GAAO5J,WAAWY,EAAKgJ,IAEhCvW,MAAM,4BAA6B,CAC/BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,MAAQiW,EACR,QAAUxT,EACV,SAAW,EAAK/B,MAAM4B,SACtB,KAAO4K,MAGdjN,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,OAELG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA9Fd,EAiGnB2V,kBAAoB,SAAC5W,GACjB,EAAKL,SAAS,CAAC,SAAWK,EAAEE,OAAOC,SAhGrC,EAAKgB,MAAQ,CACTtB,KAAO,CACH,UAAW,GAEfkD,SAAW,GACX8T,MAAQ,GACRJ,UAAY,CACR,EAAM,IACN,SAAW,EACX,OAAS,EACT,aAAe,GACf,cAAgB,GAChB,WAAa,GACb,YAAc,EACd,aAAe,GACf,UAAY,EACZ,MAAQ,IACR,OAAS,GACT,MAAQ,KApBC,E,qDAyBnB,WAAqB,IAAD,OAChBrW,MAAM,oBAAqB,CACvBC,OAAS,MACTC,QAAS,CAAC,eAAe,sBAE5BI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKhB,SAAS,CAACkX,MAAMlW,EAAG,WAE3BG,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,W,oBAiE/B,WACI,IAAQ0D,EAAYC,KAAKnF,MAAjBkF,QACR,OACI,gCACI,cAACE,EAAA,EAAD,CAAQS,GAAG,eAAeP,QAASH,KAAK9E,iBAAkB6F,KAAK,QAAQE,QAAQ,WAAWf,MAAM,UAAhG,uCAGA,eAACE,EAAA,EAAD,CAAQC,sBAAoB,EAACC,sBAAoB,EACjDrF,KAAM+E,KAAKzD,MAAMtB,KAAKiX,SACtB1R,QAASR,KAAKlF,kBACd,kBAAgB,IAHhB,UAIA,cAAC2F,EAAA,EAAD,CAAaC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,qBAAKC,UAAWb,EAAQc,MAAxB,uCAGA,cAACC,EAAA,EAAD,CAAWC,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWC,MAAM,WAAW3F,MAAOyE,KAAKzD,MAAM4B,gBAG9F,cAACgD,EAAA,EAAD,UACI,qBAAKP,UAAWb,EAAQqB,YAAxB,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,gCACI,cAACC,EAAA,EAAD,CAAYjB,GAAG,WAAf,sBACA,cAACkB,EAAA,EAAD,CAAQhB,UAAWb,EAAQ8B,OAC3BC,QAAQ,WACRpB,GAAG,WACHQ,MAAM,QACNa,SAAU/B,KAAKgS,kBAJf,SAMChS,KAAKnF,MAAMoX,MAAMhQ,KAAI,SAAAiE,GAAI,OACtB,cAAClE,EAAA,EAAD,CAAUzG,MAAO2K,EAAjB,SAAwBA,gBAMxC,cAAC7E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,qBACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUxI,EAAG5G,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,IAAIqB,SAAU/B,KAAK4R,yBAG9H,uBACA,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,4BACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUM,SAAU1P,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,WAAWqB,SAAU/B,KAAK4R,yBAG5I,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,0BACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUO,OAAQ3P,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,SAASqB,SAAU/B,KAAK4R,yBAGxI,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,iCACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUQ,aAAc5P,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,eAAeqB,SAAU/B,KAAK4R,yBAGpJ,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,kCACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUS,cAAe7P,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,gBAAgBqB,SAAU/B,KAAK4R,yBAGtJ,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,+BACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUU,WAAY9P,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,aAAaqB,SAAU/B,KAAK4R,yBAGhJ,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,gCACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUW,YAAa/P,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,cAAcqB,SAAU/B,KAAK4R,yBAGlJ,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,iCACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUY,aAAchQ,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,eAAeqB,SAAU/B,KAAK4R,yBAGpJ,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,8BACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUa,UAAWjQ,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,YAAYqB,SAAU/B,KAAK4R,yBAG9I,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,sBACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUc,MAAOlQ,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,QAAQqB,SAAU/B,KAAK4R,yBAGtI,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,uBACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUe,OAAQnQ,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,SAASqB,SAAU/B,KAAK4R,yBAGxI,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,UACI,cAACuB,EAAA,EAAD,sBACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAMsV,UAAUgB,MAAOpQ,KAAK,SAAS1B,KAAK,QAAQC,SAAO,EAACC,QAAQ,WAAWP,GAAG,QAAQqB,SAAU/B,KAAK4R,yBAGtI,cAACvQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,8BACI,cAACzB,EAAA,EAAD,CAAQwC,KAAK,SAAStC,QAASH,KAAK9B,aAAc+C,QAAQ,YAAYf,MAAM,UAA5E,oCAOxB,cAACgD,EAAA,EAAD,UACI,cAACjD,EAAA,EAAD,CAAQE,QAASH,KAAKlF,kBAAmBoF,MAAM,UAA/C,gC,GAjOGvF,cA0ONwI,gBA5RJ,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACJC,QAAS,OACTC,eAAe,SACfC,SAAU,OACV,QAAS,CACP9E,OAAS,KACTsE,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,MAG1BH,YAAc,CACZkC,QAAS,OACTC,eAAe,SACfP,MAAOI,EAAM7B,QAAQ,IACrBkC,OAAQL,EAAM7B,QAAQ,KAExBmC,UAAY,CACVhF,OAAS,MACTsE,MAAO,QAETN,WAAa,CACTM,MAAQ,SAEZd,OAAS,CACPc,MAAO,QAETW,YAAc,CACVC,SAAW,MACXC,MAAQ,UAEZC,OAAS,CACPpF,OAAS,MACTkF,SAAW,OACXG,WAAa,OACbC,UAAY,UAEdnD,MAAQ,CACNoD,SAAW,KAEbpC,OAAS,CACPZ,QAAU,WACV+B,MAAQ,SAEVkB,KAAO,CACHhE,MAAQ,cA+OsB,CAAEiE,WAAW,GAAhChB,CAAwCwO,IE1StCtN,EAAQ,K,IAiCrByO,G,kDACF,WAAYjY,GAAQ,IAAD,8BACjB,cAAMA,IAwDRkY,cAAgB,SAAC3X,GACb,EAAKL,SAAS,CAACiY,cAAa,KA1Db,EA4DnB1C,qBAAuB,SAAClV,GACpB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,WAAa9K,EAAEE,OAAOC,aAhEd,EAoEnB0X,gBAAkB,WACd,IAAInB,EAAQ1T,IAAOC,KAAK,cACpBC,EAAUF,IAAOC,KAAK,gBACvByT,IAECA,EAAQ,IAETxT,IAECA,EAAU,IAGd9C,MAAM,sBAAuB,CACzBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,eAAmB,EAAKU,MAAM2J,KAAK4L,MACnC,SAAa,EAAKvV,MAAM2J,KAAK/H,SAC7B,MAAQ2T,EACR,QAAUxT,MAGjBxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACa,KAAZA,EAAI+D,KACH,EAAK/E,UAAS,SAAAC,GAAS,MAAK,CACxBkY,OAAO,2BACFlY,EAAUkY,QADT,kBAEH,UAAYnX,EAAIM,UAKvB,EAAKtB,UAAS,SAAAC,GAAS,MAAK,CACxBkY,OAAO,2BACFlY,EAAUkY,QADT,kBAEH,UAAY,YAK1BhX,OAAM,SAAAC,GACH,EAAKpB,UAAS,SAAAC,GAAS,MAAK,CACxBkY,OAAO,2BACAlY,EAAUkY,QADX,kBAED,UAAY/W,EAAIE,aAI7B,EAAKtB,SAAS,CAACiY,cAAa,KArHb,EAuHnBG,gBAAkB,WACd,EAAKpY,SAAS,CAACE,MAAK,KAxHL,EA0HnBmY,kBAAoB,SAAChY,GACjB,EAAKL,SAAS,CACVmL,KAAI,2BACG,EAAK3J,MAAM2J,MADd,kBAEC,QAAS9K,EAAEE,OAAOC,WA9HZ,EAkInB8X,iBAAmB,SAACjY,GAChB,IAAI0W,EAAQ1T,IAAOC,KAAK,cACpBC,EAAUF,IAAOC,KAAK,gBACvByT,IAECA,EAAQ,IAETxT,IAECA,EAAU,IAGd9C,MAAM,yBAA0B,CAC5BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,SAAaT,EAAEE,OAAOC,MACtB,MAAQuW,EACR,QAAUxT,MAGjBxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACCA,EAAI+D,QAKV5D,OAAM,SAAAC,GACHoC,MAAMpC,OA/JK,EAkKnB+N,KAAO,WACH1O,MAAM,2BAA4B,CAC9BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,MAGzBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,IAtLd,SAAwBuX,GACpB,IAKIvK,EAAO,GACXA,EAAI,2BAAOA,GANA,CACP,OAAS,GACT,OAAS,GACT,QAAU,KAoLNwK,CAAexX,EAAIuX,MAEtBpX,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UA/Kd,EAmLnBmX,YAAc,SAACpY,GACU,OAAlBA,EAAEE,OAAOC,OACR,EAAKR,SAAS,CAAC0Y,IAAI,QACF,OAAlBrY,EAAEE,OAAOC,OACR,EAAKR,SAAS,CAAC2Y,IAAI,QAEvBlY,MAAM,0BAA2B,CAC7BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,OAAST,EAAEE,OAAOC,UAGzBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,OAELG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UApMd,EAuMnBsX,WAAa,SAACvY,GACW,OAAlBA,EAAEE,OAAOC,OACR,EAAKR,SAAS,CAAC0Y,IAAI,OACF,OAAlBrY,EAAEE,OAAOC,OACR,EAAKR,SAAS,CAAC2Y,IAAI,OAEvBlY,MAAM,yBAA0B,CAC5BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,OAAST,EAAEE,OAAOC,UAGzBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,OAELG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UAxNd,EA2NnBuX,kBAAoB,SAACxY,GACjBI,MAAM,0BAA2B,CAC7BC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,OAAST,EAAEE,OAAOC,UAGzBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,OAELG,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UArO/B,EAAKE,MAAQ,CACX2J,KAAM,CACJ4L,MAAO,GACP3T,SAAS,IAEX+U,OAAQ,CACJW,QAAS,IAEb5B,MAAQ,GACRhX,MAAK,EACL2E,UAAW,EACXC,YAAa,EACbzD,MAAQ,GACR4W,cAAa,EACbS,IAAI,MACJC,IAAI,OAjBW,E,qDAoBnB,WAAqB,IAAD,OAChB1T,KAAK0K,SAAWC,aAAY,kBAAM,EAAKT,SAAQ,KAE/C,IAAI4H,EAAQ1T,IAAOC,KAAK,cACpBC,EAAUF,IAAOC,KAAK,gBACvByT,IAECA,EAAQ,IAETxT,IAECA,EAAU,IAEd9C,MAAM,+BAAgC,CAClCC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,MAAQiW,EACR,QAAUxT,MAGjBxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACa,KAAZA,EAAI+D,MACH,EAAK/E,SAAS,CAACkX,MAAMlW,EAAIgN,UAGhC7M,OAAM,SAAAC,GACH,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,W,gCAGjC,c,kCAGA,WACI2T,cAAchQ,KAAKkK,Q,oBAmLvB,WAAU,IAAD,OACDnK,EAAYC,KAAKnF,MAAjBkF,QACN,OACI,gCACI,cAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACM,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAASH,QAAS,EAA1C,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACxB,EAAA,EAAD,CAAQgB,QAAQ,WAAWf,MAAM,UAAUC,QAASH,KAAK+S,cAAzD,wBAIJ,cAAC1R,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACKzB,KAAKzD,MAAMyW,aACR,cAAClS,EAAA,EAAD,CAAYiB,SAAU/B,KAAKoT,kBAAmB7X,MAAOyE,KAAKzD,MAAM2J,KAAK4L,MAAOvP,YAAY,mBAGxF,cAACU,EAAA,EAAD,UAAajD,KAAKzD,MAAM2W,OAAOW,YAGvC,cAACxS,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACKzB,KAAKzD,MAAMyW,aACR,cAAClS,EAAA,EAAD,CAAYiB,SAAU/B,KAAKsQ,qBAAsB/U,MAAOyE,KAAKzD,MAAM2J,KAAK/H,SAASoE,YAAY,sBAG7F,cAACU,EAAA,EAAD,UAAajD,KAAKzD,MAAM2W,OAAOW,YAGvC,cAACxS,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACKzB,KAAKzD,MAAMyW,aACR,cAAC/S,EAAA,EAAD,CAAQE,QAASH,KAAKiT,gBAAtB,uBAEA,cAAChQ,EAAA,EAAD,aAMpB,cAAC5B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAASH,QAAS,EAA1C,SACI,cAAC,GAAD,CAAU0Q,MAAOjS,KAAKzD,MAAM0V,YAGpC,cAAC5Q,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACA,cAACmJ,EAAA,EAAD,CAAgBC,UAAWC,IAAOlK,UAAWb,EAAQuB,UAArD,SACI,eAACyJ,EAAA,EAAD,CAAO,aAAW,eAAlB,UACI,cAACsD,GAAA,EAAD,UACI,eAACpD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,sBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,6BACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,4BACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,iBACA,cAACmK,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,yBAGR,cAACiK,EAAA,EAAD,UACKhL,KAAKzD,MAAM0V,MAAMhQ,KAAI,SAAAiE,GAAI,OACtB,cAAC,WAAD,UACA,eAAC+E,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,SAAyCmF,EAAK4N,IAC9C,cAAC5I,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,SAAyCmF,EAAKxJ,IAC9C,cAACwO,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,SAAyCmF,EAAKoN,IAC9C,eAACpI,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,UAA0CmF,EAAKxJ,EAAEwJ,EAAKoN,EAAtD,IAA2E,KAAfpN,EAAKxJ,EAAEwJ,EAAKoN,GAAOpN,EAAKxJ,EAApF,OACA,cAACwO,EAAA,EAAD,CAAWrH,MAAM,SAAS9C,KAAK,SAA/B,SACI,wBAAQb,MAAM,YAAY3E,MAAO2K,EAAK4N,EAAG3T,QAAS,EAAKkT,iBAAvD,uCASxB,eAAChS,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACI,wBAAQtB,QAASH,KAAKwT,YAAajY,MAAM,MAAzC,8BACmB,OAAlByE,KAAKzD,MAAMkX,IACR,wBAAQlY,MAAM,MAAM4E,QAASH,KAAK2T,WAAlC,yBACC,2BAET,eAACtS,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACI,wBAAQtB,QAASH,KAAKwT,YAAajY,MAAM,MAAzC,8BACmB,OAAlByE,KAAKzD,MAAMmX,IACR,wBAAQnY,MAAM,MAAM4E,QAASH,KAAK2T,WAAlC,yBACC,2BAET,uBACA,uBACA,uBACA,cAACtS,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,wBAAQtB,QAASH,KAAK4T,kBAAmBrY,MAAM,MAA/C,4CAEJ,cAAC8F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,wBAAQtB,QAASH,KAAK4T,kBAAmBrY,MAAM,MAA/C,mD,GAvUSZ,aA6UZwI,gBA5WJ,SAAAC,GAAK,MAAK,CACnBlB,OAAQ,CACJc,MAAO,OAEXgM,UAAY,CACRvL,OAAS,SAEbnC,UAAW,CACPqK,UAAW,SAEfgD,OAAS,CACL5K,WAAa,OACb7D,MAAQ,SAEZ0O,OAAS,CACL7K,WAAa,OACb7D,MAAQ,UA4VoB,CAAEiE,WAAW,GAAhChB,CAAwC2P,I,UChQxCiB,G,kDAhHb,WAAYlZ,GAAQ,IAAD,8BACjB,cAAMA,IA8CRuY,kBAAoB,SAAChY,GACjB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,QAAU9K,EAAEE,OAAOC,aAnDX,EAuDnBgV,qBAAuB,SAACnV,GACpB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBkL,KAAK,2BACAlL,EAAUkL,MADX,kBAED,WAAa9K,EAAEE,OAAOC,aA3Dd,EA+DnBiV,eAAiB,SAACpV,GAChB,EAAKL,SAAS,CAAC8E,WAAWzE,EAAEE,OAAOmV,WAhElB,EAkEnBuD,aAAe,WACb,OAAO,EAAKzX,MAAM2J,KAAKwK,UAnEN,EAqEnBxS,aAAe,SAAC9C,GACZI,MAAM,mBAAoB,CACtBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,MAAU,EAAKU,MAAM2J,KAAK4L,MAC1B,SAAa,EAAKvV,MAAM2J,KAAKwK,aAGpC5U,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACa,KAAZA,EAAI+D,MACL,EAAK/E,SAAS,CAAC6E,UAAS,IACxBxB,IAAOuS,KAAK,aAAa5U,EAAI+V,MAAM,CAAClB,KAAM,IAAIC,OAAQ,MACtDzS,IAAOuS,KAAK,eAAe5U,EAAI+U,IAAI,CAACF,KAAM,IAAIC,OAAQ,OAEtD,EAAK9V,SAAS,CAACqB,MAAML,EAAIM,SAG9BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,UAvF7B,EAAKE,MAAQ,CACX2J,KAAM,CACJ4L,MAAO,GACPpB,SAAS,IAEX9Q,UAAW,EACXC,YAAa,EACbzD,MAAQ,IATO,E,qDAYnB,WAAqB,IAAD,OACd0V,EAAQ1T,IAAOC,KAAK,cACpBC,EAAUF,IAAOC,KAAK,gBACvByT,IAGCA,EAAQ,IAGTxT,IAGGA,EAAU,IAElB9C,MAAM,qBAAsB,CACxBC,OAAS,OACTC,QAAS,CAAC,eAAe,oBACzBC,KAAOC,KAAKC,UAAU,CAClB,MAAUiW,EACV,QAAYxT,MAGjBxC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACW,KAAZA,EAAI+D,KACL,EAAK/E,SAAS,CAAC6E,UAAS,IAExB,EAAK7E,SAAS,CAACqB,MAAML,EAAIM,SAG5BH,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAACqB,MAAMD,EAAIE,W,oBAkD7B,WACE,OACI,eAAC4X,GAAA,EAAD,WACE,cAAChR,EAAA,EAAD,4BACA,cAACnC,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAM2J,KAAK4L,MAAO5Q,MAAM,QAAQa,SAAU/B,KAAKoT,oBACtE,cAACtS,EAAA,EAAD,CAAWvF,MAAOyE,KAAKzD,MAAM2J,KAAKwK,SAAUxP,MAAM,WAAWuB,KAAK,WAAWV,SAAU/B,KAAKuQ,uBAC5F,cAACS,GAAA,EAAD,CAAUP,QAASzQ,KAAKH,WAAYkC,SAAU/B,KAAKwQ,eAAnD,2BACA,cAACvQ,EAAA,EAAD,CAAQwC,KAAK,SAASvB,MAAM,SAASf,QAASH,KAAK9B,aAAnD,uBACC8B,KAAKzD,MAAMqD,SACR,8BACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAU8E,KAAK,eAAeyM,GAAG,yBAGtC,cAAClO,EAAA,EAAD,UAAajD,KAAK5D,e,GA5GRzB,aCWVuZ,OAhBf,WACE,OACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtD,KAAK,kBAAkB/F,UAAa4E,KAC3C,cAAC,IAAD,CAAOmB,KAAK,cAAc/F,UAAawF,KACvC,cAAC,IAAD,CAAOO,KAAK,eAAe/F,UAAawG,KACxC,cAAC,IAAD,CAAOT,KAAK,mBAAmB/F,UAAaiI,KAC5C,cAAC,IAAD,CAAOlC,KAAK,eAAe/F,UAAakJ,aCZlDI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF9L,SAASC,eAAe,U","file":"static/js/main.93e5ccc3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\nimport Typography from '@material-ui/core/Typography';\r\nclass SymbolPrice extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          prices : 0,\r\n          symbols : []\r\n      };\r\n    }\r\n  \r\n    tick() {\r\n        fetch('/api/data/symbols/price/get', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"symbols\" : this.props.symbols\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            this.props.changePrice(res.prices)\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n  \r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.tick(), 10000);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          <Typography></Typography>\r\n      );\r\n    }\r\n  }\r\n  export default SymbolPrice;","// React \r\nimport React, {Component,useEffect} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Container from '@material-ui/core/Container'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport CheckBox from '@material-ui/core/Checkbox'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Link from '@material-ui/core/Link';\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\n\r\nimport SymbolPrice from './SymbolPrice'\r\nvar styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '0%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(70),\r\n    },\r\n  },\r\n  dialogPaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(50),\r\n  },\r\n  textfeild : {\r\n    margin : \"0px\",\r\n    width :\"60px\"\r\n  },\r\n  textfield2 : {\r\n      width : \"120px\"\r\n  },\r\n  button : {\r\n    width :\"80px\"\r\n  },\r\n  dialogtitle : {\r\n      fontSize : \"0px\",\r\n      align : 'center'  \r\n  },\r\n  header : {\r\n    margin : \"0px\",\r\n    fontSize : \"20px\",\r\n    fontWeight : \"bold\",\r\n    fontStyle : \"italic\",\r\n  },\r\n  title : {\r\n    flexGrow : \"1\",\r\n  },\r\n  select : {\r\n    variant : \"outlined\",\r\n    width : \"200px\"\r\n  },\r\n  sell : {\r\n      color : \"default\",\r\n  }\r\n  \r\n});\r\n\r\nclass OrderPlace extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          username : '',\r\n          open : {\r\n              'orderplace' : false\r\n          },\r\n          orderprice : 0,\r\n          market : '-',\r\n          symbols : [],\r\n          selectedSymbol : '-',\r\n          symbolPrice:0,\r\n          side:'',\r\n          productType:'',\r\n          orderType:'',\r\n          limitPrice:'-',\r\n          targetPrice:'-',\r\n          tagetPerc:'-',\r\n          stoplossPrice:'-',\r\n          stoplossPerc:'-',\r\n          isTarget:false,\r\n          isstoploss:false,\r\n          qty:1,\r\n          userFunds : {},\r\n          margin :0,\r\n          fund : 0,\r\n          loggedIn : false,\r\n          rememberMe : false,\r\n          error : '',\r\n          buycolor : \"default\",\r\n          sellcolor : \"default\",\r\n          intracolor : \"default\",\r\n          cnccolor : \"default\",\r\n          isSubmit : false\r\n          \r\n      };\r\n    }\r\n    componentDidMount() {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        fetch('/api/get/user/funds', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\":username\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code==200){\r\n                this.setState({userFunds:res['data']})\r\n            }\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n    handleCloseDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['orderplace']: false\r\n            }\r\n        }));\r\n    }\r\n    handleOpenDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['orderplace']: true\r\n            }\r\n        }));\r\n    }\r\n    handleSelectMarket = (e) => {\r\n        \r\n        this.setState({market:e.target.value})\r\n        fetch('/api/get/symbols', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"type\" : e.target.value,\r\n                \"from\" : \"CM\"\r\n            })\r\n        })\r\n        .then()\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            this.setState({symbols:res[\"EQ\"]})\r\n        })\r\n        .catch(err => {\r\n          this.setState({error:err.msg})\r\n        });\r\n    }\r\n    handleChangeSymbol = (e) => {\r\n        fetch('/api/remove/symbols', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"symbols\" : [this.state.selectedSymbol],\r\n                \"market\": this.state.market\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n        \r\n        fetch('/api/add/symbol', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"symbol\" : e.target.value,\r\n                \"market\": this.state.market\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n        this.setState({selectedSymbol:e.target.value})\r\n    }\r\n    handleChangeSide = async (e) => {\r\n        this.setState({side:e})        \r\n        if(e==\"Buy\"){\r\n            this.setState({targetPerc:((this.state.targetPrice-this.state.symbolPrice)/this.state.symbolPrice)*100})        \r\n        }\r\n        if(e==\"Sell\"){\r\n            this.setState({targetPerc:((-this.state.targetPrice+this.state.symbolPrice)/this.state.symbolPrice)*100})        \r\n        }\r\n        if(e==\"Sell\"){\r\n            this.setState({stoplossPerc:((this.state.stoplossPrice-this.state.symbolPrice)/this.state.symbolPrice)*100})        \r\n        }\r\n        if(e==\"Buy\"){\r\n            this.setState({stoplossPerc:((-this.state.stoplossPrice+this.state.symbolPrice)/this.state.symbolPrice)*100})        \r\n        }\r\n        await this.calculateMargin()\r\n    } \r\n    handleChangeproductType = async (e) => {\r\n        this.setState({productType:e})\r\n        await this.calculateMargin()\r\n    }\r\n    handleChangeorderType = async (e) => {\r\n        this.setState({orderType:e.target.value})\r\n        await this.handleChangeOrderprice()\r\n    }\r\n    handleChangelimitPrice = async (e) => {\r\n        this.setState({limitPrice:e.target.value})\r\n        await this.handleChangeOrderprice()\r\n    }\r\n    handleChangeOrderprice = async () => {\r\n        if(this.state.orderType==\"market\"){\r\n            this.setState({orderprice:this.state.symbolPrice})      \r\n        }else{\r\n            this.setState({orderprice:this.state.limitPrice})\r\n        }\r\n        await this.calculateMargin()          \r\n    }\r\n    handleqty = async (e) => {\r\n        this.setState({qty:e.target.value})\r\n        await this.calculateMargin()\r\n    }\r\n\r\n    handleChangeistarget = (e) => {\r\n        if(this.state.isTarget==true)\r\n            this.setState({isTarget:false})\r\n        if(this.state.isTarget==false)\r\n            this.setState({isTarget:true})\r\n    }\r\n    handleChangeisstoploss = (e) => {\r\n        if(this.state.isstoploss==true)\r\n            this.setState({isstoploss:false})\r\n        if(this.state.isstoploss==false)\r\n            this.setState({isstoploss:true})\r\n    }\r\n    handleChangetargetPrice = (e) => {\r\n        if(this.state.side==\"Buy\"){\r\n            this.setState({targetPrice:e.target.value})\r\n            this.setState({targetPerc:((e.target.value-this.state.symbolPrice)/this.state.symbolPrice)*100})        \r\n        }\r\n        if(this.state.side==\"Sell\"){\r\n            this.setState({targetPrice:e.target.value})\r\n            this.setState({targetPerc:((-e.target.value+this.state.symbolPrice)/this.state.symbolPrice)*100})        \r\n        }\r\n    }\r\n    handleChangestoplossPrice = (e) => {\r\n        if(this.state.side==\"Buy\"){\r\n            this.setState({stoplossPrice:e.target.value})\r\n            this.setState({stoplossPerc:((-e.target.value+this.state.symbolPrice)/this.state.symbolPrice)*100})        \r\n        }\r\n        if(this.state.side==\"Sell\"){\r\n            this.setState({stoplossPrice:e.target.value})\r\n            this.setState({stoplossPerc:((e.target.value-this.state.symbolPrice)/this.state.symbolPrice)*100})        \r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        alert(\" Order will be placed.\")\r\n        fetch('/api/order/place', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\":username,\r\n                \"hashval\":hashval,\r\n                \"data\":{\r\n                    \"ordertype\":this.state.orderType,\r\n                    \"qty\":this.state.qty,\r\n                    \"symbol\":this.state.selectedSymbol,\r\n                    \"productype\":this.state.productType,\r\n                    \"limit\":parseInt(this.state.limitPrice),\r\n                    \"stoploss\":parseInt(this.state.stoplossPrice),\r\n                    \"target\":parseInt(this.state.targetPrice),\r\n                    \"side\":this.state.side.toLowerCase(), \r\n                    \"market\":this.state.market,\r\n                    \"price\":parseInt(this.state.orderprice),\r\n                    \"margin\":parseInt(this.state.margin),\r\n                    \"side2\":\"under\"\r\n                }\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });    \r\n    }\r\n\r\n    calculateMargin = async () => {\r\n        var s = \"F\" +  this.state.market \r\n        var fund = this.state.userFunds[s] \r\n        s = \"L\" + this.state.productType + this.state.market \r\n        var levrage = this.state.userFunds[s]  \r\n        var margin = (this.state.orderprice*this.state.qty)/levrage\r\n        if(margin<=fund){\r\n            this.setState({isSubmit:true})\r\n        }else{\r\n            this.setState({isSubmit:false})\r\n        }\r\n        await this.setState({margin:margin,fund:fund})\r\n    }\r\n\r\n    changePrice = async (symbol,price) => {\r\n        this.setState({symbolPrice:price})\r\n        await this.handleChangeOrderprice()\r\n    }\r\n    buyHandle = () => {\r\n        this.setState({buycolor:\"primary\"})\r\n        this.setState({sellcolor:\"default\"})\r\n        this.handleChangeSide(\"Buy\")\r\n        \r\n    }\r\n    sellHandle = () => {\r\n        this.setState({buycolor:\"default\"})\r\n        this.setState({sellcolor:\"secondary\"})\r\n        this.handleChangeSide(\"Sell\")\r\n    }\r\n    intraHandle = () => {\r\n        this.setState({intracolor:\"primary\"})\r\n        this.setState({cnccolor:\"disabled\"})\r\n        this.handleChangeproductType(\"INTRA\")\r\n    }\r\n    cncHandle = () => {\r\n        this.setState({intracolor:\"default\"})\r\n        this.setState({cnccolor:\"primary\"})\r\n        this.handleChangeproductType(\"CNC\")\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button color=\"inherit\" onClick={this.handleOpenDialog}>OrderPlace</Button>\r\n                <Dialog disableBackdropClick disableEscapeKeyDown \r\n                open={this.state.open.orderplace} \r\n                onClose={this.handleCloseDialog}\r\n                aria-labelledby=\"p\">\r\n                <DialogTitle id=\"p\" >\r\n                    <Toolbar>\r\n                        <div className={classes.title}>\r\n                            Place a order\r\n                        </div>\r\n                        <TextField size=\"small\" default variant=\"outlined\" label=\"Market price\" value={this.state.symbolPrice}></TextField>\r\n                    </Toolbar>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className={classes.dialogPaper}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={6}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Grid item xs={6}>\r\n                                        <InputLabel id=\"marketselect\">Market</InputLabel>\r\n                                        <Select className={classes.select}\r\n                                        labelId=\"marketselect\"\r\n                                        id=\"marketselect\"\r\n                                        label=\"Market\"\r\n                                        onChange={this.handleSelectMarket}\r\n                                        >\r\n                                        <MenuItem value=\"EQ\">Equity</MenuItem>\r\n                                        <MenuItem value=\"FO\">Future & Options</MenuItem>\r\n                                        <MenuItem value=\"CO\">Comodity</MenuItem>\r\n                                        </Select>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Grid container justify=\"center\">\r\n                                    {this.state.market=='-'?(<div></div>):(\r\n                                    <div>\r\n                                        <Grid item xs={6}>\r\n                                        <InputLabel id=\"symbolselect\">Symbol</InputLabel>\r\n                                        <Select className={classes.select}\r\n                                        labelId=\"symbolselect\"\r\n                                        id=\"symbolselect\"\r\n                                        label=\"Symbol\"\r\n                                        onChange={this.handleChangeSymbol}\r\n                                        >\r\n                                        {this.state.symbols.map(symbol => (\r\n                                            <MenuItem value={symbol}>{symbol}</MenuItem>\r\n                                        ))}\r\n                                        </Select>\r\n                                        </Grid>\r\n                                    </div>\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={5}\r\n                            >\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                                        \r\n                                        <Button className={classes.button} id=\"buy\" variant=\"contained\" color={this.state.buycolor} onClick={this.buyHandle}>Buy</Button>\r\n                                        <Button className={classes.button} id=\"sell\" variant=\"contained\" color={this.state.sellcolor} onClick={this.sellHandle}>Sell</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={7}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                                        \r\n                                        <Button className={classes.button} id=\"INTRA\" variant=\"contained\" color={this.state.intracolor} onClick={this.intraHandle}>IntraDay</Button>\r\n                                        <Button className={classes.button} id=\"CNC\" variant=\"contained\" color={this.state.cnccolor} onClick={this.cncHandle}>CNC</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <RadioGroup onChange={this.handleChangeorderType}>\r\n                                        <FormControlLabel value=\"market\" control={<Radio />} label=\"Market\"/>\r\n                                        <FormControlLabel value=\"limit\" control={<Radio />} label=\"Limit\" />\r\n                                        </RadioGroup>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                    {this.state.orderType==\"limit\"?(\r\n                                        <div>\r\n                                        <TextField variant=\"outlined\" size=\"small\" placeholder=\"Limit order\" label=\"Limit\" value={this.state.limitPrice} onChange={this.handleChangelimitPrice}></TextField>\r\n                                    </div>\r\n                                        ):(\r\n                                        <div>\r\n                                        <TextField size=\"small\" disabled default variant=\"outlined\" label=\"Market price\"value={this.state.symbolPrice}></TextField>\r\n                                    </div>\r\n                                    )}\r\n                                    <TextField type=\"Number\" size=\"small\" default variant=\"outlined\" label=\"qty\" value={this.state.qty} onChange={this.handleqty}></TextField>                        \r\n\r\n                                    <div>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Button value=\"target\" onClick={this.handleChangeistarget} variant=\"contained\" color=\"primary\">Target</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                {this.state.isTarget?(\r\n                                  <div>\r\n                                  <TextField className={classes.textfield2} placeholder=\"Target Price\" label=\"Target Price\" value={this.state.targetPrice} onChange={this.handleChangetargetPrice}></TextField>\r\n                                  <TextField\r\n                                        className={classes.textfield2}\r\n                                      id=\"outlined-disabled\"\r\n                                      label=\"Per %\"\r\n                                      defaultValue=\"\"\r\n                                      variant=\"outlined\"\r\n                                      value={this.state.targetPerc}\r\n                                      InputProps={{\r\n                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\r\n                                      }}\r\n                                  />\r\n                                  </div>\r\n                                ):(<div></div>)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Button width=\"120px\" value=\"stoploss\" onClick={this.handleChangeisstoploss} variant=\"contained\" color=\"primary\">StopLoss</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                {this.state.isstoploss?(\r\n                                  <div>\r\n                                  <TextField className={classes.textfield2} placeholder=\"Triggerd Price\" label=\"Triggered Price\" value={this.state.stoplossPrice} onChange={this.handleChangestoplossPrice}></TextField>\r\n                                  <TextField\r\n                                        className={classes.textfield2}\r\n                                      id=\"outlined-disabled\"\r\n                                      label=\"Per %\"\r\n                                      defaultValue=\"\"\r\n                                      variant=\"outlined\"\r\n                                      value={this.state.stoplossPerc}\r\n                                      InputProps={{\r\n                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\r\n                                      }}\r\n                                  />\r\n                                  </div>\r\n                                ):(<div></div>)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Typography>{this.state.side}ing @{this.state.orderprice}</Typography>\r\n                                        <Typography>Margin Req. : {this.state.margin}</Typography>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">\r\n                                    {this.state.isSubmit==true?(                                    \r\n                                    <div>\r\n                                        <Button type=\"submit\" onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">Place Order</Button>\r\n                                    </div>\r\n                                    ):(\r\n                                        <div>\r\n                                            Your Availble Fund is : {this.state.fund}\r\n                                        </div>\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCloseDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n        )\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(OrderPlace);","// React \r\nimport React, {Component,useEffect} from 'react';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { ThemeProvider, withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Select from '@material-ui/core/Select'\r\nimport NativeSelect from '@material-ui/core/NativeSelect'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nvar data2 = require(\"./symbols_data.json\");\r\n\r\nfunction get_all_symbol_list() {\r\n  var data = []\r\n  var data1 = require(\"./symbols_data.json\");\r\n  data = [...data1[\"EQ\"],...data1[\"CM_FUT\"],...data1[\"CM_OP_CE\"],...data1[\"CM_OP_PE\"],...data1[\"COM_FUT\"],...data1[\"COM_OP_CE\"],...data1[\"COM_OP_PE\"]]\r\n  data = data.sort()\r\n  //data = [...data,...data1[\"CM_OP_CE\"]]\r\n  //data = [...data,...data1[\"CM_OP_PE\"]]\r\n  //data = [...data,...data1[\"COM_FUT\"]]\r\n  //data = [...data,...data1[\"COM_OP_CE\"]]\r\n  //data = [...data,...data1[\"COM_OP_PE\"]]\r\n  return data\r\n}\r\n\r\n\r\nvar styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '0%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(70),\r\n    },\r\n  },\r\n  dialogPaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(50),\r\n  },\r\n  textfeild : {\r\n    margin : \"0px\",\r\n    width :\"60px\"\r\n  },\r\n  textfield2 : {\r\n      width : \"120px\"\r\n  },\r\n  button : {\r\n    width :\"80px\"\r\n  },\r\n  dialogtitle : {\r\n      fontSize : \"0px\",\r\n      align : 'center'  \r\n  },\r\n  header : {\r\n    margin : \"0px\",\r\n    fontSize : \"20px\",\r\n    fontWeight : \"bold\",\r\n    fontStyle : \"italic\",\r\n  },\r\n  title : {\r\n    flexGrow : \"1\",\r\n  },\r\n  select : {\r\n    variant : \"outlined\",\r\n  },\r\n  sell : {\r\n      color : \"default\",\r\n  },\r\n  option : {\r\n    width:\"100px\",\r\n    hight:\"150px\"\r\n  },list:{\r\n    width:\"200px\"\r\n  }\r\n  \r\n});\r\n\r\nclass AddSymbol extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          symbols : [],\r\n          selectedSymbol : '-',\r\n          isSubmit : false,\r\n          searchValue : '',\r\n          results : [],\r\n          types : [],\r\n          from : '',\r\n          type : '',\r\n          open1 : false\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      this.getSymbolsall()\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n    handleSelectMarket = (e) => {        \r\n      this.setState({from:e.target.value},()=>{\r\n        if(this.state.from == \"COM\"){\r\n          this.setState({types:[\"FUT\",\"CM\"]})\r\n        }\r\n        if(this.state.from == \"EQ\"){\r\n          this.setState({types:[\"FUT\",\"CM\",\"OP\"]})\r\n        }\r\n      })\r\n    }\r\n    handleSelectType = (e) => {\r\n      this.setState({type:e.target.value},()=>{\r\n        //this.getSymbols()\r\n      })\r\n    }\r\n    getSymbolsall = () => {\r\n      this.setState({\r\n        symbols:get_all_symbol_list()\r\n      })\r\n    }\r\n    handleSubmit = (e) => {\r\n      if( this.props.watchlist.indexOf(this.state.selectedSymbol) == -1 && this.state.symbols.indexOf(this.state.selectedSymbol)>=0){\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n        fetch('/api/user/watchlist/add', {\r\n          method : 'post',\r\n          headers: {'Content-Type':'application/json'},\r\n          body : JSON.stringify({\r\n              \"symbol\": this.state.selectedSymbol,\r\n              \"username\":username,\r\n              \"hashval\":hashval\r\n          })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n          if(res.code == 200){\r\n            this.props.addWatchlist(this.state.selectedSymbol)\r\n          }else{\r\n            this.setState({error:res.msg})\r\n          }\r\n        })\r\n        .catch(err=>{\r\n          this.setState({error:err.msg})\r\n        })\r\n      }\r\n    }\r\n    handleChangeSymbol = (e) => {\r\n        this.setState({selectedSymbol:e.target.value})\r\n        this.setState({searchValue:e.target.value})\r\n    }\r\n    handleChangeMarket = (e) => {\r\n      this.setState({symbols:data2[e.target.value]},()=>{\r\n        this.filterPosts(this.state.symbols,this.state.searchValue)\r\n      })  \r\n    }\r\n    handleSearch = (e) => {\r\n      this.setState({searchValue:e.target.value},()=>{\r\n        this.filterPosts(this.state.symbols,this.state.searchValue)\r\n      })\r\n    }\r\n    filterPosts = (posts, query) => {\r\n      if (!query || query=='') {\r\n          return posts;\r\n      }\r\n      var x =  posts.filter((post)=>{\r\n        if(post.includes(query.toUpperCase())){\r\n          return true\r\n        }else{\r\n          return false\r\n        }\r\n      })\r\n      this.setState({results:x},()=>{\r\n        this.setState({open1:true})\r\n      })\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n                <div>\r\n                  <Grid container spacing={1}>\r\n                      <Grid item xs={8}>\r\n                        <div>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"search\"\r\n                            label=\"Search Symbol\"\r\n                            name=\"search\"\r\n                            onChange = {this.handleSearch}\r\n                            ONMOUSEOVER = {this.getSymbolsall}\r\n                            />\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <div>\r\n                          <NativeSelect className={classes.select}\r\n                            labelId=\"symbols\"\r\n                            id=\"symbols\"\r\n                            fullWidth\r\n                            onChange={this.handleChangeMarket}\r\n                            defaultValue = \"None\"\r\n                          >\r\n                          <option value=\"EQ\">NSE EQUITY</option>\r\n                          <option value=\"CM_FUT\">NSE FUTURE</option>\r\n                          <option value=\"CM_OP_CE\">NSE Option - CE</option>\r\n                          <option value=\"CM_OP_PE\">NSE Option - PE</option>\r\n                          <option value=\"COM_FUT\">MCX FUTURE</option>\r\n                          <option value=\"COM_OP_CE\">MCX Option - CE</option>\r\n                          <option value=\"COM_OP_PE\">MCX Option - PE</option>\r\n                        </NativeSelect>\r\n                      </div>\r\n                        \r\n                      </Grid>\r\n                      <Grid item xs={8}>\r\n                      {this.state.open1 == true?(\r\n                          <div>\r\n                            <NativeSelect className={classes.select}\r\n                            labelId=\"symbols\"\r\n                            id=\"symbols\"\r\n                            fullWidth\r\n                            onChange={this.handleChangeSymbol}\r\n                            defaultValue = \"None\"\r\n                            >\r\n                            <option value=\"None\">None</option>\r\n                            {this.state.results.map(user => (\r\n                                <option value={user} className={classes.option}>\r\n                                  {user}\r\n                                </option>\r\n                            ))}\r\n                            </NativeSelect>\r\n                          </div>\r\n                        ):(<div></div>)}\r\n                      </Grid>                      \r\n                      <Grid item xs={4}>\r\n                          <Grid container justify=\"center\">\r\n                              <Button type=\"submit\" onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">Add Symbol</Button>\r\n                      </Grid>\r\n                      </Grid>\r\n                  </Grid>\r\n              </div>\r\n\r\n        )\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(AddSymbol);","// React \r\nimport React, {Component,useEffect} from 'react';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { ThemeProvider, withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\n\r\nvar styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '0%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(70),\r\n    },\r\n  },\r\n  dialogPaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(50),\r\n  },\r\n  textfeild : {\r\n    margin : \"0px\",\r\n    width :\"60px\"\r\n  },\r\n  textfield2 : {\r\n      width : \"120px\"\r\n  },\r\n  button : {\r\n    width :\"80px\"\r\n  },\r\n  dialogtitle : {\r\n      fontSize : \"0px\",\r\n      align : 'center'  \r\n  },\r\n  header : {\r\n    margin : \"0px\",\r\n    fontSize : \"20px\",\r\n    fontWeight : \"bold\",\r\n    fontStyle : \"italic\",\r\n  },\r\n  title : {\r\n    flexGrow : \"1\",\r\n  },\r\n  select : {\r\n    variant : \"outlined\",\r\n    width : \"200px\"\r\n  },\r\n  sell : {\r\n      color : \"default\",\r\n  }\r\n  \r\n});\r\n\r\nclass RemoveSymbol extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          open : {\r\n              'addsymbol' : false\r\n          },\r\n          symbols : [],\r\n          selectedSymbol : '-',\r\n          isSubmit : false          \r\n      };\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n    handleCloseDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['addsymbol']: false\r\n            }\r\n        }));\r\n    }\r\n    handleOpenDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['addsymbol']: true\r\n            }\r\n        }));\r\n    }\r\n    handleSelectMarket = (e) => {        \r\n        this.setState({market:e.target.value})\r\n        fetch('/api/get/symbols', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"type\" : e.target.value,\r\n                \"from\" : \"CM\"\r\n            })\r\n        })\r\n        .then()\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            this.setState({symbols:res[\"EQ\"]})\r\n        })\r\n        .catch(err => {\r\n          this.setState({error:err.msg})\r\n        });\r\n    }\r\n    handleRemoveSymbol = (e) => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        fetch('/api/user/watchlist/remove', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"symbol\": this.props.symbol,\r\n                \"username\":username,\r\n                \"hashval\":hashval\r\n            })\r\n          })\r\n          .then(res=>res.json())\r\n          .then(res=>{\r\n            if(res.code == 200){\r\n            }else{\r\n              this.setState({error:res.msg})\r\n            }\r\n          })\r\n          .catch(err=>{\r\n            this.setState({error:err.msg})\r\n          })\r\n\r\n          fetch('/api/remove/symbols', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"symbols\": [this.state.selectedSymbol]\r\n            })\r\n          })\r\n          .then(res=>res.json())\r\n          .then(res=>{\r\n            if(res.code == 200){\r\n            }else{\r\n              this.setState({error:res.msg})\r\n            }\r\n          })\r\n          .catch(err=>{\r\n            this.setState({error:err.msg})\r\n          })\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button color=\"inherit\" onClick={this.handleRemoveSymbol}>-</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(RemoveSymbol);","// React \r\nimport React, {Component,useEffect} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Container from '@material-ui/core/Container'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport CheckBox from '@material-ui/core/Checkbox'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { ThemeProvider, withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Link from '@material-ui/core/Link';\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\n\r\nimport SymbolPrice from './SymbolPrice'\r\nvar styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '0%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(90),\r\n    },\r\n  },\r\n  dialogPaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(50),\r\n  },\r\n  textfeild : {\r\n    margin : \"0px\",\r\n    width :\"60px\"\r\n  },\r\n  textfield2 : {\r\n      width : \"120px\"\r\n  },\r\n  textfield3 : {\r\n    width : \"100px\"\r\n  },\r\n  textfield4 : {\r\n    width : \"140px\"\r\n  },\r\n  buyButton : {\r\n    color : 'green',\r\n    backgroundColor : 'lightgrey',\r\n    width :'80px',\r\n    fontSize : '20px'\r\n  },\r\n  sellButton : {\r\n    color : 'red',\r\n    backgroundColor : 'lightgrey',\r\n    width :'80px',\r\n    fontSize : '20px'\r\n  },\r\n  intraButton : {\r\n    color : 'green',\r\n    backgroundColor : 'lightgrey',\r\n    width :'100px',\r\n    fontSize : '20px'\r\n  },\r\n  cncButton : {\r\n    color : 'red',\r\n    backgroundColor : 'lightgrey',\r\n    width :'100px',\r\n    fontSize : '20px'\r\n  },\r\n  dialogtitle : {\r\n      fontSize : \"0px\",\r\n      align : 'center'  \r\n  },\r\n  header : {\r\n    margin : \"0px\",\r\n    fontSize : \"20px\",\r\n    fontWeight : \"bold\",\r\n    fontStyle : \"italic\",\r\n  },\r\n  title : {\r\n    flexGrow : \"1\",\r\n  },\r\n  select : {\r\n    variant : \"outlined\",\r\n    width : \"200px\"\r\n  },\r\n  sell : {\r\n      color : \"default\",\r\n  },\r\n  prevOrder : {\r\n      color : \"red\"\r\n  },     \r\n});\r\n\r\nclass OrderPlaceSymbol extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n            username : this.props.username,\r\n            open : {\r\n                'orderplacesymbol' : false\r\n            },\r\n            selectedSymbol : '',\r\n            side : '',\r\n            productType : '',\r\n            orderType : 'market',\r\n            limitPrice:'-',\r\n            targetPrice:'-',\r\n            targetPerc:'-',\r\n            stoplossPrice:'-',\r\n            stoplossPerc:'-',\r\n            isTarget:false,\r\n            isstoploss:false,\r\n            qty:1,\r\n            margin :0,\r\n            fund : 0,\r\n            loggedIn : false,\r\n            rememberMe : false,\r\n            error : '',\r\n            buycolor : \"default\",\r\n            sellcolor : \"default\",\r\n            intracolor : \"default\",\r\n            cnccolor : \"default\",\r\n            isSubmit : false,\r\n            buyQty : 0,\r\n            sellQty : 0,\r\n            market : 'EQ',\r\n            symbolDetails : {},\r\n            Ltype : '',\r\n            lotqty : 1\r\n        };\r\n    }\r\n    \r\n    calculateAlreadyBuySellQty = () => {\r\n        var buyQty = 0 \r\n        var sellQty = 0 \r\n        for(var i=0; i<this.props.activeOrders.length; i++){\r\n            if(this.props.activeOrders[i].side.toLowerCase() == \"buy\"){\r\n                buyQty += this.props.activeOrders[i].qty\r\n            }\r\n            if(this.props.activeOrders[i].side.toLowerCase() == \"sell\"){\r\n                sellQty += this.props.activeOrders[i].qty\r\n            }\r\n        }\r\n        this.setState({\r\n            buyQty:buyQty,\r\n            sellQty:sellQty\r\n        })\r\n    }\r\n    getSymbolDetails = (s) => {\r\n        var data1 = require(\"./symbols_data.json\");\r\n        return data1[s]\r\n    }\r\n    componentDidMount() {\r\n        this.setState({symbolDetails:this.getSymbolDetails(this.props.symbol)},()=>{\r\n            if(this.props.markets[this.state.symbolDetails.m] == \"yes\"){\r\n                this.handleOpenDialog()\r\n                this.calculateAlreadyBuySellQty()\r\n                this.getFunds()\r\n                this.setValue()\r\n        \r\n            }         \r\n            else{\r\n                alert(this.state.symbolDetails.m + \" is not open.\")\r\n            }\r\n        })\r\n    }\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({\r\n            open:{\r\n                ...this.state.open,\r\n                ['orderplacesymbol']:false\r\n            }\r\n        },()=>{\r\n            if (this.props.side == \"Buy\") {\r\n                this.props.closeBuy(this.state.selectedSymbol)\r\n            } \r\n            if (this.props.side == \"Sell\") {\r\n                this.props.closeSell(this.state.selectedSymbol)\r\n            }     \r\n        })\r\n\r\n    }\r\n    handleOpenDialog = () => {\r\n        this.setState({\r\n            open:{\r\n                ...this.state.open,\r\n                ['orderplacesymbol']:true\r\n            }\r\n        })\r\n    }\r\n\r\n    setValue = () => {\r\n        this.setState({\r\n            selectedSymbol : this.props.symbol,\r\n            side : this.props.side,\r\n            market : this.props.market,            \r\n        },()=>{\r\n            this.colorSide(this.props.side)\r\n            this.calculateCom()\r\n        })\r\n    }\r\n\r\n    handleChangeSide = (e) => {\r\n        this.setState({side:e.target.value},()=>{\r\n            this.calculateLtype()\r\n            this.calculateMargin()\r\n        })\r\n    } \r\n\r\n    handleChangeproductType =  (e) => {\r\n        this.setState({productType:e.target.value})\r\n    }\r\n\r\n    handleChangeorderType = (e) => {\r\n        this.setState({orderType:e.target.value},()=>{\r\n            this.colorOrder()\r\n        })\r\n    }\r\n\r\n    handleChangelimitPrice = (e) => {\r\n        this.setState({limitPrice:e.target.value})\r\n    }\r\n\r\n    handleqty = (e) => {\r\n        this.setState({qty:e.target.value})\r\n    }\r\n\r\n    handlelotqty = (e) => {\r\n        this.setState({lotqty:e.target.value},()=>{\r\n            this.setState({qty:this.state.symbolDetails.lotsize*this.state.lotqty})\r\n        })\r\n    }\r\n\r\n    handleChangeistarget = (e) => {\r\n        this.state.isTarget == true ?(this.setState({isTarget:false})):(this.setState({isTarget:true}))\r\n    }\r\n    \r\n    handleChangeisstoploss = (e) => {\r\n        this.state.isstoploss == true ?(this.setState({isstoploss:false})):(this.setState({isstoploss:true}))\r\n    }\r\n\r\n    handleChangetargetPrice = (e) => {\r\n        this.setState({targetPrice:e.target.value},()=>{\r\n            this.calculateTargetPerc()\r\n        })\r\n    }\r\n\r\n    handleChangetargetPerc = (e) => {\r\n        this.setState({targetPerc:e.target.value},()=>{\r\n        //            this.calculateTargetPr()\r\n        })\r\n    }\r\n\r\n    handleChangestoplossPrice = (e) => {\r\n        this.setState({stoplossPrice:e.target.value},()=>{\r\n            this.calculateStoplossPerc()\r\n        })\r\n    }\r\n\r\n    calculateStoplossPerc = () => {\r\n        var perc = ((this.state.stoplossPrice-this.props.price)/this.props.price)*100\r\n        this.setState({stoplossPerc:this.state.side == \"buy\" ? (-1*perc):(perc)})\r\n    }\r\n\r\n    calculateTargetPerc = () => {\r\n        var perc = ((this.state.targetPrice-this.props.price)/this.props.price)*100\r\n        this.setState({targetPerc:this.state.side == \"sell\" ? (-1*perc):(perc)})\r\n    }\r\n\r\n    calculateMargin = () => {\r\n        if(this.state.symbolDetails.type == \"EQ\"){\r\n            var alreadyQty = (this.state.side == \"buy\")? (this.state.sellQty):(this.state.buyQty)\r\n            var qty1 = (alreadyQty>this.state.qty)? (0):(this.state.qty-alreadyQty)    \r\n            if(this.state.orderType == \"limit\"){\r\n                this.setState({margin:((this.state.limitPrice*qty1)/this.props.userFunds[\"L\"+this.state.productType+this.state.market])})\r\n            }\r\n            if(this.state.orderType == \"market\"){\r\n                this.setState({margin:((this.props.price*qty1)/this.props.userFunds[\"L\"+this.state.productType+this.state.market])})\r\n            }    \r\n        }\r\n        else\r\n        {\r\n            var alreadyQty = (this.state.side == \"buy\")? (this.state.sellQty):(this.state.buyQty)\r\n            var qty1 = (alreadyQty>this.state.qty)? (0):(this.state.qty-alreadyQty) \r\n            if(qty1>0)\r\n            {\r\n                if(this.state.side.toUpperCase() == \"BUY\"){\r\n                    if(this.state.orderType == \"limit\"){\r\n                        this.setState({margin:((this.state.limitPrice*qty1)/this.props.userFunds[\"L\"+this.state.productType+\"OP\"+this.state.side.toUpperCase()])})\r\n                    }\r\n                    if(this.state.orderType == \"market\"){\r\n                        this.setState({margin:((this.props.price*qty1)/this.props.userFunds[\"L\"+this.state.productType+\"OP\" +this.state.side.toUpperCase()])})\r\n                    }        \r\n                }    \r\n            }\r\n            else\r\n                this.setState({margin:0})\r\n        }\r\n    }\r\n\r\n    calculateLtype = () => {\r\n        var s = \"L\" + this.state.productType\r\n        s = s + this.state.symbolDetails.type\r\n\r\n        if(this.state.symbolDetails.type == \"COM_FUT\" || this.state.symbolDetails.type == \"CM_FUT\"){\r\n            s = s + this.state.side.toUpperCase()\r\n        }\r\n        if(this.state.symbolDetails.type == \"CE\" || this.state.symbolDetails.type == \"PE\" || this.state.symbolDetails.type == \"FUT\" ){\r\n            s = s + this.state.side.toUpperCase()\r\n        }\r\n        this.setState({Ltype:s})\r\n    }\r\n    calculateCom = () => {\r\n        if(this.state.symbolDetails.type == \"EQ\"){\r\n            if(this.state.orderType == \"market\"){\r\n                this.setState({com : parseFloat(Math.max(20,this.props.userFunds[\"COMEQ\"]*this.props.price*this.state.qty*0.01))})\r\n            }else{\r\n                this.setState({com : parseFloat(Math.max(20,this.props.userFunds[\"COMEQ\"]*this.state.limitPrice*this.state.qty*0.01))})\r\n            }\r\n        }else if(this.state.symbolDetails.type == \"CE\" || this.state.symbolDetails.type == \"PE\"){ \r\n            this.setState({com : parseFloat(Math.max(20,this.props.userFunds[\"COMOP\"]*this.state.lotqty))})\r\n        }\r\n        else if(this.state.symbolDetails.type == \"FUT\"){ \r\n            this.setState({com : parseFloat(Math.max(20,this.props.userFunds[\"COMFUT\"]*this.state.lotqty))})\r\n        }\r\n    }\r\n    colorSide = (x) => {\r\n        if(x == \"buy\"){\r\n            var property = document.getElementById(\"buyButton\")\r\n\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"green\"\r\n                property.style.color = \"white\"    \r\n            }\r\n            property = document.getElementById(\"sellButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"red\"\r\n            }\r\n        }\r\n        if(x == \"sell\" ){\r\n            var property = document.getElementById(\"sellButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"red\"\r\n                property.style.color = \"white\"\r\n            }\r\n            property = document.getElementById(\"buyButton\");\r\n    \r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"green\"\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    colorOrder = () => {\r\n    }\r\n\r\n    colorProduct = () => {\r\n        if(this.state.productType == \"INTRA\" ){\r\n            var property = document.getElementById(\"intraButton\")\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"green\"\r\n                property.style.color = \"white\"    \r\n            }\r\n            property = document.getElementById(\"cncButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"red\"\r\n            }\r\n        }\r\n        if(this.state.productType == \"CNC\"){\r\n            var property = document.getElementById(\"cncButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"red\"\r\n                property.style.color = \"white\"\r\n            }\r\n            property = document.getElementById(\"intraButton\");\r\n    \r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"green\"\r\n            }\r\n        }\r\n    }\r\n    getFunds = () => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        fetch('/api/user/funds/get', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\":username,\r\n                \"hashval\":hashval\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code==200){\r\n                this.setState({userFunds:res['data']})\r\n            }\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n    componentDidUpdate(props,state){\r\n        if(this.state.side != state.side){\r\n            this.calculateStoplossPerc()\r\n            this.calculateTargetPerc()\r\n            this.colorSide(this.state.side)\r\n            this.calculateLtype()\r\n            this.calculateMargin()\r\n        }\r\n        if(this.state.productType != state.productType){\r\n            this.colorProduct()\r\n            this.calculateLtype()\r\n        }\r\n        if(this.state.targetPrice != state.targetPrice){\r\n            this.calculateTargetPerc()\r\n        }\r\n        if(this.state.stoplossPrice != state.stoplossPrice){\r\n            this.calculateStoplossPerc()\r\n        }\r\n        if(this.state.orderType != state.orderType){\r\n            this.colorOrder()    \r\n            this.calculateMargin()\r\n            this.calculateCom()\r\n            this.calculateLtype()\r\n        }\r\n        if(this.state.productType != state.productType || this.state.orderType != state.orderType || this.state.qty != state.qty){\r\n            this.calculateMargin()\r\n            \r\n        }\r\n        \r\n        if(this.props.price != props.price || this.state.limitPrice != state.limitPrice){\r\n            this.calculateMargin()\r\n            this.calculateStoplossPerc()\r\n            this.calculateTargetPerc()\r\n            this.calculateCom()\r\n        }\r\n        if(this.state.qty != state.qty){\r\n            this.calculateMargin()\r\n            this.calculateCom()\r\n        }\r\n        if(this.state.lotqty != state.lotqty){\r\n            this.calculateMargin()\r\n            this.calculateCom()\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n        alert(\"Order will be placed.\")\r\n        fetch('/api/order/place', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\":username,\r\n                \"hashval\":hashval,\r\n                \"data\":{\r\n                    \"ordertype\":this.state.orderType.toLowerCase(),\r\n                    \"qty\":this.state.symbolDetails.type==\"EQ\"?parseInt(this.state.qty):parseInt(this.state.symbolDetails.lotsize*this.state.lotqty),\r\n                    \"symbol\":this.state.selectedSymbol.toUpperCase(),\r\n                    \"productType\":this.state.productType.toUpperCase(),\r\n                    \"limit\":this.state.limitPrice==\"-\"?(\"-\"):(parseFloat(this.state.limitPrice)),\r\n                    \"stoploss\":this.state.stoplossPrice==\"-\"?(\"-\"):(parseFloat(this.state.stoplossPrice)),\r\n                    \"target\":this.state.targetPrice==\"-\"?(\"-\"):(parseFloat(this.state.targetPrice)),\r\n                    \"side\":this.state.side.toLowerCase(), \r\n                    \"market\":this.state.market.toUpperCase(),\r\n                    \"price\":parseFloat(this.props.price),\r\n                    \"margin\":this.state.symbolDetails.type==\"EQ\"?(parseFloat(((this.state.margin/this.state.qty)*100)/100)):(parseFloat(((this.state.margin/(this.state.symbolDetails.lotsize*this.state.lotqty))*100)/100)),\r\n                    \"side2\":this.state.limitPrice>this.props.price ? \"over\":\"under\",\r\n                    \"com\" : parseFloat((this.state.com*100)/100)\r\n                }\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code==200){\r\n                this.props.changeFund(- this.state.margin - this.state.com)\r\n                this.props.passOrder(res.data)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });    \r\n    }\r\n    buyHandle = () => {\r\n        this.setState({buycolor:\"primary\"})\r\n        this.setState({sellcolor:\"default\"})\r\n        this.handleChangeSide(\"Buy\")        \r\n        var property = document.getElementById(\"buyButton\");\r\n        property.style.backgroundColor = \"green\"\r\n        property.style.color = \"white\"\r\n\r\n        property = document.getElementById(\"sellButton\");\r\n        property.style.backgroundColor = \"lightgrey\"\r\n        property.style.color = \"red\"\r\n    }\r\n\r\n    sellHandle = () => {\r\n        this.setState({buycolor:\"default\"})\r\n        this.setState({sellcolor:\"secondary\"})\r\n        this.handleChangeSide(\"Sell\")\r\n        var property = document.getElementById(\"sellButton\");\r\n        property.style.backgroundColor = \"red\"\r\n        property.style.color = \"white\"\r\n\r\n        property = document.getElementById(\"buyButton\");\r\n        property.style.backgroundColor = \"lightgrey\"\r\n        property.style.color = \"green\"\r\n\r\n    }\r\n    intraHandle = () => {\r\n        this.setState({intracolor:\"primary\"})\r\n        this.setState({cnccolor:\"disabled\"})\r\n        this.handleChangeproductType(\"INTRA\")\r\n    }\r\n    cncHandle = () => {\r\n        this.setState({intracolor:\"default\"})\r\n        this.setState({cnccolor:\"primary\"})\r\n        this.handleChangeproductType(\"CNC\")\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Dialog disableBackdropClick disableEscapeKeyDown \r\n                open={this.state.open.orderplacesymbol} \r\n                onClose={this.handleCloseDialog}\r\n                aria-labelledby=\"p\">\r\n                <DialogTitle id=\"p\" >\r\n                    <Toolbar>\r\n                        <div className={classes.title}>\r\n                            Place a order\r\n                        </div>\r\n                        {this.state.side==\"buy\"?(\r\n                            <TextField size=\"small\" default variant=\"outlined\" label=\"Available Sell Qty.\" value={this.state.sellQty} className={classes.textfield3}></TextField>                                   \r\n                        ):(\r\n                            <TextField size=\"small\" default variant=\"outlined\" label=\"Available Buy Qty.\" value={this.state.buyQty} className={classes.textfield3}></TextField>                                   \r\n                        )}\r\n                        <TextField size=\"small\" default variant=\"outlined\" label=\"Available Fund\" value={Math.floor(this.props.userFunds.F*100)/100} className={classes.textfield4}></TextField>                                   \r\n                    </Toolbar>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className={classes.dialogPaper}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs = {6}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                                        \r\n                                        <TextField size=\"small\" default variant=\"outlined\" label=\"Symbol\" value={this.state.selectedSymbol}></TextField>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs = {6}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                                        \r\n                                        <TextField size=\"small\" default variant=\"outlined\" label=\"Market price\" value={this.props.price}></TextField>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                   \r\n                                        <button value=\"buy\" id=\"buyButton\" className={classes.buyButton}  onClick={this.handleChangeSide}>Buy</button>\r\n                                        <button value=\"sell\" id=\"sellButton\" className={classes.sellButton}  onClick={this.handleChangeSide}>Sell</button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={7}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                     \r\n                                        <button id=\"intraButton\" value=\"INTRA\" variant=\"contained\" className={classes.intraButton}  onClick={this.handleChangeproductType}>IntraDay</button>\r\n                                        <button id=\"cncButton\" value=\"CNC\" variant=\"contained\" className={classes.cncButton} onClick={this.handleChangeproductType}>CNC</button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <RadioGroup onChange={this.handleChangeorderType} defaultValue={this.state.orderType}>\r\n                                            <FormControlLabel value=\"market\" control={<Radio />} label=\"Market\"/>\r\n                                            <FormControlLabel value=\"limit\" control={<Radio />} label=\"Limit\" />\r\n                                        </RadioGroup>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                    {this.state.orderType==\"limit\"?(\r\n                                        <div>\r\n                                        <TextField variant=\"outlined\" size=\"small\" placeholder=\"Limit order\" label=\"Limit\" value={this.state.limitPrice} onChange={this.handleChangelimitPrice}></TextField>\r\n                                    </div>\r\n                                        ):(\r\n                                        <div>\r\n                                        <TextField size=\"small\" disabled default variant=\"outlined\" label=\"Market price\"value={this.props.price}></TextField>\r\n                                    </div>\r\n                                    )}\r\n                                    {this.state.symbolDetails.type == \"EQ\"?(\r\n                                        <TextField type=\"Number\" size=\"small\" default variant=\"outlined\" label=\"qty\" value={this.state.qty} onChange={this.handleqty}></TextField>                        \r\n                                    ):(\r\n                                        <div>\r\n                                            <TextField size=\"small\" default variant=\"outlined\" label=\"Lot Size\" value={this.state.symbolDetails.lotsize}></TextField>\r\n                                            <TextField type=\"Number\" size=\"small\" default variant=\"outlined\" label=\"Lot qty\" value={this.state.lotqty} onChange={this.handlelotqty}></TextField>                        \r\n                                        </div>\r\n                                    )}\r\n                                    <div>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Button value=\"target\" onClick={this.handleChangeistarget} variant=\"contained\" color=\"primary\">Target</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                {this.state.isTarget?(\r\n                                  <div>\r\n                                  <TextField className={classes.textfield2} placeholder=\"Target Price\" label=\"Target Price\" value={this.state.targetPrice} onChange={this.handleChangetargetPrice}></TextField>\r\n                                  <TextField\r\n                                        className={classes.textfield2}\r\n                                      id=\"outlined-disabled\"\r\n                                      label=\"Per %\"\r\n                                      variant=\"outlined\"\r\n                                      onChange={this.handleChangetargetPerc}\r\n                                      value={Math.floor(this.state.targetPerc*100)/100}\r\n                                      InputProps={{\r\n                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\r\n                                      }}\r\n                                  />\r\n                                  </div>\r\n                                ):(<div></div>)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Button width=\"120px\" value=\"stoploss\" onClick={this.handleChangeisstoploss} variant=\"contained\" color=\"primary\">StopLoss</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                {this.state.isstoploss?(\r\n                                  <div>\r\n                                  <TextField className={classes.textfield2} placeholder=\"Triggerd Price\" label=\"Triggered Price\" value={this.state.stoplossPrice} onChange={this.handleChangestoplossPrice}></TextField>\r\n                                  <TextField\r\n                                        className={classes.textfield2}\r\n                                      id=\"outlined-disabled\"\r\n                                      label=\"Per %\"\r\n                                      defaultValue=\"\"\r\n                                      variant=\"outlined\"\r\n                                      value={Math.floor(this.state.stoplossPerc*100)/100}\r\n                                      InputProps={{\r\n                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\r\n                                      }}\r\n                                  />\r\n                                  </div>\r\n                                ):(<div></div>)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        {this.state.orderType==\"limit\"?(\r\n                                            <div>\r\n                                                <Typography>{this.state.side}ing @{this.state.limitPrice}</Typography>\r\n                                                <Typography>This Order Margin Req. : {Math.floor(this.state.margin*100)/100}</Typography>\r\n                                                <Typography>This Order Commision Req. : {Math.floor(this.state.com*100)/100}</Typography>\r\n                                            </div>\r\n                                            ):(\r\n                                            <div>\r\n                                                <Typography>{this.state.side}ing @{this.props.price}</Typography>\r\n                                                <Typography>This Order Margin Req. : {Math.floor(this.state.margin*100)/100}</Typography>\r\n                                                <Typography>This Order Commision Req. : {Math.floor(this.state.com*100)/100}</Typography>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">            \r\n                                    {this.props.userFunds.F>=this.state.margin?(                                    \r\n                                        <div>\r\n                                            <Button type=\"submit\" onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">Place Order</Button>\r\n                                        </div>\r\n                                    ):(\r\n                                        <div>\r\n                                        </div>\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCloseDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n        )\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(OrderPlaceSymbol);","// React \r\nimport React, {Component} from 'react';\r\nimport cookie from \"react-cookies\";\r\nimport {TableRow, TableBody,TableCell,Table,TableContainer,TableHead,Paper} from '@material-ui/core'\r\nimport { Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport SymbolPrice from './SymbolPrice'\r\nimport AddSymbol from './AddSymbol';\r\nimport RemoveSymbol from './RemoveSymbol';\r\nimport OrderPlace from './OrderPlace'\r\nimport OrderPlaceSymbol from './OrderPlaceSymbol';\r\nimport Input from '@material-ui/core/Input'\r\n\r\nvar styles = theme => ({\r\n    button :{\r\n        width :\"33.3%\"\r\n    },\r\n    buyButton : {\r\n      color : 'green',\r\n      '&:hover': {\r\n        background: \"green\",\r\n        color : \"white\"\r\n      },\r\n      size : \"small\"\r\n    },\r\n    sellButton : {\r\n      color : 'red',\r\n      '&:hover': {\r\n        background: \"red\",\r\n        color : \"white\"\r\n      },\r\n      fontsize:\"10px\",\r\n      size : \"small\"\r\n    },   \r\n    toolbar : {\r\n      flexGrow :\"1\"\r\n    },\r\n    remove : {\r\n      padding: \"4px 4px 4px 4px\",\r\n    },container:{\r\n      maxHeight : \"500px\"\r\n    }\r\n});\r\n\r\nclass Watchlist1 extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          watchlist : [],\r\n          prices : {},\r\n          isAdd : false,\r\n          isBuy : {},\r\n          isSell : {},\r\n          activeOrders : this.props.activeOrders\r\n        };\r\n    }\r\n    y = (res) => {\r\n        fetch('/api/data/symbols/price/add', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"symbols\" : res.symbols\r\n            })\r\n        })\r\n        .then(res3 => res3.json())\r\n        .then(res3 => {   \r\n            var prices2 = {}\r\n            for(var i = 0; i < res.symbols.length;i++){\r\n\r\n              prices2[res.symbols[i]] = {\r\n                \"ltp\":0,\r\n                \"prev_close\":\"1\"\r\n              } \r\n            }\r\n            this.setState({\r\n              prices : {...this.state.prices,...prices2}\r\n            },()=>{\r\n              this.props.addSymbols(res.symbols)\r\n              this.setState({watchlist:[...this.state.watchlist, ...res.symbols]})                     \r\n            })\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        fetch('/api/user/watchlist/get', {\r\n          method : 'post',\r\n          headers: {'Content-Type':'application/json'},\r\n          body : JSON.stringify({\r\n              \"username\" : username,\r\n              \"hashval\" : hashval\r\n          })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n          if(res.code == 200){\r\n            this.y(res)\r\n            this.setBuySell(res.symbols)\r\n          }else{\r\n            this.setState({error:res.msg})\r\n          }\r\n      })\r\n      .catch(err=>{\r\n        this.setState({error:err.msg})\r\n      })\r\n      this.interval = setInterval(() => this.tick(), 10000);\r\n    }\r\n    \r\n    tick = () => {\r\n        fetch('/api/data/symbols/price/get', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"symbols\" : this.state.watchlist\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            this.setState({prices : {...this.state.prices}})\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      //clearInterval(this.interval);\r\n    }\r\n\r\n    setBuySell = (s) => {\r\n      for(var i=0;i<s.length;i++){\r\n        this.setState(prevState => ({\r\n          isBuy:{\r\n            ...prevState.isBuy,\r\n            [s[i]]: false\r\n          }\r\n        }));  \r\n        this.setState(prevState => ({\r\n          isSell:{\r\n            ...prevState.isSell,\r\n            [s[i]]: false\r\n          }\r\n        }));  \r\n      }      \r\n    }\r\n    handleBuy = (e) => {\r\n      this.setState(prevState => ({\r\n        isBuy:{\r\n          ...prevState.isBuy,\r\n          [e.target.value]: true\r\n        }\r\n      }));\r\n    }\r\n    handleSell = (e) => {\r\n      this.setState(prevState => ({\r\n        isSell:{\r\n          ...prevState.isSell,\r\n          [e.target.value]: true\r\n        }\r\n      }));\r\n    }\r\n    closeBuy = (symbol) => {\r\n        this.setState(prevState => ({\r\n            isBuy:{\r\n              ...prevState.isBuy,\r\n              [symbol]: false\r\n            }\r\n        }));   \r\n    }\r\n    closeSell = (symbol) => {\r\n      this.setState(prevState => ({\r\n          isSell:{\r\n            ...prevState.isSell,\r\n            [symbol]: false\r\n          }\r\n      }));   \r\n    }\r\n    handleRemoveSymbol = (e) => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        fetch('/api/user/watchlist/remove', {\r\n          method : 'post',\r\n          headers: {'Content-Type':'application/json'},\r\n          body : JSON.stringify({\r\n              \"symbol\": e.target.value,\r\n              \"username\":username,\r\n              \"hashval\":hashval\r\n          })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n          if(res.code == 200){\r\n            this.setState({watchlist:this.state.watchlist.filter(item=>item !=e.target.value)})\r\n          }else{\r\n            this.setState({error:res.msg})\r\n          }\r\n        })\r\n        .catch(err=>{\r\n          this.setState({error:err.msg})\r\n        })\r\n    }\r\n\r\n    addWatchlist = (symbol) => {\r\n      if(this.state.watchlist.indexOf(symbol)==-1){\r\n        var res = {}\r\n        res['symbols'] = [symbol]\r\n        this.y(res)\r\n        this.props.addSymbols([symbol])\r\n      }\r\n    }\r\n\r\n    componentDidUpdate = (props,state) => {\r\n      if(props.prices != this.props.prices){\r\n        this.setState({prices:{...this.state.prices,...this.props.prices}})\r\n      }\r\n    }\r\n    render(){\r\n        const { classes } = this.props;\r\n          return(\r\n          <div>\r\n            <AddSymbol watchlist={this.state.watchlist} addWatchlist={this.addWatchlist}></AddSymbol>              \r\n            <TableContainer component={Paper} className={classes.container}>\r\n              <Table aria-label='simple table'>\r\n                  <TableBody>\r\n                    {\r\n                    this.state.watchlist.map(symbol=>(\r\n                      <Fragment>\r\n                        <TableRow>\r\n                          <TableCell>\r\n                            <Typography>{symbol}</Typography>\r\n                          </TableCell>\r\n                            <TableCell>\r\n                              <button value={symbol} className={classes.buyButton} onClick={this.handleBuy}>Buy</button>\r\n                              <button value={symbol} className={classes.sellButton}  onClick={this.handleSell}>Sell</button></TableCell>\r\n                            {this.state.isBuy[symbol]==true?(<OrderPlaceSymbol userFunds={this.props.userFund} markets={this.props.markets} activeOrders={this.props.activeOrders.filter(item=>item.symbol==symbol)} market=\"EQ\" symbol={symbol} indication={this.state.isBuy[symbol]} price={this.state.prices[symbol].ltp} side=\"Buy\" closeBuy={this.closeBuy} passOrder={this.props.passOrder} changeFund={this.props.changeFund}></OrderPlaceSymbol>):(<div></div>)}\r\n                            {this.state.isSell[symbol]==true?(<OrderPlaceSymbol userFunds={this.props.userFund} markets={this.props.markets} activeOrders={this.props.activeOrders.filter(item=>item.symbol==symbol)}  market=\"EQ\" symbol={symbol} indication={this.state.isSell[symbol]} price={this.state.prices[symbol].ltp} side=\"Sell\" closeSell={this.closeSell} passOrder={this.props.passOrder} changeFund={this.props.changeFund}></OrderPlaceSymbol>):(<div></div>)}\r\n                          <TableCell>\r\n                          </TableCell>\r\n                          <TableCell className={classes.remove}>                            \r\n                            <Typography>{this.state.prices[symbol].ltp}</Typography>\r\n                          </TableCell>\r\n                          <TableCell className={classes.remove}>                            \r\n                            <button color=\"inherit\" value={symbol} onClick={this.handleRemoveSymbol}> - </button>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </Fragment>\r\n                    ))}\r\n                      </TableBody>\r\n                  </Table>\r\n              </TableContainer>\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Watchlist1)","// React \r\nimport React, {Component,useEffect} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Container from '@material-ui/core/Container'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport CheckBox from '@material-ui/core/Checkbox'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { ThemeProvider, withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Link from '@material-ui/core/Link';\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\n\r\nimport SymbolPrice from './SymbolPrice'\r\nvar styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '0%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(90),\r\n    },\r\n  },\r\n  dialogPaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(50),\r\n  },\r\n  textfeild : {\r\n    margin : \"0px\",\r\n    width :\"60px\"\r\n  },\r\n  textfield2 : {\r\n      width : \"120px\"\r\n  },\r\n  textfield3 : {\r\n    width : \"100px\"\r\n  },\r\n  textfield4 : {\r\n    width : \"140px\"\r\n  },\r\n  buyButton : {\r\n    color : 'green',\r\n    backgroundColor : 'lightgrey',\r\n    width :'20px'\r\n  },\r\n  sellButton : {\r\n    color : 'red',\r\n    backgroundColor : 'lightgrey',\r\n    width :'20px'\r\n  },\r\n  dialogtitle : {\r\n      fontSize : \"0px\",\r\n      align : 'center'  \r\n  },\r\n  header : {\r\n    margin : \"0px\",\r\n    fontSize : \"20px\",\r\n    fontWeight : \"bold\",\r\n    fontStyle : \"italic\",\r\n  },\r\n  title : {\r\n    flexGrow : \"1\",\r\n  },\r\n  select : {\r\n    variant : \"outlined\",\r\n    width : \"200px\"\r\n  },\r\n  sell : {\r\n      color : \"default\",\r\n  },\r\n  prevOrder : {\r\n      color : \"red\"\r\n  },     \r\n});\r\n\r\nclass OrderModify extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          username : this.props.order.username,\r\n          open : {\r\n              'orderplace' : false\r\n          },\r\n          targetPrice:'-',\r\n          tagetPerc:'-',\r\n          stoplossPrice:'-',\r\n          stoplossPerc:'-',\r\n          isTarget:true,\r\n          isstoploss:true,\r\n          loggedIn : false,\r\n          rememberMe : false,\r\n          error : '',\r\n      };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.order.target != '-'){\r\n            this.setState({targetPrice:this.props.order.target})\r\n            this.setState({isTarget:true})\r\n            if(this.props.order.side==\"buy\"){\r\n                this.setState({targetPerc:((this.props.order.target-this.props.price)/this.props.price)*100})        \r\n            }\r\n            if(this.props.order.side==\"sell\"){\r\n                this.setState({targetPerc:((-this.props.order.target+this.props.price)/this.props.price)*100})        \r\n            }    \r\n        }else{\r\n            this.setState({isTarget:false})    \r\n        }\r\n        if(this.props.order.stoploss != '-'){\r\n            this.setState({stoplossPrice:this.props.order.stoploss})\r\n            if(this.props.order.side==\"buy\"){\r\n                this.setState({stoplossPerc:((-this.props.order.stoploss+this.props.price)/this.props.price)*100})        \r\n            }\r\n            if(this.props.order.side==\"sell\"){\r\n                this.setState({stoplossPerc:((this.props.order.stoploss-this.props.price)/this.props.price)*100})        \r\n            }\r\n            this.setState({isstoploss:true})\r\n        }else{\r\n            this.setState({isstoploss:false})    \r\n        }\r\n    }\r\n    handleCloseDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['orderplace']: false\r\n            }\r\n        }));\r\n    }\r\n    handleOpenDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['orderplace']: true\r\n            }\r\n        }));\r\n    }   \r\n    handleChangeistarget = (e) => {\r\n        if(this.state.isTarget==true)\r\n            this.setState({isTarget:false})\r\n        if(this.state.isTarget==false)\r\n            this.setState({isTarget:true})\r\n    }\r\n    handleChangeisstoploss = (e) => {\r\n        if(this.state.isstoploss==true)\r\n            this.setState({isstoploss:false})\r\n        if(this.state.isstoploss==false)\r\n            this.setState({isstoploss:true})\r\n    }\r\n    handleChangetargetPrice = (e) => {\r\n        if(this.props.order.side==\"buy\"){\r\n            this.setState({targetPrice:e.target.value})\r\n            this.setState({targetPerc:((e.target.value-this.props.price)/this.props.price)*100})        \r\n        }\r\n        if(this.props.order.side==\"sell\"){\r\n            this.setState({targetPrice:e.target.value})\r\n            this.setState({targetPerc:((-e.target.value+this.props.price)/this.props.price)*100})        \r\n        }\r\n    }\r\n    handleChangestoplossPrice = (e) => {\r\n        if(this.props.order.side==\"buy\"){\r\n            this.setState({stoplossPrice:e.target.value})\r\n            this.setState({stoplossPerc:((-e.target.value+this.props.price)/this.props.price)*100})        \r\n        }\r\n        if(this.props.order.side==\"sell\"){\r\n            this.setState({stoplossPrice:e.target.value})\r\n            this.setState({stoplossPerc:((e.target.value-this.props.price)/this.props.price)*100})        \r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        alert(\" Order will Modified.\")\r\n        fetch('/api/order/modify', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\":username,\r\n                \"hashval\":hashval,\r\n                \"data\":{\r\n                    \"stoploss\":this.state.stoplossPrice==\"-\"?(\"-\"):(parseFloat(this.state.stoplossPrice)),\r\n                    \"target\":this.state.targetPrice==\"-\"?(\"-\"):(parseFloat(this.state.targetPrice))\r\n                },\r\n                \"id\":this.props.order.orderid\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code==200){\r\n                this.props.changeOrder(this.props.order.orderid,this.state.stoplossPrice,this.state.targetPrice)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            alert(err.msg)\r\n            this.setState({error:err.msg})\r\n        });    \r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <button onClick={this.handleOpenDialog}> Modify</button>\r\n                <Dialog disableBackdropClick disableEscapeKeyDown \r\n                open={this.state.open.orderplace} \r\n                onClose={this.handleCloseDialog}\r\n                aria-labelledby=\"p\">\r\n                <DialogTitle id=\"p\" >\r\n                    <Toolbar>\r\n                        <div className={classes.title}>\r\n                            Modify order\r\n                        </div>\r\n                        <TextField size=\"small\" default variant=\"outlined\" label=\"Market price\" value={this.props.price}></TextField>\r\n                    </Toolbar>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className={classes.dialogPaper}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Button value=\"target\" onClick={this.handleChangeistarget} variant=\"contained\" color=\"primary\">Target</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                {this.state.isTarget?(\r\n                                  <div>\r\n                                  <TextField className={classes.textfield2} placeholder=\"Target Price\" label=\"Target Price\" value={this.state.targetPrice} onChange={this.handleChangetargetPrice}></TextField>\r\n                                  <TextField\r\n                                        className={classes.textfield2}\r\n                                      id=\"outlined-disabled\"\r\n                                      label=\"Per %\"\r\n                                      defaultValue=\"\"\r\n                                      variant=\"outlined\"\r\n                                      value={Math.floor(this.state.targetPerc*100)/100}\r\n                                      InputProps={{\r\n                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\r\n                                      }}\r\n                                  />\r\n                                  </div>\r\n                                ):(<div></div>)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Button width=\"120px\" value=\"stoploss\" onClick={this.handleChangeisstoploss} variant=\"contained\" color=\"primary\">StopLoss</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                {this.state.isstoploss?(\r\n                                  <div>\r\n                                  <TextField className={classes.textfield2} placeholder=\"Triggerd Price\" label=\"Triggered Price\" value={this.state.stoplossPrice} onChange={this.handleChangestoplossPrice}></TextField>\r\n                                  <TextField\r\n                                        className={classes.textfield2}\r\n                                      id=\"outlined-disabled\"\r\n                                      label=\"Per %\"\r\n                                      defaultValue=\"\"\r\n                                      variant=\"outlined\"\r\n                                      value={Math.floor(this.state.stoplossPerc*100)/100}\r\n                                      InputProps={{\r\n                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\r\n                                      }}\r\n                                  />\r\n                                  </div>\r\n                                ):(<div></div>)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">                                    \r\n                                    <Button type=\"submit\" onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">Modify Order</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCloseDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n        )\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(OrderModify);","\r\n  // React \r\nimport React, {Component,useEffect} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Container from '@material-ui/core/Container'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport CheckBox from '@material-ui/core/Checkbox'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { ThemeProvider, withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Link from '@material-ui/core/Link';\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\n\r\nimport SymbolPrice from './SymbolPrice'\r\nvar styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '0%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(90),\r\n    },\r\n  },\r\n  dialogPaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(50),\r\n  },\r\n  textfeild : {\r\n    margin : \"0px\",\r\n    width :\"60px\"\r\n  },\r\n  textfield2 : {\r\n      width : \"120px\"\r\n  },\r\n  textfield3 : {\r\n    width : \"100px\"\r\n  },\r\n  textfield4 : {\r\n    width : \"140px\"\r\n  },\r\n  buyButton : {\r\n    color : 'green',\r\n    backgroundColor : 'lightgrey',\r\n    width :'80px',\r\n    fontSize : '20px'\r\n  },\r\n  sellButton : {\r\n    color : 'red',\r\n    backgroundColor : 'lightgrey',\r\n    width :'80px',\r\n    fontSize : '20px'\r\n  },\r\n  intraButton : {\r\n    color : 'green',\r\n    backgroundColor : 'lightgrey',\r\n    width :'100px',\r\n    fontSize : '20px'\r\n  },\r\n  cncButton : {\r\n    color : 'red',\r\n    backgroundColor : 'lightgrey',\r\n    width :'100px',\r\n    fontSize : '20px'\r\n  },\r\n  dialogtitle : {\r\n      fontSize : \"0px\",\r\n      align : 'center'  \r\n  },\r\n  header : {\r\n    margin : \"0px\",\r\n    fontSize : \"20px\",\r\n    fontWeight : \"bold\",\r\n    fontStyle : \"italic\",\r\n  },\r\n  title : {\r\n    flexGrow : \"1\",\r\n  },\r\n  select : {\r\n    variant : \"outlined\",\r\n    width : \"200px\"\r\n  },\r\n  sell : {\r\n      color : \"default\",\r\n  },\r\n  prevOrder : {\r\n      color : \"red\"\r\n  },     \r\n});\r\n\r\nclass PendingModify extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          username : this.props.username,\r\n          open : {\r\n              'ordermodify' : this.props.indication\r\n          },\r\n          userFunds : {},\r\n          selectedSymbol : '',\r\n          side : '',\r\n          productType : '',\r\n          orderType : 'market',\r\n          limitPrice:'-',\r\n          targetPrice:'-',\r\n          tagetPerc:'-',\r\n          stoplossPrice:'-',\r\n          stoplossPerc:'-',\r\n          isTarget:false,\r\n          isstoploss:false,\r\n          qty:1,\r\n          margin :0,\r\n          fund : 0,\r\n          loggedIn : false,\r\n          rememberMe : false,\r\n          error : '',\r\n          buycolor : \"default\",\r\n          sellcolor : \"default\",\r\n          intracolor : \"default\",\r\n          cnccolor : \"default\",\r\n          isSubmit : false,\r\n          buyQty : 0,\r\n          sellQty : 0\r\n      };\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n    handleCloseDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['ordermodify']: false\r\n            }\r\n        }));\r\n        this.props.closeOrder()\r\n    }\r\n    getFunds = () => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        fetch('/api/user/funds/get', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\":username,\r\n                \"hashval\":hashval\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code==200){\r\n                this.setState({userFunds:res['data']})\r\n            }\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n\r\n    handleOpenDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['ordermodify']: true\r\n            }\r\n        }));\r\n        this.getFunds()\r\n        this.setValue()\r\n    }\r\n\r\n    setValue = () => {\r\n        if(this.props.order.stoplossPrice == \"-\"){\r\n            this.setState({isstoploss:true})\r\n        }\r\n        if(this.props.order.targetPrice == \"-\"){\r\n            this.setState({isTarget:true})\r\n        }\r\n        if(this.props.order.status == \"Pending\"){\r\n            this.setState({orderType:\"limit\"})\r\n        }\r\n        this.setState({selectedSymbol:this.props.order.symbol})\r\n        this.setState({side:this.props.order.side})\r\n        this.setState({username:this.props.order.username})\r\n        this.setState({limitPrice:this.props.order.price})\r\n        this.setState({stoplossPrice:this.props.order.stoploss})\r\n        this.setState({targetPrice:this.props.order.target})\r\n        this.setState({qty:this.props.order.qty})\r\n        this.setState({productType:this.props.order.product})\r\n        this.colorSide(this.props.order.side)\r\n        this.colorProduct()\r\n        this.colorOrder()\r\n    }\r\n\r\n    handleChangeSide = (e) => {\r\n        this.setState({side:e.target.value})\r\n    } \r\n\r\n    handleChangeproductType =  (e) => {\r\n        this.setState({productType:e.target.value})\r\n    }\r\n\r\n    handleChangeorderType = (e) => {\r\n        this.setState({orderType:e.target.value})\r\n    }\r\n\r\n    handleChangelimitPrice = (e) => {\r\n        this.setState({limitPrice:e.target.value})\r\n    }\r\n\r\n    handleqty = (e) => {\r\n        this.setState({qty:e.target.value})\r\n    }\r\n\r\n    handleChangeistarget = (e) => {\r\n        this.state.isTarget == true ?(this.setState({isTarget:false})):(this.setState({isTarget:true}))\r\n    }\r\n    \r\n    handleChangeisstoploss = (e) => {\r\n        this.state.isstoploss == true ?(this.setState({isstoploss:false})):(this.setState({isstoploss:true}))\r\n    }\r\n\r\n    handleChangetargetPrice = (e) => {\r\n        this.setState({targetPrice:e.target.value})\r\n    }\r\n\r\n    handleChangestoplossPrice = (e) => {\r\n        this.setState({stoplossPrice:e.target.value})\r\n    }\r\n\r\n    calculateStoplossPerc = () => {\r\n        var perc = ((this.state.stoploss-this.props.price)/this.props.price)*100\r\n        this.setState({stoplossPerc:this.state.side == \"buy\" ? (-1*perc):(perc)})\r\n    }\r\n\r\n    calculateTargetPerc = (e) => {\r\n        var perc = ((this.state.target-this.props.price)/this.props.price)*100\r\n        this.setState({targetPerc:this.state.side == \"sell\" ? (-1*perc):(perc)})\r\n    }\r\n\r\n    colorSide = (x) => {\r\n        if(x == \"buy\"){\r\n            var property = document.getElementById(\"buyButton\")\r\n\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"green\"\r\n                property.style.color = \"white\"    \r\n            }\r\n            property = document.getElementById(\"sellButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"red\"\r\n            }\r\n        }\r\n        if(x == \"sell\" ){\r\n            var property = document.getElementById(\"sellButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"red\"\r\n                property.style.color = \"white\"\r\n            }\r\n            property = document.getElementById(\"buyButton\");\r\n    \r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"green\"\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    colorOrder = () => {\r\n        if(this.state.productType == \"INTRA\"  && this.state.open.ordermodify == true){\r\n            var property = document.getElementById(\"intraButton\")\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"green\"\r\n                property.style.color = \"white\"    \r\n            }\r\n            property = document.getElementById(\"cncButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"red\"\r\n            }\r\n        }\r\n        if(this.state.productType == \"CNC\" && this.state.open.ordermodify == true){\r\n            var property = document.getElementById(\"cncButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"red\"\r\n                property.style.color = \"white\"\r\n            }\r\n            property = document.getElementById(\"intraButton\");\r\n    \r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"green\"\r\n            }\r\n        }\r\n    }\r\n\r\n    colorProduct = () => {\r\n        if(this.state.productType == \"INTRA\"  && this.state.open.ordermodify == true){\r\n            var property = document.getElementById(\"intraButton\")\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"green\"\r\n                property.style.color = \"white\"    \r\n            }\r\n            property = document.getElementById(\"cncButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"red\"\r\n            }\r\n        }\r\n        if(this.state.productType == \"CNC\" && this.state.open.ordermodify == true){\r\n            var property = document.getElementById(\"cncButton\");\r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"red\"\r\n                property.style.color = \"white\"\r\n            }\r\n            property = document.getElementById(\"intraButton\");\r\n    \r\n            if(property != null && property != 'undefined'){\r\n                property.style.backgroundColor = \"lightgrey\"\r\n                property.style.color = \"green\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(props,state){\r\n        if(this.state.side != state.side){\r\n            this.calculateStoplossPerc()\r\n            this.calculateTargetPerc()\r\n            this.colorSide(this.state.side)\r\n        }\r\n        if(this.state.productType != state.productType){\r\n            this.colorProduct()\r\n        }\r\n        if(this.state.targetPrice != state.targetPrice){\r\n            this.calculateTargetPerc()\r\n        }\r\n        if(this.state.stoplossPrice != state.stoplossPrice){\r\n            this.calculateStoplossPerc()\r\n        }\r\n        if(this.state.orderType != state.orderType){\r\n            this.colorOrder()    \r\n        }\r\n        if(this.props.indication != props.indication){\r\n            if(this.props.indication == true){\r\n                this.handleOpenDialog()\r\n            }else{\r\n                this.handleCloseDialog()\r\n            }\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        var data = {\r\n            \"ordertype\":this.props.orderType.toLowerCase(),\r\n            \"qty\":parseInt(this.state.qty),\r\n            \"symbol\":\"NSE:\" + this.state.selectedSymbol.toUpperCase(),\r\n            \"productype\":this.state.productType.toUpperCase(),\r\n            \"limit\":this.state.limitPrice==\"-\"?(\"-\"):(parseFloat(this.state.limitPrice)),\r\n            \"stoploss\":this.state.stoplossPrice==\"-\"?(\"-\"):(parseFloat(this.state.stoplossPrice)),\r\n            \"target\":this.state.target==\"-\"?(\"-\"):(parseFloat(this.state.target)),\r\n            \"side\":this.state.side.toLowerCase(), \r\n            \"market\":this.state.market.toUpperCase(),\r\n            \"price\":parseInt(this.props.ordeprice),\r\n            \"margin\":this.props.ordeType == \"market\" ? parseFloat((this.props.price)/this.state.userFunds[\"L\"+this.state.productType+this.state.market]):parseFloat((this.props.limitPrice)/this.state.userFunds[\"L\"+this.state.productType+this.state.market]),\r\n            \"side2\":this.state.limitPrice>this.props.price ? \"over\":\"under\" \r\n        }\r\n        alert(\" Order will be placed.\")\r\n        fetch('/api/order/place', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\":username,\r\n                \"hashval\":hashval,\r\n                \"data\":{\r\n                    \"ordertype\":this.props.ordeType.toLowerCase(),\r\n                    \"qty\":parseInt(this.state.qty),\r\n                    \"symbol\":\"NSE:\" + this.state.selectedSymbol.toUpperCase(),\r\n                    \"productype\":this.state.productType.toUpperCase(),\r\n                    \"limit\":this.state.limitPrice==\"-\"?(\"-\"):(parseFloat(this.state.limitPrice)),\r\n                    \"stoploss\":this.state.stoplossPrice==\"-\"?(\"-\"):(parseFloat(this.state.stoplossPrice)),\r\n                    \"target\":this.state.targetPrice==\"-\"?(\"-\"):(parseFloat(this.state.targetPrice)),\r\n                    \"side\":this.state.side.toLowerCase(), \r\n                    \"market\":this.state.market.toUpperCase(),\r\n                    \"price\":parseFloat(this.props.price),\r\n                    \"margin\":this.props.ordeType == \"market\" ? parseFloat((this.props.price)/this.state.userFunds[\"L\"+this.state.productType+this.state.market]):parseFloat((this.props.limitPrice)/this.state.userFunds[\"L\"+this.state.productType+this.state.market]),\r\n                    \"side2\":this.state.limitPrice>this.props.price ? \"over\":\"under\",\r\n                    \"com\" : parseFloat(Math.max(this.state.userFunds.COM*0.01*this.props.price*this.state.qty,20))\r\n                }\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code==200){\r\n                this.props.passActiveOrders(data)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            alert(err.msg)\r\n            this.setState({error:err.msg})\r\n        });    \r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Dialog disableBackdropClick disableEscapeKeyDown \r\n                open={this.state.open.ordermodify} \r\n                onClose={this.handleCloseDialog}\r\n                aria-labelledby=\"p\">\r\n                <DialogTitle id=\"p\" >\r\n                    <Toolbar>\r\n                        <div className={classes.title}>\r\n                            Place a order\r\n                        </div>\r\n                        {this.state.side==\"buy\"?(\r\n                            <TextField size=\"small\" default variant=\"outlined\" label=\"Available Sell Qty.\" value={this.state.sellQty} className={classes.textfield3}></TextField>                                   \r\n                        ):(\r\n                            <TextField size=\"small\" default variant=\"outlined\" label=\"Available Buy Qty.\" value={this.state.buyQty} className={classes.textfield3}></TextField>                                   \r\n                        )}\r\n                        <TextField size=\"small\" default variant=\"outlined\" label=\"Available Fund\" value={Math.floor(this.state.userFunds[\"F\" + this.state.market]*100)/100} className={classes.textfield4}></TextField>                                   \r\n                    </Toolbar>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className={classes.dialogPaper}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs = {6}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                                        \r\n                                        <TextField size=\"small\" default variant=\"outlined\" label=\"Symbol\" value={this.state.selectedSymbol}></TextField>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs = {6}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                                        \r\n                                        <TextField size=\"small\" default variant=\"outlined\" label=\"Market price\" value={this.props.price}></TextField>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                   \r\n                                        <button value=\"buy\" id=\"buyButton\" className={classes.buyButton} onClick={this.handleChangeSide}>Buy</button>\r\n                                        <button value=\"sell\" id=\"sellButton\" className={classes.sellButton} onClick={this.handleChangeSide}>Sell</button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={7}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>                                        \r\n                                        <button id=\"intraButton\" value=\"INTRA\" variant=\"contained\" className={classes.intraButton}  onClick={this.handleChangeproductType}>IntraDay</button>\r\n                                        <button id=\"cncButton\" value=\"CNC\" variant=\"contained\" className={classes.cncButton} onClick={this.handleChangeproductType}>CNC</button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <RadioGroup onChange={this.handleChangeorderType} defaultValue={this.state.orderType}>\r\n                                        <FormControlLabel value=\"market\" control={<Radio />} label=\"Market\"/>\r\n                                        <FormControlLabel value=\"limit\" control={<Radio />} label=\"Limit\" />\r\n                                        </RadioGroup>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                    {this.state.orderType==\"limit\"?(\r\n                                        <div>\r\n                                            <TextField variant=\"outlined\" size=\"small\" placeholder=\"Limit order\" label=\"Limit\" value={this.state.limitPrice} onChange={this.handleChangelimitPrice}></TextField>\r\n                                        </div>\r\n                                        ):(\r\n                                        <div>\r\n                                            <TextField size=\"small\" disabled default variant=\"outlined\" label=\"Market price\"value={this.props.price}></TextField>\r\n                                        </div>\r\n                                    )}\r\n                                    <TextField type=\"Number\" size=\"small\" default variant=\"outlined\" label=\"qty\" value={this.state.qty} onChange={this.handleqty}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Button onClick={this.handleChangeistarget} variant=\"contained\" color=\"primary\">Target</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                {this.state.isTarget?(\r\n                                  <div>\r\n                                  <TextField className={classes.textfield2} placeholder=\"Target Price\" label=\"Target Price\" value={this.state.targetPrice} onChange={this.handleChangetargetPrice}></TextField>\r\n                                  <TextField\r\n                                        className={classes.textfield2}\r\n                                      id=\"outlined-disabled\"\r\n                                      label=\"Per %\"\r\n                                      defaultValue=\"\"\r\n                                      variant=\"outlined\"\r\n                                      value={Math.floor(this.state.targetPerc*100)/100}\r\n                                      InputProps={{\r\n                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\r\n                                      }}\r\n                                  />\r\n                                  </div>\r\n                                ):(<div></div>)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Button onClick={this.handleChangeisstoploss} variant=\"contained\" color=\"primary\">StopLoss</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Grid container justify=\"center\">\r\n                                {this.state.isstoploss?(\r\n                                  <div>\r\n                                  <TextField className={classes.textfield2} placeholder=\"Triggerd Price\" label=\"Triggered Price\" value={this.state.stoplossPrice} onChange={this.handleChangestoplossPrice}></TextField>\r\n                                  <TextField\r\n                                        className={classes.textfield2}\r\n                                      id=\"outlined-disabled\"\r\n                                      label=\"Per %\"\r\n                                      defaultValue=\"\"\r\n                                      variant=\"outlined\"\r\n                                      value={Math.floor(this.state.stoplossPerc*100)/100}\r\n                                      InputProps={{\r\n                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\r\n                                      }}\r\n                                  />\r\n                                  </div>\r\n                                ):(<div></div>)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        {this.state.orderType==\"limit\"?(\r\n                                            <div>\r\n                                                <Typography>{this.state.side}ing @{this.state.limitPrice}</Typography>\r\n                                                <Typography>This Order Margin Req. : {Math.floor(((this.state.limitPrice*this.state.qty)/this.state.userFunds[\"L\"+this.state.productType+this.state.market])*100)/100}</Typography>\r\n                                            </div>\r\n                                            ):(\r\n                                            <div>\r\n                                                <Typography>{this.state.side}ing @{this.props.price}</Typography>\r\n                                                <Typography>This Order Margin Req. : {Math.floor(((this.props.price*this.state.qty)/this.state.userFunds[\"L\"+this.state.productType+this.state.market])*100)/100}</Typography>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">                                    \r\n                                    {this.state.userFunds[\"F\" + this.state.market]>=(this.props.price*this.state.qty)/this.state.userFunds[\"L\"+this.state.productType+this.state.market]?(                                    \r\n                                        <div>\r\n                                            <Button type=\"submit\" onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">Place Order</Button>\r\n                                        </div>\r\n                                    ):(\r\n                                        <div>\r\n                                        </div>\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCloseDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n        )\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(PendingModify);","// React \r\nimport React, {Component} from 'react';\r\nimport cookie from \"react-cookies\";\r\nimport {TableRow, TableBody,TableCell,Table,TableContainer,TableHead,Paper} from '@material-ui/core'\r\nimport { Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography'\r\nimport OrderModify from './OrderModify';\r\nimport PendingModify from './PendingModify';\r\n\r\nvar styles = theme => ({\r\n    button :{\r\n        width :\"25%\"\r\n    },\r\n    orderbook : {\r\n        height : \"100px\"\r\n    },\r\n    container :{\r\n        maxHeight :\"350px\"\r\n    },  \r\n    color1 : {\r\n        fontWeight : \"bold\",\r\n        color : \"green\"\r\n    },\r\n    color2 : {\r\n        fontWeight : \"bold\",\r\n        color : \"red\"\r\n    }\r\n    \r\n  });\r\nclass OrderBook extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activecolor : \"primary\",\r\n            pendingcolor : \"default\",\r\n            completecolor : \"default\",\r\n            cancelcolor : \"default\",\r\n            activeOrders : [],\r\n            pendingOrders : [],\r\n            completeOrders : [],\r\n            cancelOrders : [],\r\n            symbolOrders : {},\r\n            symbols : [],\r\n            prices : {},\r\n            pendingModify : false,\r\n            profit : 0\r\n        };\r\n    }\r\n    y = (res) => {\r\n        var status = 'Active'\r\n        var s1 = []\r\n        for(var i = 0; i <res.data.length;i++){\r\n            if(res.data[i].status == 'Pending')\r\n                status = 'Pending'\r\n            s1.push(res.data[i].symbol)                    \r\n        }\r\n        fetch('/api/data/symbols/price/add', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"symbols\" : s1\r\n            })\r\n        })\r\n        .then(res3 => res3.json())\r\n        .then(res3 => {\r\n            if(res3.code == 200){\r\n                fetch('/api/data/symbols/price/get', {\r\n                    method : 'post',\r\n                    headers: {'Content-Type':'application/json'},\r\n                    body : JSON.stringify({\r\n                        \"symbols\" : [...this.state.symbols,...s1]\r\n                    })\r\n                })\r\n                .then(res2 => res2.json())\r\n                .then(res2 => {\r\n                    this.setState({\r\n                        prices:{...this.state.prices,...res2.prices},\r\n                        symbols:[...this.state.symbols,...s1]\r\n                    },()=>{\r\n                        if(status == 'Pending'){\r\n                            this.setState({pendingOrders:[...res.data,...this.state.pendingOrders,]})\r\n                        }else if(status == 'Active'){\r\n                            this.setState({activeOrders:[...res.data,...this.state.activeOrders]})\r\n                        }    \r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    this.setState({error:err.msg})\r\n                });\r\n            }\r\n            })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n        fetch('/api/order/get/pending', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\" : username,\r\n                \"hashval\" : hashval\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            if(res.code == 200){\r\n                this.y(res)\r\n            }else{\r\n                this.setState({error:res.msg})\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            this.setState({error:err.msg})\r\n        })  \r\n\r\n        fetch('/api/order/get/active', {\r\n          method : 'post',\r\n          headers: {'Content-Type':'application/json'},\r\n          body : JSON.stringify({\r\n              \"username\" : username,\r\n              \"hashval\" : hashval\r\n          })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n          if(res.code == 200){\r\n            this.y(res)    \r\n            this.props.setActiveOrders(res.data)\r\n        }else{\r\n            this.setState({error:res.msg})\r\n          }\r\n        })\r\n        .catch(err=>{\r\n          this.setState({error:err.msg})\r\n        })  \r\n\r\n        fetch('/api/order/get/complete', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\" : username,\r\n                \"hashval\" : hashval\r\n            })\r\n          })\r\n          .then(res=>res.json())\r\n          .then(res=>{\r\n            if(res.code == 200){\r\n              this.setState({completeOrders:res.data})  \r\n              }else{\r\n              this.setState({error:res.msg})\r\n            }\r\n          })\r\n          .catch(err=>{\r\n            this.setState({error:err.msg})\r\n          }) \r\n\r\n          fetch('/api/order/get/cancel', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\" : username,\r\n                \"hashval\" : hashval\r\n            })\r\n          })\r\n          .then(res=>res.json())\r\n          .then(res=>{\r\n            if(res.code == 200){\r\n              this.setState({cancelOrders:res.data})  \r\n            }else{\r\n              this.setState({error:res.msg})\r\n            }\r\n          })\r\n          .catch(err=>{\r\n            this.setState({error:err.msg})\r\n          })   \r\n        //this.interval = setInterval(() => this.tick(), 10000);\r\n\r\n    }\r\n    handleChangeActiveButton = (e) => {\r\n        this.setState({activecolor:\"primary\",pendingcolor: \"default\",completecolor: \"default\",cancelcolor:\"default\"})\r\n    }\r\n    handleChangeCompleteButton = (e) => {\r\n        this.setState({activecolor:\"default\",pendingcolor: \"default\",completecolor: \"primary\",cancelcolor:\"default\"})\r\n    }\r\n    handleChangePendingButton = (e) => {\r\n        this.setState({activecolor:\"default\",pendingcolor: \"primary\",completecolor: \"default\",cancelcolor:\"default\"})\r\n    }\r\n    handleChangeCancelButton = (e) => {\r\n        this.setState({activecolor:\"default\",pendingcolor: \"default\",completecolor: \"default\",cancelcolor:\"primary\"})\r\n    }\r\n    handleCancel = (e) => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        fetch('/api/order/cancel', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\" : username,\r\n                \"hashval\" : hashval,\r\n                \"id\":e.target.value\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            if(res.code == 200){\r\n                this.setState(prevState=>({cancelOrders:[...prevState.cancelOrders, res.data]}))\r\n                //this.setState({pendingOrders:this.state.pendingOrders.filter(item=>item.orderid !=e.target.value)})\r\n            }else{\r\n                this.setState({error:res.msg})\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            this.setState({error:err.msg})\r\n        })  \r\n    }\r\n    handleExitAll = () => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        fetch('/api/order/exit/all', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\" : username,\r\n                \"hashval\" : hashval,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            if(res.code == 200){\r\n                var profit = 0\r\n                this.setState({profit:profit})\r\n            }else{\r\n                this.setState({error:res.msg})\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            this.setState({error:err.msg})\r\n        })  \r\n\r\n    }\r\n    handleExit = (e) => {\r\n        var username = cookie.load('username')\r\n        var hashval = cookie.load('hashval')\r\n        if(username){\r\n        }else{\r\n          username = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n          hashval = ''\r\n        }\r\n\r\n        fetch('/api/order/exit', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\" : username,\r\n                \"hashval\" : hashval,\r\n                \"orderid\" : e.target.value\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            if(res.code == 200){\r\n                this.setState({\r\n                    completeOrders:[...this.state.completeOrders,res.data],\r\n                    activeOrders : [...this.state.activeOrders.filter(item => item.orderid != e.target.value)]\r\n                },this.calculateProfit)\r\n                this.props.changeFund(res.fund)\r\n            }else{\r\n                this.setState({error:res.msg})\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            this.setState({error:err.msg})\r\n        })  \r\n    }\r\n    calculateProfit = () => {\r\n        var profit = 0\r\n        for(var i=0;i<this.state.activeOrders.length;i++){\r\n            var order = this.state.activeOrders[i]\r\n            if(order.side == \"buy\"){\r\n                profit += (this.state.prices[order.symbol].ltp - order.price)*order.qty                    \r\n            }else{\r\n                profit += (-1*this.state.prices[order.symbol].ltp + order.price)*order.qty                    \r\n            }\r\n        }\r\n        this.setState({profit:profit})\r\n    }\r\n\r\n    tick = () => {\r\n        fetch('/api/data/symbols/price/get', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"symbols\" : this.state.symbols\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            this.setState({prices:{...this.state.prices,...res.prices}},this.calculateProfit)\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n  \r\n    closeOrder = () => {\r\n        //this.setState({pendingModify:false})\r\n    }\r\n    \r\n    myfunc = (a,b) => {\r\n        return a + b.qty\r\n    }\r\n\r\n    handlePendingModify = () => {\r\n        this.setState({pendingModify:true})\r\n    }\r\n\r\n    changeOrder = () => {\r\n\r\n    }\r\n\r\n    componentDidUpdate(props,state){\r\n        if(this.props.data != props.data){\r\n            var res = {}\r\n            res['data'] = [this.props.data]\r\n            this.y(res)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        let completeorders = (\r\n        <div>\r\n            <TableContainer component={Paper} className={classes.container}>\r\n                <Table aria-label='simple table'>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell size='medium' >Symbol</TableCell>\r\n                            <TableCell align='center' size='medium' >Call</TableCell>\r\n                            <TableCell align='center' size='medium' >EntryTime</TableCell>\r\n                            <TableCell align='center' size='medium' >EntryPrice</TableCell>\r\n                            <TableCell align='center' size='medium' >ExitTime</TableCell>\r\n                            <TableCell align='center' size='medium' >ExitPrice</TableCell>\r\n                            <TableCell align='center' size='medium' >Qty</TableCell>\r\n                            <TableCell align='center' size='medium' >Investment</TableCell>\r\n                            <TableCell align='center' size='medium' >Commision</TableCell>\r\n                            <TableCell align='center' size='medium' >Profit/Loss</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.completeOrders.map(order =>(\r\n                                <Fragment>\r\n                                <TableRow>\r\n                                    <TableCell >{order.symbol}</TableCell>\r\n                                    <TableCell align='center'>{order.side}</TableCell>\r\n                                    <TableCell align='center'>{order.entrytime}</TableCell>\r\n                                    <TableCell align='center'>{order.entryprice}</TableCell>\r\n                                    <TableCell align='center'>{order.exittime}</TableCell>\r\n                                    <TableCell align='center'>{order.exitprice}</TableCell>\r\n                                    <TableCell align='center'>{order.qty}</TableCell>\r\n                                    <TableCell align='center'>{Math.floor(order.qty*order.entryprice*100)/100}</TableCell>\r\n                                    <TableCell align='center'>{Math.floor(order.com*100)/100}</TableCell>\r\n                                    <TableCell align='center'>\r\n                                        {order.side == \"buy\" ? (\r\n                                            Math.floor((order.exitprice - order.entryprice)*order.qty*100)/100\r\n                                        ):(\r\n                                            Math.floor((-order.exitprice + order.entryprice)*order.qty*100)/100\r\n                                        )}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                </Fragment>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        )\r\n        \r\n        let activeorders = (\r\n            <div>\r\n                <TableContainer component={Paper} className={classes.container}>\r\n                    <Table aria-label='simple table'>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell size='medium' >Symbol</TableCell>\r\n                                <TableCell align='center' size='medium' >Call</TableCell>\r\n                                <TableCell align='center' size='medium' >EntryPrice</TableCell>\r\n                                <TableCell align='center' size='medium' >Qty</TableCell>\r\n                                <TableCell align='center' size='medium' >Stoploss</TableCell>\r\n                                <TableCell align='center' size='medium' >Target</TableCell>\r\n                                <TableCell align='center' size='medium' >Product Type</TableCell>\r\n                                <TableCell align='center' size='medium' >Market price</TableCell>\r\n                                <TableCell align='center' size='medium' >P/L</TableCell>\r\n                                <TableCell align='center' size='medium' >Comision</TableCell>\r\n                                <TableCell align='center' size='medium' >Exit/Modify</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.activeOrders.map(order =>(\r\n                                <Fragment>\r\n                                <TableRow>\r\n                                    <TableCell >{order.symbol}</TableCell>\r\n                                    <TableCell align='center'>{order.side}</TableCell>\r\n                                    <TableCell align='center'>{order.price}</TableCell>\r\n                                    <TableCell align='center'>{order.qty}</TableCell>\r\n                                    <TableCell align='center'>{order.stoploss}</TableCell>\r\n                                    <TableCell align='center'>{order.target}</TableCell>\r\n                                    <TableCell align='center'>{order.productType}</TableCell>\r\n                                    <TableCell align='center'>{this.state.prices[order.symbol].ltp}</TableCell>\r\n                                    <TableCell align='center'>\r\n                                        {order.side == \"buy\" ? (\r\n                                            <div>\r\n                                                {(this.state.prices[order.symbol].ltp - order.price)*order.qty - order.com>=0?(\r\n                                                    <Typography className={classes.color1}>{Math.floor((((this.state.prices[order.symbol].ltp - order.price)*order.qty - order.com)*100)/100)}</Typography>                                                \r\n                                                ):(\r\n                                                    <Typography className={classes.color2}>{Math.floor((((this.state.prices[order.symbol].ltp - order.price)*order.qty - order.com)*100)/100)}</Typography>                                                \r\n                                                )}\r\n                                                {(this.state.prices[order.symbol].ltp - order.price)*order.qty - order.com>=0?(\r\n                                                    <Typography className={classes.color1}>{Math.floor(((((this.state.prices[order.symbol].ltp - order.price)*order.qty - order.com)/(order.price*order.qty))*1000000)/10000)}%</Typography>                                                \r\n                                                ):(\r\n                                                    <Typography className={classes.color2}>{Math.floor(((((this.state.prices[order.symbol].ltp - order.price)*order.qty - order.com)/(order.price*order.qty))*1000000)/10000)}%</Typography>                                                \r\n                                                )}\r\n                                            </div>\r\n                                        ):(\r\n                                            <div>\r\n                                            {(this.state.prices[order.symbol].ltp - order.price)*order.qty - order.com>=0?(\r\n                                                <Typography className={classes.color1}>{Math.floor(((( - this.state.prices[order.symbol].ltp + order.price)*order.qty - order.com)*100)/100)}</Typography>                                                \r\n                                            ):(\r\n                                                <Typography className={classes.color2}>{Math.floor(((( - this.state.prices[order.symbol].ltp + order.price)*order.qty - order.com)*100)/100)}</Typography>                                                \r\n                                            )}\r\n                                            {(this.state.prices[order.symbol].ltp - order.price)*order.qty - order.com>=0?(\r\n                                                <Typography className={classes.color1}>{Math.floor((((( - this.state.prices[order.symbol].ltp + order.price)*order.qty - order.com)/(order.price*order.qty))*1000000)/10000)}%</Typography>                                                \r\n                                            ):(\r\n                                                <Typography className={classes.color2}>{Math.floor((((( - this.state.prices[order.symbol].ltp + order.price)*order.qty - order.com)/(order.price*order.qty))*1000000)/10000)}%</Typography>                                                \r\n                                            )}\r\n                                        </div>\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell align='center'>{Math.floor(order.com*1000)/1000}</TableCell>\r\n                                    <TableCell>\r\n                                        <button onClick={this.handleExit} value={order.orderid} color=\"red\">Exit</button>\r\n                                        <OrderModify price={order.price} order={order} side={order.side} changeOrder={this.changeOrder}></OrderModify>                                        \r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                </Fragment>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            )\r\n\r\n            let pendingorders = (\r\n                <div>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label='simple table'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell size='medium' >Symbol</TableCell>\r\n                                    <TableCell align='center' size='medium' >Call</TableCell>\r\n                                    <TableCell align='center' size='medium' >RequestedTime</TableCell>\r\n                                    <TableCell align='center' size='medium' >Limit</TableCell>\r\n                                    <TableCell align='center' size='medium' >Qty</TableCell>\r\n                                    <TableCell align='center' size='medium' >Stoploss</TableCell>\r\n                                    <TableCell align='center' size='medium' >Target</TableCell>\r\n                                    <TableCell align='center' size='medium' >Cancel/Modify</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.pendingOrders.map(order =>(\r\n                                <Fragment>\r\n                                <TableRow>\r\n                                    <TableCell >{order.symbol}</TableCell>\r\n                                    <TableCell align='center'>{order.side}</TableCell>\r\n                                    <TableCell align='center'>{order.ordertime}</TableCell>\r\n                                    <TableCell align='center'>{order.price}</TableCell>\r\n                                    <TableCell align='center'>{order.qty}</TableCell>\r\n                                    <TableCell align='center'>{order.stoploss}</TableCell>\r\n                                    <TableCell align='center'>{order.target}</TableCell>\r\n                                    <TableCell>\r\n                                        <button onClick={this.handleExit} value={order.orderid} color=\"red\">Exit</button>\r\n                                        <button onClick={this.handlePendingModify} value={order.orderid} color=\"red\">Modify</button>\r\n                                        <PendingModify indication={this.state.pendingModify} price={10} order={order} closeOrder={this.closeOrder}></PendingModify>                                        \r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                                </Fragment>\r\n                            ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                )\r\n                let cancelorders = (\r\n                    <div>\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label='simple table'>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell size='medium' >Symbol</TableCell>\r\n                                        <TableCell align='center' size='medium' >Call</TableCell>\r\n                                        <TableCell align='center' size='medium' >Limit</TableCell>\r\n                                        <TableCell align='center' size='medium' >Qty</TableCell>\r\n                                        <TableCell align='center' size='medium' >Stoploss</TableCell>\r\n                                        <TableCell align='center' size='medium' >Target</TableCell>\r\n                                        <TableCell align='center' size='medium' >Reactivate</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.cancelOrders.map(order =>(\r\n                                    <Fragment>\r\n                                    <TableRow>\r\n                                        <TableCell >{order.symbol}</TableCell>\r\n                                        <TableCell align='center'>{order.side}</TableCell>\r\n                                        <TableCell align='center'>{order.ordertime}</TableCell>\r\n                                        <TableCell align='center'>{order.price}</TableCell>\r\n                                        <TableCell align='center'>{order.qty}</TableCell>\r\n                                        <TableCell align='center'>{order.stoploss}</TableCell>\r\n                                        <TableCell align='center'>{order.target}</TableCell>\r\n                                        <TableCell>\r\n                                            <button onClick={this.handleCancel} value={order.orderid} color=\"red\">Reactivate</button>\r\n                                            <button color=\"red\">Modify</button>\r\n                                        </TableCell>\r\n    \r\n                                    </TableRow>\r\n                                    </Fragment>\r\n                                ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </div>\r\n                    )\r\n    \r\n            return(\r\n            <div>\r\n                <br></br>\r\n                <Button className={classes.button} variant=\"contained\" color={this.state.activecolor} onClick={this.handleChangeActiveButton}>Active Orders</Button>\r\n                <Button className={classes.button} variant=\"contained\" color={this.state.pendingcolor} onClick={this.handleChangePendingButton}>Pending Orders</Button>\r\n                <Button className={classes.button} variant=\"contained\" color={this.state.completecolor} onClick={this.handleChangeCompleteButton}>Complete Orders</Button>\r\n                <Button className={classes.button} variant=\"contained\" color={this.state.cancelcolor} onClick={this.handleChangeCancelButton}>Canceled Orders</Button>\r\n                {this.state.activecolor==\"primary\"?activeorders:this.state.completecolor==\"primary\"?completeorders:this.state.pendingcolor==\"primary\"?pendingorders:cancelorders}\r\n                {this.state.activeOrders.length>0?(\r\n                    <Typography> Profit : {Math.floor(this.state.profit*1000)/1000}</Typography>\r\n                ):(\r\n                    <Typography>No Orders.</Typography>\r\n                )}\r\n                <Button onClick={this.handleExitAll}>Exit All</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(OrderBook)","// React \r\nimport React, {Component} from 'react';\r\nimport cookie from \"react-cookies\";\r\n\r\n// Material ui\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport CheckBox from '@material-ui/core/Checkbox'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Link from '@material-ui/core/Link';\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\n\r\nimport SymbolPrice from './SymbolPrice'\r\nimport OrderPlace from './OrderPlace';\r\nimport Watchlist from './Watchlist'\r\nimport OrderBook from './OrderBook'\r\nimport OrderPlaceSymbol from './OrderPlaceSymbol'\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '0%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(70),\r\n    },\r\n  },\r\n  dialogPaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(70),\r\n  },\r\n  wpaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(40),\r\n    height: theme.spacing(80),\r\n  },\r\n\r\n  textfeild : {\r\n    margin : \"10px\",\r\n    width :\"300px\"\r\n  },\r\n  button : {\r\n    margin : \"10px\",\r\n    width :\"300px\"\r\n  },\r\n  dialogtitle : {\r\n      fontSize : \"50px\",\r\n      align : 'center'  \r\n  },\r\n  header : {\r\n    margin : \"0px\",\r\n    fontSize : \"20px\",\r\n    fontWeight : \"bold\",\r\n    fontStyle : \"italic\",\r\n  },\r\n  title : {\r\n      fontSize : \"35px\",\r\n      fontWeight : \"bold\",\r\n      color : \"blue\"\r\n  },\r\n  subtitle : {\r\n    fontSize : \"30px\",\r\n    fontWeight : \"bold\",\r\n    color : \"black\"\r\n  },\r\n  subsubtitle : {\r\n    fontSize : \"25px\",\r\n    fontWeight : \"bold\"\r\n  },\r\n  select : {\r\n    variant : \"outlined\",\r\n    width : \"140px\"\r\n  },\r\n  paper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(28),\r\n    height: theme.spacing(20),\r\n  },\r\n  color1 : {\r\n    fontSize : \"25px\",\r\n    fontWeight : \"bold\",\r\n    color : \"green\"\r\n  },\r\n  color2 : {\r\n    fontSize : \"25px\",\r\n    fontWeight : \"bold\",\r\n    color : \"red\"\r\n  }\r\n\r\n});\r\nconst symbols = [\"NIFTY 50\",\"NIFTY BANK\"]\r\nclass PermanentSymbols extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        prices : {},\r\n        symbols : []\r\n      };\r\n    }   \r\n    y = (res) => {\r\n      fetch('/api/data/symbols/price/add', {\r\n          method : 'post',\r\n          headers: {'Content-Type':'application/json'},\r\n          body : JSON.stringify({\r\n              \"symbols\" : res.symbols\r\n          })\r\n      })\r\n      .then(res3 => res3.json())\r\n      .then(res3 => {   \r\n          var prices2 = {}\r\n          for(var i = 0; i < res.symbols.length;i++){\r\n            prices2[res.symbols[i]] = {\r\n              \"ltp\":0,\r\n              \"prev_close\":2\r\n            } \r\n          }\r\n          this.setState({\r\n            prices : {...this.state.prices,...prices2}\r\n          },()=>{\r\n            //this.addSymbols(res.symbols)\r\n            this.setState({symbols:[...this.state.symbols, ...res.symbols]})                     \r\n          })\r\n      })\r\n      .catch(err => {\r\n          this.setState({error:err.msg})\r\n      });\r\n    }\r\n    componentDidUpdate(props,state) {\r\n        if(this.props.prices != props.prices){\r\n          this.setState({prices:{...this.state.prices,...this.props.prices}})\r\n        }\r\n    }\r\n    componentDidMount() {\r\n      var res = {}\r\n      res['symbols'] = symbols\r\n      this.y(res)\r\n      this.props.addSymbols(symbols)\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <br></br>\r\n                <Grid container spacing={0}>\r\n                          {this.state.symbols.map((symbol)=>(\r\n                    <Grid item xs={4}>\r\n                    <Paper className={classes.paper} elevation={0}>\r\n                        <Grid container spacing={0}>\r\n                              <Grid item xs={12}>\r\n                                  <Typography className={classes.title}>{symbol}</Typography>                            \r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                  <Typography className={classes.subtitle}>{this.state.prices[symbol].ltp}</Typography>                            \r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                  <Grid container spacing={0}>\r\n                                      <Grid item xs={4}>\r\n                                        {this.state.prices[symbol].ltp-this.state.prices[symbol].prev_close>=0?(\r\n                                          <Typography className={classes.color1}>{Math.floor((this.state.prices[symbol].ltp-this.state.prices[symbol].prev_close)*100)/100}</Typography>                    \r\n                                        ):(\r\n                                          <Typography className={classes.color2}>{Math.floor((this.state.prices[symbol].ltp-this.state.prices[symbol].prev_close)*100)/100}</Typography>                    \r\n                                        )}\r\n                                      </Grid>\r\n                                      <Grid item xs={4}></Grid>\r\n                                      <Grid item xs={3}>\r\n                                        {this.state.prices[symbol].ltp-this.state.prices[symbol].prev_close>=0?(\r\n                                          <Typography className={classes.color1}>{Math.floor((this.state.prices[symbol].ltp-this.state.prices[symbol].prev_close)/this.state.prices[symbol].prev_close*10000)/100}</Typography>                    \r\n                                        ):(\r\n                                          <Typography className={classes.color2}>{Math.floor(((this.state.prices[symbol].ltp-this.state.prices[symbol].prev_close)/this.state.prices[symbol].prev_close)*10000)/100} </Typography>                    \r\n                                        )}\r\n                                      </Grid>\r\n                                      <Grid item xs={1}>\r\n                                        {this.state.prices[symbol].ltp-this.state.prices[symbol].prev_close>=0?(\r\n                                          <Typography className={classes.color1}>%</Typography>                    \r\n                                        ):(\r\n                                          <Typography className={classes.color2}>%</Typography>                    \r\n                                        )}\r\n                                      </Grid>                                    \r\n                                    </Grid>\r\n                              </Grid>\r\n                          </Grid>                        \r\n                          </Paper>\r\n                          \r\n                    </Grid>\r\n                          )\r\n                          )}\r\n                    <Grid item xs={4}>\r\n                    <Paper className={classes.paper} elevation={0}>\r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className={classes.title}>funds</Typography>                            \r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className={classes.subtitle}>{Math.floor(this.props.userFund.F*100)/100}</Typography>                            \r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container spacing={0}>\r\n                                      <Grid item xs={4}>\r\n                                        {this.props.userFund.F-this.props.userFund.PF>=0?(\r\n                                          <Typography className={classes.color1}>{Math.floor((this.props.userFund.F-this.props.userFund.PF)*100)/100}</Typography>                    \r\n                                        ):(\r\n                                          <Typography className={classes.color2}>{Math.floor((this.props.userFund.F-this.props.userFund.PF)*100)/100}</Typography>                    \r\n                                        )}\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(PermanentSymbols);","// React \r\nimport React, {Component} from 'react';\r\nimport cookie from \"react-cookies\";\r\n\r\n// Material ui\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Link from '@material-ui/core/Link';\r\nimport SymbolPrice from './SymbolPrice'\r\nimport OrderPlace from './OrderPlace';\r\nimport Watchlist from './Watchlist'\r\nimport OrderBook from './OrderBook'\r\nimport PermanentSymbols from './PermanentSymbols'\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '0%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(70),\r\n    },\r\n  },\r\n  dialogPaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(70),\r\n  },\r\n  wpaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(40),\r\n    height: theme.spacing(80),\r\n  },\r\n\r\n  textfeild : {\r\n    margin : \"10px\",\r\n    width :\"300px\"\r\n  },\r\n  button : {\r\n    margin : \"10px\",\r\n    width :\"300px\"\r\n  },\r\n  dialogtitle : {\r\n      fontSize : \"50px\",\r\n      align : 'center'  \r\n  },\r\n  header : {\r\n    margin : \"0px\",\r\n    fontSize : \"20px\",\r\n    fontWeight : \"bold\",\r\n    fontStyle : \"italic\",\r\n  },\r\n  title : {\r\n    flexGrow : \"1\",\r\n  },\r\n  select : {\r\n    variant : \"outlined\",\r\n    width : \"140px\"\r\n  }\r\n});\r\n\r\nclass UserDashboard extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        loggedIn : false,\r\n        error : '',\r\n        user : {\r\n            username : '',\r\n        },\r\n        symbols:[],\r\n        funds : 0,\r\n        userFund : {},\r\n        com : 0,\r\n        activeOrders:[],\r\n        data:{},\r\n        markets : {\r\n          \"EQ\":\"no\",\r\n          \"FO\":\"no\",\r\n          \"MCX\":\"no\"\r\n        },\r\n        prices : {}\r\n      };\r\n    }\r\n    checkLogin = () => {\r\n      var username = cookie.load('username')\r\n      var hashval = cookie.load('hashval')\r\n      if(username){\r\n      }else{\r\n        username = ''\r\n      }\r\n      if(hashval){\r\n      }else{\r\n        hashval = ''\r\n      }\r\n\r\n      fetch('/api/user/hashval', {\r\n        method : 'post',\r\n        headers: {'Content-Type':'application/json'},\r\n        body : JSON.stringify({\r\n            \"username\" : username,\r\n            \"hashval\" : hashval\r\n        })\r\n      })\r\n      .then(res=>res.json())\r\n      .then(res=>{\r\n        if(res.code == 200){\r\n          this.setState({\r\n            loggedIn:true,\r\n            user : {\r\n              ...this.state.user,\r\n              ['username'] : username\r\n            }\r\n          },()=>{\r\n            this.getFunds()\r\n          })\r\n        }else{\r\n          this.setState({error:res.msg})\r\n        }\r\n      })\r\n      .catch(err=>{\r\n        this.setState({error:err.msg})\r\n      })\r\n    }\r\n    getFunds = () => {\r\n      var username = cookie.load('username')\r\n      var hashval = cookie.load('hashval')\r\n      if(username){\r\n      }else{\r\n        username = ''\r\n      }\r\n      if(hashval){\r\n      }else{\r\n        hashval = ''\r\n      }\r\n\r\n      fetch('/api/user/funds/get', {\r\n        method : 'post',\r\n        headers: {'Content-Type':'application/json'},\r\n        body : JSON.stringify({\r\n            \"username\":username,\r\n            \"hashval\":hashval\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n          if(res.code==200){\r\n              this.setState({userFund:res.data})\r\n          }\r\n      })\r\n      .catch(err => {\r\n          this.setState({error:err.msg})\r\n      });\r\n    }\r\n\r\n    marketStatus = () => {\r\n      fetch('/api/user/market', {\r\n        method : 'get',\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({markets:res})\r\n      })\r\n      .catch(err => {\r\n        this.setState({error:err.msg})\r\n      });\r\n    }\r\n    handleLogout = () => {\r\n      var username = cookie.load('username')\r\n      var hashval = cookie.load('hashval')\r\n      if(username){\r\n      }else{\r\n        username = ''\r\n      }\r\n      if(hashval){\r\n      }else{\r\n        hashval = ''\r\n      }\r\n\r\n      fetch('/api/user/logout', {\r\n          method : 'post',\r\n          headers: {'Content-Type':'application/json'},\r\n          body : JSON.stringify({\r\n              \"username\":username,\r\n              \"hashval\":hashval\r\n          })\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n          if(res.code==200){\r\n              this.setState({loggedIn:false})\r\n          }\r\n      })\r\n      .catch(err => {\r\n          this.setState({error:err.msg})\r\n      });\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        this.checkLogin()\r\n        this.marketStatus()\r\n        this.interval = setInterval(() => this.tick(), 10000);\r\n    }\r\n\r\n    addSymbols = (s) => {\r\n      fetch('/api/data/symbols/price/add', {\r\n        method : 'post',\r\n        headers: {'Content-Type':'application/json'},\r\n        body : JSON.stringify({\r\n          \"symbols\":s\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        var prices2 = {}\r\n        for(var i=0;i<s.length;i++){\r\n          prices2[s[i]] = {\r\n            'ltp':'-',\r\n            'prev_close':1\r\n          }\r\n        }\r\n        this.setState({prices:{...prices2,...this.state.prices}},()=>{\r\n          this.setState({symbols:[...this.state.symbols,...s]})\r\n        })              \r\n      })\r\n      .catch(err => {\r\n          this.setState({error:err.msg})\r\n      });\r\n    }\r\n\r\n    removeSymbol = (s) => {\r\n      this.setState({symbols:this.state.symbols.filter(item=>item!=s)})\r\n    }\r\n    \r\n    removeSymbols = (s) => {\r\n        for(var i=0;i<s.length;i++){\r\n            this.setState({symbols:this.state.symbols.filter(item=>item!=s[i])})\r\n        }\r\n    }\r\n    \r\n    changePrice = (prices) => {\r\n      this.setState({prices:prices})\r\n    }\r\n\r\n    passOrder = (data) => {\r\n      this.setState({data:data})\r\n    }\r\n    \r\n    changeFund = (fund) => {\r\n      this.setState({\r\n        userFund:{\r\n          ...this.state.userFund,\r\n          F:this.state.userFund.F + fund\r\n        }\r\n      })\r\n    }\r\n\r\n    setActiveOrders = (data) => {\r\n      this.setState({activeOrders:data})\r\n    }\r\n\r\n    tick = () => {\r\n      fetch('/api/data/symbols/price/get', {\r\n        method : 'post',\r\n        headers: {'Content-Type':'application/json'},\r\n        body : JSON.stringify({\r\n          \"symbols\":this.state.symbols\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n\r\n        this.setState({prices:{...this.state.prices,...res.prices}})\r\n      })\r\n      .catch(err => {\r\n          this.setState({error:err.msg})\r\n      });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      clearInterval(this.tick)\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if(this.state.loggedIn == false) {\r\n            return (\r\n                <div>\r\n                    <Link href=\"/user/login\"> Click to Login page</Link>\r\n                </div>  \r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <AppBar position=\"static\" className={classes.header}>\r\n                        <Toolbar>\r\n                          <Typography className={classes.title}>\r\n                              Welcome, {this.state.user.username}\r\n                          </Typography>\r\n                          <OrderPlace></OrderPlace>\r\n                          <Button color=\"inherit\" align='right'>Order Placed</Button>\r\n                          <Button color=\"inherit\" align='right'>Profile</Button>\r\n                          <Button color=\"inherit\" align='right' onClick={this.handleLogout}>Logout</Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Grid container spacing ={1}>\r\n                        <Grid item xs={4}>\r\n                            <Grid container spacing={1}>\r\n                                <Watchlist \r\n                                    userFund={this.state.userFund} \r\n                                    markets={this.state.markets} \r\n                                    prices={this.state.prices}\r\n                                    activeOrders ={this.state.activeOrders}\r\n                                    addSymbols={this.addSymbols}\r\n                                    changeFund={this.changeFund}\r\n                                    removeSymbols={this.removeSymbols} \r\n                                    removeSymbol={this.removeSymbol} \r\n                                    passOrder={this.passOrder}>    \r\n                                </Watchlist>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                    <PermanentSymbols \r\n                                      addSymbols={this.addSymbols} \r\n                                      prices={this.state.prices} \r\n                                      userFund={this.state.userFund} \r\n                                      funds={this.state.funds}></PermanentSymbols>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <OrderBook data={this.state.data} \r\n                                      com={this.state.com} \r\n                                      changeFund={this.changeFund} \r\n                                      prices={this.state.prices}\r\n                                      setActiveOrders={this.setActiveOrders}></OrderBook>                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(UserDashboard);","// React \r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '5%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(70),\r\n    },\r\n  },\r\n  title : {\r\n    padding : \"30px\",\r\n    margin : \"10px\"\r\n  },\r\n  field : {\r\n    margin : \"10px\",\r\n  },\r\n  textfield : {\r\n    margin : \"10px\",\r\n    width :\"300px\"\r\n  },\r\n  link : {\r\n    align : \"right\",\r\n  }\r\n});\r\n\r\nclass UserLogin extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        user: {\r\n          username :'',\r\n          password:''\r\n        },\r\n        loggedIn : false,\r\n        rememberMe : false,\r\n        error : ''\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      var username = cookie.load('username')\r\n      var hashval = cookie.load('hashval')\r\n      if(username){\r\n      }else{\r\n        username = ''\r\n      }\r\n      if(hashval){\r\n      }else{\r\n        hashval = ''\r\n      }\r\n      fetch('/api/user/hashval', {\r\n        method : 'post',\r\n        headers: {'Content-Type':'application/json'},\r\n        body : JSON.stringify({\r\n            \"username\" : username,\r\n            \"hashval\" : hashval\r\n        })\r\n      })\r\n      .then(res=>res.json())\r\n      .then(res=>{\r\n        if(res.code == 200){\r\n          this.setState({loggedIn:true})\r\n        }else{\r\n          this.setState({error:res.msg})\r\n        }\r\n      })\r\n      .catch(err=>{\r\n        this.setState({error:err.msg})\r\n      })\r\n    }\r\n\r\n    handleChangeUsername = (e) => {\r\n        this.setState(prevState => ({\r\n            user:{\r\n              ...prevState.user,\r\n              ['username']: e.target.value\r\n            }\r\n          }));\r\n    }\r\n    handleChangePassword = (e) => {\r\n        this.setState(prevState => ({\r\n            user:{\r\n              ...prevState.user,\r\n              ['password']: e.target.value\r\n            }\r\n          }));\r\n    }\r\n    handleRemember = (e) => {\r\n      this.setState({rememberMe:e.target.checked})\r\n    }\r\n    handleSubmit = (e) => {\r\n        fetch('/api/user/login', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\" : this.state.user.username,\r\n                \"password\" : this.state.user.password\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code == 200){  \r\n              this.setState({loggedIn:true})\r\n              cookie.save('username',res.username,{path: '/',maxAge: 30000})\r\n              cookie.save('hashval',res.val,{path: '/',maxAge: 30000})\r\n            } else {\r\n              this.setState({error:res.msg})\r\n            }\r\n        })\r\n        .catch(err => {\r\n          alert(err.msg)\r\n          this.setState({error:err.msg})\r\n        });\r\n    }\r\n    render() {\r\n      const { classes } = this.props;\r\n      return (\r\n        <div className={classes.root}>\r\n          <Paper elevation={5} align='center'>\r\n            <Typography className={classes.title} align='center' color='primary' variant='h4'> Sing in</Typography>\r\n            <TextField className={classes.textfield} variant='outlined' align='center' color='primary' size='medium' value={this.state.user.username} label=\"Username\" onChange={this.handleChangeUsername}></TextField>\r\n            <br></br>\r\n            <TextField className={classes.textfield} variant='outlined' align='center' color='primary' size='medium' value={this.state.user.password} label=\"Password\" type=\"password\" onChange={this.handleChangePassword}></TextField>\r\n            <br></br>\r\n            <Link href=\"/user/signup\">Create Account</Link>\r\n            <br></br>\r\n            <Link href=\"/user/signup\">Forgot Password</Link>\r\n            <br></br>\r\n            <Checkbox id=\"c\" label=\"Remember me\" checked={this.rememberMe} onChange={this.handleRemember}>Remembber Me </Checkbox>\r\n\r\n            <InputLabel for=\"c\">Remeber Me</InputLabel>\r\n            <Button className={classes.field} size=\"large\" variant=\"contained\" color=\"default\" type=\"submit\" label=\"submit\" onClick={this.handleSubmit}> Sign In </Button>\r\n            <br></br>\r\n            {this.state.loggedIn?(\r\n              <div>\r\n              <Switch>\r\n                  <Redirect from=\"/user/login\" to=\"/user/dashboard\"></Redirect>\r\n              </Switch>\r\n              </div>\r\n          ):(<Typography>{this.error}</Typography>)}\r\n\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(UserLogin);","// React \r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '5%',\r\n      width: theme.spacing(80),\r\n      height: theme.spacing(80),\r\n    },\r\n  },\r\n  title : {\r\n    padding : \"30px\",\r\n    margin : \"10px\"\r\n  },\r\n  field : {\r\n    margin : \"10px\",\r\n  },\r\n  textfield : {\r\n    margin : \"10px\",\r\n    width :\"350px\"\r\n  },\r\n  link : {\r\n    align : \"right\",\r\n  }\r\n});\r\n\r\nclass UserSignup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        name : '',\r\n        username :'',\r\n        password:'',\r\n        cpassword:'',\r\n        secretcode : ''\r\n      },\r\n      loggedIn : false,\r\n      rememberMe : false,\r\n      error : ''\r\n    };\r\n  }\r\n  handleChangeUsername = (e) => {\r\n      this.setState(prevState => ({\r\n          user:{\r\n            ...prevState.user,\r\n            ['username']: e.target.value\r\n          }\r\n        }));\r\n  }\r\n  handleChangeName = (e) => {\r\n    this.setState(prevState => ({\r\n        user:{\r\n          ...prevState.user,\r\n          ['name']: e.target.value\r\n        }\r\n      }));\r\n  }\r\n  handleChangePassword = (e) => {\r\n      this.setState(prevState => ({\r\n          user:{\r\n            ...prevState.user,\r\n            ['password']: e.target.value\r\n          }\r\n        }));\r\n  }\r\n  handleChangeCPassword = (e) => {\r\n    this.setState(prevState => ({\r\n        user:{\r\n          ...prevState.user,\r\n          ['cpassword']: e.target.value\r\n        }\r\n      }));\r\n  }\r\n  handleChangeSecretCode = (e) => {\r\n    this.setState(prevState => ({\r\n        user:{\r\n          ...prevState.user,\r\n          ['secretcode']: e.target.value\r\n        }\r\n      }));\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n      fetch('/api/user/signup', {\r\n          method : 'post',\r\n          headers: {'Content-Type':'application/json'},\r\n          body : JSON.stringify({\r\n              \"password\" : this.state.user.password,\r\n              \"username\" : this.state.user.username,\r\n              \"cpassword\" : this.state.user.cpassword,\r\n              \"secretcode\" : this.state.user.secretcode,\r\n              \"name\" : this.state.user.name,\r\n          })\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n          if(res.code == 200){  \r\n            this.setState({loggedIn:true})\r\n          } else {\r\n            this.setState({error:res.msg})\r\n          }\r\n      })\r\n      .catch(err => {\r\n        this.setState({error:err.msg})\r\n      });\r\n  }\r\n    render() {\r\n      const { classes } = this.props;\r\n      return (\r\n        <div className={classes.root}>\r\n          <Paper elevation={5} align='center'>\r\n            <Typography className={classes.title} align='center' color='primary' variant='h4'> Sing Up</Typography>\r\n            <TextField className={classes.textfield} variant='outlined' align='center' color='primary' size='medium' value={this.state.user.name} label=\"Name\" onChange={this.handleChangeName}></TextField>\r\n            <TextField className={classes.textfield} variant='outlined' align='center' color='primary' size='medium' value={this.state.user.username} label=\"Username\" onChange={this.handleChangeUsername}></TextField>\r\n            <TextField className={classes.textfield} variant='outlined' align='center' color='primary' size='medium' value={this.state.user.secretcode} label=\"SecretCode\" onChange={this.handleChangeSecretCode}></TextField>\r\n            <TextField className={classes.textfield} variant='outlined' align='center' color='primary' size='medium' value={this.state.user.password} label=\"Password\" type=\"password\" onChange={this.handleChangePassword}></TextField>\r\n            <TextField className={classes.textfield} variant='outlined' align='center' color='primary' size='medium' value={this.state.user.cpassword} label=\"Confirm password\" type=\"password\" onChange={this.handleChangeCPassword}></TextField>\r\n            <br></br>\r\n            <Link href=\"/user/signin\">Already Account</Link>\r\n            <br></br>\r\n            <Button className={classes.field} size=\"large\" variant=\"contained\" color=\"default\" type=\"submit\" label=\"submit\" onClick={this.handleSubmit}> Sign Up </Button>\r\n            <br></br>\r\n            {this.state.loggedIn?(\r\n              <div>\r\n              <Switch>\r\n                  <Redirect from=\"/user/signup\" to=\"/user/login\"></Redirect>\r\n              </Switch>\r\n              </div>\r\n          ):(<Typography>{this.error}</Typography>)}\r\n\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(UserSignup);","// React \r\nimport React, {Component,useEffect} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Container from '@material-ui/core/Container'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport CheckBox from '@material-ui/core/Checkbox'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Link from '@material-ui/core/Link';\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\n\r\nimport SymbolPrice from './SymbolPrice'\r\nvar styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin : '0%',\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(70),\r\n    },\r\n  },\r\n  dialogPaper : {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(50),\r\n  },\r\n  textfeild : {\r\n    margin : \"0px\",\r\n    width :\"60px\"\r\n  },\r\n  textfield2 : {\r\n      width : \"120px\"\r\n  },\r\n  button : {\r\n    width :\"80px\"\r\n  },\r\n  dialogtitle : {\r\n      fontSize : \"0px\",\r\n      align : 'center'  \r\n  },\r\n  header : {\r\n    margin : \"0px\",\r\n    fontSize : \"20px\",\r\n    fontWeight : \"bold\",\r\n    fontStyle : \"italic\",\r\n  },\r\n  title : {\r\n    flexGrow : \"1\",\r\n  },\r\n  select : {\r\n    variant : \"outlined\",\r\n    width : \"200px\"\r\n  },\r\n  sell : {\r\n      color : \"default\",\r\n  }\r\n  \r\n});\r\n\r\nclass SetFunds extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          open : {\r\n              'setfunds':false\r\n          },\r\n          username : '',\r\n          users : [],\r\n          userfunds : {\r\n              'F' : 1000000,\r\n              'LINTRAEQ':5,\r\n              'LCNCEQ':2, \r\n              'LINTRAFUTBUY':50,\r\n              'LINTRAFUTSELL':50,\r\n              'LCNCFUTBUY':25, \r\n              'LINTRAOPBUY':5,\r\n              'LINTRAOPSELL':50,\r\n              'LCNCOPBUY':2,\r\n              'COMEQ':0.03,\r\n              'COMFUT':40,\r\n              'COMOP':40,             \r\n          }\r\n          \r\n      };\r\n    }\r\n    componentDidMount() {\r\n        fetch('/api/user/get/all', {\r\n            method : 'get',\r\n            headers: {'Content-Type':'application/json'},\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            this.setState({users:res[\"users\"]})\r\n        })\r\n        .catch(err => {\r\n          this.setState({error:err.msg})\r\n        });\r\n    }\r\n    \r\n    handleCloseDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['setfunds']: false\r\n            }\r\n        }));\r\n    }\r\n    handleOpenDialog = () => {\r\n        this.setState(prevState => ({\r\n            open:{\r\n              ...prevState.open,\r\n              ['setfunds']: true\r\n            }\r\n        }));\r\n    }\r\n    \r\n    handleChangeFunds = (e) => {\r\n        this.setState(prevState => ({\r\n            userfunds:{\r\n              ...prevState.userfunds,\r\n              [e.target.id]: e.target.value\r\n            }\r\n        }));\r\n    }\r\n    handleSubmit = () =>{\r\n        var email = cookie.load('adminemail')\r\n        var hashval = cookie.load('adminhashval')\r\n        if(email){\r\n        }else{\r\n            email = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n            hashval = ''\r\n        }\r\n\r\n        var data = this.state.userfunds\r\n        for(var key in data){\r\n            data[key] = parseFloat(data[key])\r\n        }\r\n        fetch('/api/admin/user/funds/set', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"email\":email,\r\n                \"hashval\":hashval,\r\n                \"username\":this.state.username,\r\n                \"data\":data\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n    handleSelectUsers = (e) => {\r\n        this.setState({'username':e.target.value})\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button id=\"setuserfunds\" onClick={this.handleOpenDialog} size=\"Large\" variant=\"outlined\" color=\"primary\">\r\n                    Set User Funds & Levrages\r\n                </Button>\r\n                <Dialog disableBackdropClick disableEscapeKeyDown \r\n                open={this.state.open.setfunds} \r\n                onClose={this.handleCloseDialog}\r\n                aria-labelledby=\"p\">\r\n                <DialogTitle id=\"p\" >\r\n                    <Toolbar>\r\n                        <div className={classes.title}> \r\n                            Set User Funds & Levrages\r\n                        </div>\r\n                        <TextField size=\"small\" default variant=\"outlined\" label=\"Username\" value={this.state.username}></TextField>\r\n                    </Toolbar>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className={classes.dialogPaper}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <InputLabel id=\"Username\">Username</InputLabel>\r\n                                        <Select className={classes.select}\r\n                                        labelId=\"username\"\r\n                                        id=\"username\"\r\n                                        label=\"Users\"\r\n                                        onChange={this.handleSelectUsers}\r\n                                        >\r\n                                        {this.props.users.map(user => (\r\n                                            <MenuItem value={user}>{user}</MenuItem>\r\n                                        ))}\r\n                                        </Select>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Funds </Typography>\r\n                                    <TextField value={this.state.userfunds.F} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"F\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <br></br>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Lev-EQ-INTRA </Typography>\r\n                                    <TextField value={this.state.userfunds.LINTRAEQ} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"LINTRAEQ\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Lev-EQ-CNC </Typography>\r\n                                    <TextField value={this.state.userfunds.LCNCEQ} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"LCNCEQ\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}></Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Lev-FUT-INTRA-Buy </Typography>\r\n                                    <TextField value={this.state.userfunds.LINTRAFUTBUY} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"LINTRAFUTBUY\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Lev-FUT-INTRA-Sell </Typography>\r\n                                    <TextField value={this.state.userfunds.LINTRAFUTSELL} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"LINTRAFUTSELL\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Lev-FUT-CNC-Buy </Typography>\r\n                                    <TextField value={this.state.userfunds.LCNCFUTBUY} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"LCNCFUTBUY\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Lev-OP-INTRA-Buy </Typography>\r\n                                    <TextField value={this.state.userfunds.LINTRAOPBUY} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"LINTRAOPBUY\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Lev-OP-INTRA-Sell </Typography>\r\n                                    <TextField value={this.state.userfunds.LINTRAOPSELL} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"LINTRAOPSELL\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Lev-OP-CNC-Buy </Typography>\r\n                                    <TextField value={this.state.userfunds.LCNCOPBUY} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"LCNCOPBUY\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Com-EQ </Typography>\r\n                                    <TextField value={this.state.userfunds.COMEQ} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"COMEQ\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Com-FUT </Typography>\r\n                                    <TextField value={this.state.userfunds.COMFUT} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"COMFUT\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography >Com-OP </Typography>\r\n                                    <TextField value={this.state.userfunds.COMOP} type=\"Number\" size=\"small\" default variant=\"outlined\" id=\"COMOP\" onChange={this.handleChangeFunds}></TextField>                        \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify=\"center\">\r\n                                    <div>\r\n                                        <Button type=\"submit\" onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">Set Funds</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCloseDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n        )\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(SetFunds);","\r\n// React \r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Container from '@material-ui/core/Container'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport CheckBox from '@material-ui/core/Checkbox'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nclass SetUser extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        funds: {\r\n          'LCNCEQ' : 1,\r\n          'FCNCEQ' : 0,\r\n          'LCNCFO' : 1,\r\n          'FCNCFO' : 0,\r\n          'LINTRAEQ' : 3,\r\n          'FINTRAEQ' : 0,\r\n          'LINTRAFO' : 3,\r\n          'FINTRAFO' : 0 \r\n        },\r\n        user : {\r\n            'email':''\r\n        },\r\n        users : [],\r\n        error : ''\r\n      };\r\n    }\r\n    componentDidMount() {\r\n    \r\n        var email = cookie.load('adminemail')\r\n        var hashval = cookie.load('adminhashval')\r\n        if(email){\r\n  \r\n        }else{\r\n            email = ''\r\n        }\r\n  \r\n        if(hashval){\r\n        }else{\r\n            hashval = ''\r\n        }\r\n  \r\n        fetch('/api/users/all', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"email\" : email,\r\n                \"hashval\" : hashval\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            if(res.code==200){\r\n                this.setState({users:res.users})\r\n            }else{\r\n                this.setState({error:res.msg})\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            this.setState({error:err.msg})\r\n        })\r\n    }\r\n\r\n    handleChangeEmail = (e) => {\r\n        this.setState(prevState => ({\r\n            user:{\r\n              ...prevState.user,\r\n              ['email']: e.target.value\r\n            }\r\n          }));\r\n    }\r\n    handleSubmit = (e) => {\r\n        fetch('/api/user/login', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"email\" : this.state.user.email,\r\n                \"password\" : this.state.user.password\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code == 200){  \r\n              this.setState({loggedIn:true})\r\n              cookie.save('email',res.email,{path: '/',maxAge: 10000})\r\n              cookie.save('hashval',res.val,{path: '/',maxAge: 10000})\r\n            } else {\r\n              this.setState({error:res.msg})\r\n            }\r\n        })\r\n        .catch(err => {\r\n          this.setState({error:err.msg})\r\n        });\r\n    }\r\n    handleChangeEmail = (e) => {\r\n        this.setState(prevState => ({\r\n            user:{\r\n              ...prevState.user,\r\n              ['email']: e.target.value\r\n            }\r\n          }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper width=\"50%\">\r\n                    <InputLabel id=\"demo-simple-select-label\">User</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChangeEmail}\r\n                    >\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n  export default SetUser;","// React \r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport {TableRow, TableBody,TableCell,Table,TableContainer,TableHead,Paper, requirePropFactory} from '@material-ui/core'\r\nimport { Fragment } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SetUser  from './SetUser';\r\nimport SetFunds from './SetFunds'\r\n\r\nconst writeFileP = require(\"write-file-p\");\r\n\r\nvar styles = theme => ({\r\n    button :{\r\n        width :\"25%\"\r\n    },\r\n    orderbook : {\r\n        height : \"100px\"\r\n    },\r\n    container :{\r\n        maxHeight :\"350px\"\r\n    },  \r\n    color1 : {\r\n        fontWeight : \"bold\",\r\n        color : \"green\"\r\n    },\r\n    color2 : {\r\n        fontWeight : \"bold\",\r\n        color : \"red\"\r\n    }\r\n});\r\n\r\nfunction Update_symbols(p) {\r\n    let user = {\r\n        \"EQLIST\":[],\r\n        \"FOLIST\":[],\r\n        \"COMLIST\":[],\r\n    }\r\n    let data = {}\r\n    data = {...data,...user}\r\n    //writeJsonFile(\"./live_data.json\",{foo:true})\r\n}\r\n  \r\nclass AdminDashboard extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        user: {\r\n          email :'',\r\n          username:''\r\n        },\r\n        errors: {\r\n            adduser: ''\r\n        },\r\n        users : [],\r\n        open:false,\r\n        loggedIn : false,\r\n        rememberMe : false,\r\n        error : '',\r\n        adduserclick:false,\r\n        NSE:\"yes\",\r\n        MCX:\"yes\"\r\n      };\r\n    }\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.tick(), 10000);\r\n\r\n        var email = cookie.load('adminemail')\r\n        var hashval = cookie.load('adminhashval')\r\n        if(email){\r\n        }else{\r\n            email = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n            hashval = ''\r\n        }\r\n        fetch('/api/admin/user/get/all/list', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"email\":email,\r\n                \"hashval\":hashval\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {     \r\n            if(res.code == 200){\r\n                this.setState({users:res.data})\r\n            }\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        //this.calculateMargin()\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.tick)\r\n    }\r\n    handleAdduser = (e) => {\r\n        this.setState({adduserclick:true})\r\n    }\r\n    handleChangeUsername = (e) => {\r\n        this.setState(prevState => ({\r\n            user:{\r\n              ...prevState.user,\r\n              ['username']: e.target.value\r\n            }\r\n        }));\r\n    }\r\n    handleSendClick = () => {\r\n        var email = cookie.load('adminemail')\r\n        var hashval = cookie.load('adminhashval')\r\n        if(email){\r\n        }else{\r\n            email = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n            hashval = ''\r\n        }\r\n  \r\n        fetch('/api/admin/user/add', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"requestedEmail\" : this.state.user.email,\r\n                \"username\" : this.state.user.username,\r\n                \"email\":email,\r\n                \"hashval\":hashval\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code != 200){\r\n                this.setState(prevState => ({\r\n                    errors:{\r\n                      ...prevState.errors,\r\n                      ['adduser']: res.msg\r\n                    }\r\n                }));\r\n            }\r\n            else{\r\n                this.setState(prevState => ({\r\n                    errors:{\r\n                      ...prevState.errors,\r\n                      ['adduser']: ''\r\n                    }\r\n                }));    \r\n            }\r\n        })\r\n        .catch(err => {\r\n            this.setState(prevState => ({\r\n                errors:{\r\n                    ...prevState.errors,\r\n                    ['adduser']: err.msg\r\n                }\r\n            }));\r\n        });\r\n        this.setState({adduserclick:false});\r\n    }\r\n    handleClickOpen = () => {\r\n        this.setState({open:true});\r\n    };\r\n    handleChangeEmail = (e) => {\r\n        this.setState({\r\n            user : {\r\n                ...this.state.user,\r\n                ['email']:e.target.value\r\n            }\r\n        })\r\n    }\r\n    handleDeleteUser = (e) => {\r\n        var email = cookie.load('adminemail')\r\n        var hashval = cookie.load('adminhashval')\r\n        if(email){\r\n        }else{\r\n            email = ''\r\n        }\r\n        if(hashval){\r\n        }else{\r\n            hashval = ''\r\n        }\r\n  \r\n        fetch('/api/admin/user/remove', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"username\" : e.target.value,\r\n                \"email\":email,\r\n                \"hashval\":hashval\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code == 200){\r\n\r\n                //                this.setState({userList:this.state.userList.filter((user)=>user!=e.target.value)})\r\n            }\r\n        })\r\n        .catch(err => {\r\n            alert(err)\r\n        });        \r\n    }\r\n    tick = () => {\r\n        fetch('/api/admin/get/price/all', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {          \r\n \r\n            Update_symbols(res.p)\r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });\r\n    }\r\n\r\n    handleStart = (e) => {\r\n        if(e.target.value == \"NSE\")\r\n            this.setState({NSE:\"yes\"})\r\n        if(e.target.value == \"MCX\")\r\n            this.setState({MCX:\"yes\"})\r\n\r\n        fetch('/api/admin/start/server', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"market\":e.target.value\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {          \r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });        \r\n    }\r\n    handleStop = (e) => {\r\n        if(e.target.value == \"NSE\")\r\n            this.setState({NSE:\"no\"})\r\n        if(e.target.value == \"MCX\")\r\n            this.setState({MCX:\"no\"})\r\n\r\n        fetch('/api/admin/stop/server', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"market\":e.target.value\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {          \r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });        \r\n    }\r\n    handleCloseMarket = (e) => {\r\n        fetch('/api/admin/close/market', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"market\":e.target.value\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {          \r\n        })\r\n        .catch(err => {\r\n            this.setState({error:err.msg})\r\n        });        \r\n    }\r\n    render() {        \r\n    const { classes } = this.props;\r\n      return (\r\n          <div>\r\n              <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container justify=\"center\" spacing={2}>\r\n                            <Grid item xs={3}>\r\n                                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleAdduser}>\r\n                                    Add User\r\n                                </Button>                            \r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                {this.state.adduserclick?(\r\n                                    <TextField  onChange={this.handleChangeEmail} value={this.state.user.email} placeholder=\"Enter email : \">\r\n                                    </TextField>\r\n                                ):(\r\n                                    <Typography>{this.state.errors.adduser}</Typography>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                {this.state.adduserclick?(\r\n                                    <TextField  onChange={this.handleChangeUsername} value={this.state.user.username}placeholder=\"Enter Username : \">\r\n                                    </TextField>\r\n                                ):(\r\n                                    <Typography>{this.state.errors.adduser}</Typography>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                {this.state.adduserclick?(\r\n                                    <Button onClick={this.handleSendClick}>Send Code</Button>\r\n                                ):(\r\n                                    <Typography></Typography>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" spacing={2}>\r\n                        <SetFunds users={this.state.users}></SetFunds>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                <TableContainer component={Paper} className={classes.container}>\r\n                    <Table aria-label='simple table'>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='center' size='medium' >Username</TableCell>\r\n                                <TableCell align='center' size='medium' >Available Funds</TableCell>\r\n                                <TableCell align='center' size='medium' >Provided Funds</TableCell>\r\n                                <TableCell align='center' size='medium' >P/L</TableCell>\r\n                                <TableCell align='center' size='medium' >Remove</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.users.map(user =>(\r\n                                <Fragment>\r\n                                <TableRow>\r\n                                    <TableCell align='center' size='medium'>{user.u}</TableCell>\r\n                                    <TableCell align='center' size='medium'>{user.a}</TableCell>\r\n                                    <TableCell align='center' size='medium'>{user.p}</TableCell>\r\n                                    <TableCell align='center' size='medium'>{(user.a-user.p)} {(user.a-user.p)*100/user.a}%</TableCell>\r\n                                    <TableCell align='center' size='medium'>\r\n                                        <button color=\"secondary\" value={user.u} onClick={this.handleDeleteUser}>Delete</button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                </Fragment>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <button onClick={this.handleStart} value=\"NSE\">Start NSE Market</button>\r\n                    {this.state.NSE == \"yes\" ? (\r\n                        <button value=\"NSE\" onClick={this.handleStop}>Stop Server</button>\r\n                    ) : (<div></div>)}\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <button onClick={this.handleStart} value=\"MCX\">Start MCX Market</button>\r\n                    {this.state.MCX == \"yes\" ? (\r\n                        <button value=\"MCX\" onClick={this.handleStop}>Stop Server</button>\r\n                    ) : (<div></div>)}\r\n                </Grid>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Grid item xs={3}>\r\n                    <button onClick={this.handleCloseMarket} value=\"NSE\">Close All NSE INTRDAY ORDERS</button>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <button onClick={this.handleCloseMarket} value=\"MCX\">Close All MCX INTRDAY ORDERS</button>\r\n                </Grid>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n  export default withStyles(styles, { withTheme: true })(AdminDashboard)\r\n","\r\n// React \r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport cookie from \"react-cookies\";\r\n// Material ui\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass AdminLogin extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        user: {\r\n          email :'',\r\n          password:''\r\n        },\r\n        loggedIn : false,\r\n        rememberMe : false,\r\n        error : ''\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      var email = cookie.load('adminemail')\r\n      var hashval = cookie.load('adminhashval')\r\n      if(email){\r\n\r\n      }else{\r\n          email = ''\r\n      }\r\n\r\n      if(hashval){\r\n\r\n        }else{\r\n            hashval = ''\r\n        }\r\n    fetch('/api/admin/hashval', {\r\n        method : 'post',\r\n        headers: {'Content-Type':'application/json'},\r\n        body : JSON.stringify({\r\n            \"email\" : email,\r\n            \"hashval\" : hashval\r\n        })\r\n      })\r\n      .then(res=>res.json())\r\n      .then(res=>{\r\n        if(res.code == 200){\r\n          this.setState({loggedIn:true})\r\n        }else{\r\n          this.setState({error:res.msg})\r\n        }\r\n      })\r\n      .catch(err=>{\r\n        this.setState({error:err.msg})\r\n      })\r\n    }\r\n\r\n    handleChangeEmail = (e) => {\r\n        this.setState(prevState => ({\r\n            user:{\r\n              ...prevState.user,\r\n              ['email']: e.target.value\r\n            }\r\n          }));\r\n    }\r\n    handleChangePassword = (e) => {\r\n        this.setState(prevState => ({\r\n            user:{\r\n              ...prevState.user,\r\n              ['password']: e.target.value\r\n            }\r\n          }));\r\n    }\r\n    handleRemember = (e) => {\r\n      this.setState({rememberMe:e.target.checked})\r\n    }\r\n    hashpassword = () => {\r\n      return this.state.user.password\r\n    }\r\n    handleSubmit = (e) => {\r\n        fetch('/api/admin/login', {\r\n            method : 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify({\r\n                \"email\" : this.state.user.email,\r\n                \"password\" : this.state.user.password\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.code == 200){  \r\n              this.setState({loggedIn:true})\r\n              cookie.save('adminemail',res.email,{path: '/',maxAge: 10000})\r\n              cookie.save('adminhashval',res.val,{path: '/',maxAge: 10000})\r\n            } else {\r\n              this.setState({error:res.msg})\r\n            }\r\n        })\r\n        .catch(err => {\r\n          this.setState({error:err.msg})\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <Container>\r\n            <Typography>Admin Sing in</Typography>\r\n            <TextField value={this.state.user.email} label=\"email\" onChange={this.handleChangeEmail}></TextField>\r\n            <TextField value={this.state.user.password} label=\"password\" type=\"password\" onChange={this.handleChangePassword}></TextField>\r\n            <Checkbox checked={this.rememberMe} onChange={this.handleRemember}>Remembber Me </Checkbox>\r\n            <Button type=\"submit\" label=\"submit\" onClick={this.handleSubmit}> Sign In </Button>\r\n            {this.state.loggedIn?(\r\n                <div>\r\n                <Switch>\r\n                    <Redirect from=\"/admin/login\" to=\"/admin/dashboard\"></Redirect>\r\n                </Switch>\r\n                </div>\r\n            ):(<Typography>{this.error}</Typography>)}\r\n          </Container>\r\n      );\r\n    }\r\n  }\r\n  export default AdminLogin;","import {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport UserDashboard from './routes/UserDashboard'\nimport UserLogin from './routes/UserLogin';\nimport UserSignup from './routes/Temp';\nimport AdminDashboard from './routes/AdminDashboard'\nimport AdminLogin from './routes/AdminLogin';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/user/dashboard\" component = {UserDashboard}></Route>\n          <Route path=\"/user/login\" component = {UserLogin}></Route>\n          <Route path=\"/user/signup\" component = {UserSignup}></Route>\n          <Route path=\"/admin/dashboard\" component = {AdminDashboard}></Route>\n          <Route path=\"/admin/login\" component = {AdminLogin}></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}